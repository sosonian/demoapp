{"version":3,"sources":["UpBanner/LogoButton.js","UpBanner/LogoAndTitleDiv.js","UpBanner/AutofillList.js","UpBanner/RecordSearchArea.js","UpBanner/UpBanner.js","IntroList/IntroListOption.js","Function/LinkedList.js","IntroList/Category.js","IPAddress.js","IntroList/IntroList.js","Event/DynamicImage.js","Event/EventContainer.js","Footer/Footer.js","Event/EventBody.js","MovieWorkInfo/MovieWorkInfoMainBody.js","Function/HighlightKeywordCell.js","ResultList/ResultRow.js","ResultList/PageSelectFunctionArea.js","ResultList/ResultListMainBody.js","Event/ImageDiv.js","Event/TextDiv.js","Event/CompositionContainer.js","Event/ContainerGroup.js","Event/EventPage.js","Function/FlashCountBadge.js","ChatRoom/ChatRoom.js","ChatRoom/ChatChannel.js","Screenshot/MaskArea.js","Screenshot/ScreenshotPicker.js","Screenshot/ScreenshotContainer.js","Home/GridCell.js","Home/HomeBody.js","APIDoc/APIDocMainPage.js","MainBody/MainBody.js","App.js","serviceWorker.js","index.js","Home/GridContainerRef.js","APIDoc/APIDoc.js","IPAdressModule.js"],"names":["LogoButton","props","getLogoBackgroundClassName","className","IntroListShowOrHide","this","Component","LogoAndTitleDiv","logoOnClickHandler","e","msg","getLogoClick","titleOnClickHandler","getTitleClick","style","height","display","flexDirection","alignItems","justifyContent","onClick","goToFrontPage","color","fontSize","fontFamily","lineHeight","AutofillList","createRecommandWord","state","autofillWord","map","word","index","selectedIndex","getKeyword","Keyword","keyword","console","log","loadAutofillWord","a","fetch","ipAddress","basicSearchWord","json","output","status","Error","message","setState","prevProps","returnKeyword","RecordSearchArea","initialAdvanceSearchState","advanceSearchWord","tempArray","push","initialAdvanceSearchObj","columnName","boolean","operator","onBasicSearchWordInput","stopPropagation","target","value","showAutofillList","selectedAutofillList","handleSearchInfo","type","preventDefault","roughWords","roughParser","outputWords","advanceParser","searchWord","showAdvancedSearchArea","getSearchInfo","text","outputRough","match","roughKeywords","i","length","key","createAdvanceArea","createAdvanceAreaElements","marginTop","getSelectOption","width","margin","addCondition","row","createSelectRow","onChange","changeAdvanceValue","removeCondition","rowIndex","tempObject","Object","assign","splice","newCondition","toggleAutofillList","onKeyDown","border","borderRadius","backgroundColor","UpBanner","searchInfo","redirect","uriQuery","encodeURI","JSON","stringify","url","IntroListOption","getClassName","to","firstRoute","secondRoute","optionID","textDecoration","optionTitle","LinkedListNode","data","next","LinkedList","head","current","node","insertFirst","previous","count","insertLast","targetIndex","tempData","getAt","removeAt","insertAtPrefix","insertAtSurfix","tempNode","clone","tempNodeData","keyName","outputData","Category","createSecondStageOption","categoryList","tempLinkedList","returnLinkedList","option","countI","id","categoryName","route","title","list","cloneL","showOrHide","mode","showCategory","windowResize","categoryTitle","onMouseOver","onMouseLeave","IPAddress","ip","IntroList","initialStaticPage","tempIP","method","finalList","Public_StaticPage_LinkedList","firstStageOptions","appendCategory","categoryID","windowSize","DynamicImage","loadProps","eventImages","image","order","imageUrl","loadImageUrl","loadImageAdjust","tempOrder","imageAdjust","contrast","hue","brightness","saturate","sepia","invert","blur","opacity","transitionSecond","interval","setInterval","transUrl","clearInterval","ImageStyle","backgroundPosition","backgroundSize","backgroundImage","filter","transitionDuration","transitionProperty","EventContainer","fetchEventInfoFromAPI","eventDetail","Event_SysID","statusText","tempAbstractObj","Event_Images","Event_BGImageSettings","Event_Story","Event_SubTitle","Event_Title","eventAbstract","openEventPage","transition","padding","Footer","flexWrap","paddingBottom","paddingTop","MovieWorkInfoMainBody","initialState","movieSysID","params","movie_id","msg1","output1","movieMainInfo","msg3","output3","movieStaffList","msg4","output4","movieActorList","removeSpaceFromString","str","result","replace","getNumberOfFilm","movieFilmList","createFilmRow","film","Film_SysID","Film_Spec","Film_Emulsion","createActorList","createActorRow","createStaffList","createStaffRow","actor","Movie_ActorName","Movie_RoleName","Movie_StaffName","Movie_Company","Movie_Position","Movie_TitleMain","Movie_TitleTranslation","Movie_DramaContent","Movie_SubCategoryOne","Movie_SubCategoryTwo","Movie_Language","Movie_ProductionDate","Movie_Producer","Movie_ProductionCompany","Movie_ProductionLocation","appId","href","colorScheme","showFaces","share","HightlightKeywordCell","getKeywordIndex","keywords","forEach","kIndex","getColor","matchAll","RegExp","element","tempObj","keywordID","sIndex","eIndex","sort","b","getFinalText","keywordArray","story","sliceSIndex","s","suffix","prefix","slice","getText","ResultRow","sysID","rowData","Movie_SysID","getSelectedRow","name","checked","productionDate","productionLocation","productionInfo","PageSelectFunctionArea","changeLimitValue","getPageLimitInfo","Number","changeCurrentPage","getTotalPageNumber","getPageNumberInfo","changeCurrentPageByClick","pageToken","storedPageNumber","leftNumber","totalNumber","Math","floor","storedLimitNumber","storedTotalNumber","ResultListMainBody","initialStateTemp","limitNumber","limit","pageNumber","page","searchType","listData","metaInfo","getRecord","query","parse","decodeURI","initialIPAddress","getRecordByBasicSearch","then","res","showWarningDialog","Movie_TotalCount","getMetaByBasicQuery","getAllRecord","getRecordByAdvanceSearch","getMetaByAdvanceQuery","testTimeOut","serverIP","signal","orderType","orderColumn","abortFetching","controller","abort","queryWords","getRecordByBasicQueryValidation","tempState","msgStaffName","msgCategory","msgProducer","msgProductionCompany","msgProductionDate","msgProductionLocation","msgActorName","msgStaffCompany","outputCategory","outputProducer","outputProductionCompany","outputProductionDate","outputProductionLocation","outputActorName","outputStaffName","outputStaffCompany","Producer","ProductionCompany","ProductionDate","ProductionLocation","ActorName","StaffName","StaffCompany","getRecordByBasicAndMetaSearch","encodeMetaInfo","getRecordByAdvanceAndMetaSearch","objA","objB","keywordA","keywordB","getSearchWords","getColumnName","getOperator","getMetaSearchInfoView","metaSelectedInfo","createRow","lastObj","createMetaInfo","keys","sumCount","field","identifiedMetaAreaSelectedOrNot","toggleMetaCatogory","transTitle","metaCategoryToggle","createMetaRow","show","identifiedMetaRow","metaRowClicked","Count","outputObj","history","number","searchColumn","AbortController","prevState","getListNumberEqualOneOrNot","ImageDiv","imageAttributes","getImagePos","imageContainerPos","previewMode","x","y","getImageSize","dynamicImageSize","detectUrlProps","imageSize","imageStyle","position","top","left","src","alt","getWidth","getHeight","notFocusingCompositionContainerStyle","overflow","TextDiv","getResizeHeight","tempHeight","textRef","scrollHeight","textAttributes","background","textSize","getFontColor","font","getFontSize","size","getFontFamily","eFamily","cFamily","overflowCheck","buildContent","dangerouslySetInnerHTML","__html","onDoubleClick","React","createRef","window","addEventListener","removeEventListener","textAlign","ref","CompositionContainer","detectTextOrImageDiv","tempSize","divSize","commonAttributes","resizeHeight","grouped","getMaxHeight","setNewContainerSize","newSize","refDivSize","mousePos","refPos","containerFocusing","extendAreaMouseDown","containerExtending","clientX","clientY","conID","extendAreaMouseUp","headerMouseDown","containerDragging","headerMouseUp","headerOnDoubleClick","checkImageAttribute","onContextMenu","pos","getContextMenu","invokeImageEditor","invokeTextEditor","loadOpacity","checkBackgroundStyleHeight","getPositionTop","previewSize","getPositionMode","divPos","setNewContainerPosition","focusingContainer","newPos","focusingCompositionContainerStyle","zIndex","outline","boxSizing","cursor","backgroundStyle","onMouseDown","onMouseUp","right","bottom","userSelect","ContainerGroup","initialMaxHeight","containerArray","minY","min","apply","container","maxY","max","maxHeight","createContainer","pos2","bodySize","containerGroupStyle","indexKey","EventPage","staticPageSysID","StaticPage_SysID","eventSysID","innerWidth","innerHeight","compositionContainers","Event_CompositionSettings","bodyHeight","Public_StaticPage_CompositionSettings","getResizeWidth","tempWidth","scrollContainerLayout","scrollWidth","renderInLargeContainer","renderInMediumContainer","composition","groupArray","groupObj","prevMaxHeight","tempGroupObj","obj","finalGroupObj","finalGroupArray","array","newArray","getLastContainerPos","maxTop","openTempFile","preProps","scrollContainer","middleLayout","marginLeft","marginRight","FlashCountBadge","useState","currentCount","setCount","backColor","setBackColor","timer","bgStyle","preValue","useRef","useEffect","usePreviousValue","countNumber","badgeType","timerFunction","ChatRoom","rowContainer","createShrinkContainer","invokeChatChannel","queryStage","unreadMessage","shrinkContainer","shrink","expandContain","getChatChannel","ChatChannel","scrollToBottom","dummyChatRowRef","scrollIntoView","behavior","createStageRow","emitMessage","chooseType","hostUserName","emitID","hostUserID","emitName","emitTime","emitImage","maxWidth","openImageTab","dataImage","html","newTab","open","document","write","focus","userID","getChatMessage","createMessageRows","queryInfo","closeChannel","markMessageRead","textInfo","channelID","markRead","messageInput","TextEncoder","encode","messageSubmit","takeScreenShot","prevProp","prevstate","emitDate","re","MaskArea","getPath","floatWinPos","floatWinSize","svgStyle","fill","fillRule","d","ScreenshotPicker","borderCollisonForExtending","borderCollisonForMoving","closeScreenshotPicker","getSreenshotArea","defaultImageLayout","ScreenshotContainer","onContainerExtending","needMousePos","onContainerDragging","onMouseMove","getBodySize","containerRef","clientWidth","clientHeight","GridCell","hover","beforeEventContainer","posRef","boxShadow","afterEventContainer","HomeBody","getEventState","tDate","Date","today","toISOString","Event","createEventContainer","backObj","frontObj","maxLeft","event","CellRef","tempPosRef","no","finalLeft","moveToLeft","dummyGridContainerRowRef","scrollBy","moveToRight","xPos","APIDocMainPage","getParagraph","APIDoc","paragraph","pTitle","pText","getSubParagraph","subParagraph","subParagraphs","sParagraph","spTitle","spText","spUrl","getSubParagraphInputTable","inputTableText","inputTable","getSubParagraphOutputTable","outputTableText","outputTable","table","getTableRow","iTitle","iType","iText","mainTitle","mainText","MainBody","containerLayout","captureScreenShot","posX","posY","emitInfo","html2canvas","body","useCORS","allowTaint","canvas","tempCanvas","createElement","tempCanvasContext","getContext","drawImage","screenshotImg","toDataURL","clientIP","wsMiddleWare","emit","visitorID","clientName","visitorName","emitIP","read","userSessionStart","headers","sessionID","webSocket","dealWebSocket","createPersonalRoom","emitStageOne","userSessionEnd","emitUserSessionEnd","returnValue","visitorIP","on","stage","IDArray","emitFullTime","emitEmail","clientEmail","queryType","IDList","preQuery","DBID","showIntroList","onClickHandler","countUnreadMessage","resultArray","createChatChannel","toggleChatChannel","toggleScreenshotPicker","screenshotEmitInfo","screenshotArea","scrollTop","documentElement","newUrl","prveState","exact","path","component","render","App","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","cW","cH","module","exports"],"mappings":"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","file":"static/js/main.b9f15cbf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './LogoButton.css'\n\n\n\nclass LogoButton extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    getLogoBackgroundClassName=()=>{\n        let className = \"LogoBackground\"\n        if(this.props.IntroListShowOrHide)\n        {\n            className = \"LogoBackground On\" \n        }\n        return className\n    }\n\n    render(){\n        \n        return(\n            <div className=\"LogoButton\">\n               \n               <div className={this.getLogoBackgroundClassName()} >\n               </div>\n            </div>\n        )\n    }\n}\n\nexport default LogoButton\n","import React, { Component } from 'react';\nimport LogoButton from './LogoButton'\nimport './LogoAndTitleDiv.css'\nimport {Link} from 'react-router-dom';\n\nclass LogoAndTitleDiv extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    logoOnClickHandler=(e)=>{\n        //e.stopPropagation()\n        let msg = true\n        if(this.props.IntroListShowOrHide)\n        {\n            msg = false\n        }\n\n        this.props.getLogoClick(msg)\n    }\n\n    titleOnClickHandler=()=>{\n        this.props.getTitleClick()\n    }\n\n    render(){\n        const style = {\n            //width:360,\n            height:100,\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n        }\n\n        const mdStyle = {\n            color:'#adb4bf',\n            fontSize:40,\n            fontFamily:'Microsoft JhengHei',\n            lineHeight:'100px'\n        }\n\n        const sdStyle = {\n            display: 'flex',\n            flexDirection: 'row',\n            color:'#b0b0b0',\n            fontSize:12,\n        }\n\n        const captial = {\n            color:'#61dafb',\n            fontSize:12,\n            fontWeight:'bold',\n            paddingLeft:2\n        \n        }\n    \n        return(\n            <div style={style}>\n                <div onClick={this.logoOnClickHandler}>\n                    <LogoButton IntroListShowOrHide={this.props.IntroListShowOrHide}/>\n                </div>\n              \n                <div className={\"titleGroup\"} onClick={()=>this.props.goToFrontPage()}>\n                    <div style={mdStyle}>{\"台灣華語電影資料庫\"}</div>\n                </div>\n              \n            </div>\n        )\n    }\n}\n\nexport default LogoAndTitleDiv","import React, {Component} from 'react'\nimport './AutofillList.css'\n\n\nclass AutofillList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n           autofillWord:null,\n        }\n    }\n\n    componentDidMount(){\n        this.loadAutofillWord()\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props.basicSearchWord !== prevProps.basicSearchWord && this.props.selectedIndex === 0)\n        {           \n            this.loadAutofillWord()        \n        }\n\n        if(this.props.selectedIndex !== prevProps.selectedIndex)\n        {\n            if(this.state.autofillWord && this.state.autofillWord[this.props.selectedIndex-1])\n            {\n                this.props.returnKeyword(this.state.autofillWord[this.props.selectedIndex-1].Keyword)\n\n            }\n        }\n    }\n\n    createRecommandWord=()=>{\n        if(this.state.autofillWord)\n        {\n            let list = this.state.autofillWord.map((word,index)=>{\n                return <div className={index === this.props.selectedIndex-1 ?\"basicSearchAreaAutofillListOptionSelected\" :\"basicSearchAreaAutofillListOption\"} onClick={(e)=>{this.getKeyword(e,word.Keyword)}}>{word.Keyword}</div>\n            })\n            return list\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    getKeyword=(e, keyword)=>{\n        //e.preventDefault()\n        //e.stopPropagation()\n        console.log(\"getKeyword...\")\n        this.props.getKeyword(keyword)\n    }\n\n    loadAutofillWord=async()=>{\n        let msg = await fetch(this.props.ipAddress+'/api/keyword/autofill/'+this.props.basicSearchWord)\n        let output = await msg.json()\n    \n        if(msg.status !== 200) throw Error(msg.message)\n        console.log(\"autofill :\")\n        console.log(output)\n        this.setState({\n            autofillWord:output\n        })\n    }\n\n    render(){\n        return(\n            <div className={this.state.autofillWord && this.state.autofillWord[0]?\"basicSearchAreaAutofillList\":\"basicSearchAreaAutofillList Hide\"} >\n                {this.createRecommandWord()}\n            </div>    \n        )\n    }\n}\n\nexport default AutofillList","import React, {Component} from 'react'\nimport './RecordSearchArea.css'\nimport AutofillList from './AutofillList'\n\nclass RecordSearchArea extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n           basicSearchWord:\"查詢全欄位，可用 AND、OR 布林邏輯\",\n           advanceSearchWord:null,\n           showAdvancedSearchArea:false,\n           showAutofillList:false,\n           selectedAutofillList:0\n        }\n    }\n\n    componentDidMount(){\n        this.initialAdvanceSearchState()\n    }\n\n    initialAdvanceSearchState=()=>{\n        if(!this.state.advanceSearchWord)\n        {\n            let tempArray = []\n            tempArray.push(this.initialAdvanceSearchObj())\n            this.setState({\n                advanceSearchWord:tempArray\n            })\n        }\n    }\n\n    initialAdvanceSearchObj=()=>{\n        let initialState = {\n            columnName:\"Movie_TitleMain\",\n            boolean:\"AND\",\n            operator:\"Like\",\n            keyword:\"請輸入查詢關鍵字\"\n        }\n        return initialState\n    }\n\n    onBasicSearchWordInput=(e)=>{\n        e.stopPropagation();\n        if(e.target.value !== this.state.basicSearchWord)\n        {         \n            if(e.target.value !== \"\")\n            {\n                this.setState({\n                    basicSearchWord:e.target.value,             \n                    showAutofillList:true,\n                    selectedAutofillList:0\n                })\n            }    \n            else\n            {\n                this.setState({\n                    basicSearchWord:e.target.value,             \n                    showAutofillList:false,\n                    selectedAutofillList:0\n                })\n            }       \n        }\n    }\n\n    getKeyword=(msg)=>{\n        console.log(\"getKeyword...\")\n        if(msg !== this.state.basicSearchWord)\n        {              \n            this.setState({\n                basicSearchWord:msg,             \n                showAutofillList:false,\n                selectedAutofillList:0\n            },()=>{\n                this.handleSearchInfo(\"basic\")\n            })           \n        }\n    }\n\n  \n    onClick = () => {\n        console.log(\"fuck you don't click me !\")\n    }\n\n    handleSearchInfo = (type,e) => {\n        console.log(\"handleSearchInfo\")\n        if(e)\n        {\n            e.preventDefault()\n            e.stopPropagation()\n        }\n       \n        let tempArray = []\n        let msg = {}\n        if(type === \"basic\")\n        {\n            if(this.state.basicSearchWord)\n            {\n                if(this.state.basicSearchWord !==\"\" && this.state.basicSearchWord !== \"查詢全欄位，可用 AND、OR 布林邏輯\")\n                {\n                    let roughWords = this.roughParser(this.state.basicSearchWord)\n                    let outputWords = this.advanceParser(roughWords)\n                    console.log(\"keywords parser finish...\")\n                    console.log(outputWords)\n                    msg = {\n                        type:type,\n                        searchWord:outputWords,\n                    }\n\n                    tempArray.push(this.initialAdvanceSearchObj())\n                    this.setState({\n                        advanceSearchWord:tempArray,\n                        showAdvancedSearchArea:false,\n                        showAutofillList:false,\n                        selectedAutofillList:0\n                    },()=>{\n                        this.props.getSearchInfo(msg)\n                    })\n                }\n                else\n                {\n                    msg = {\n                        type:type,\n                        searchWord:null\n                    }\n\n                    tempArray.push(this.initialAdvanceSearchObj())\n                    this.setState({\n                        advanceSearchWord:tempArray,\n                        showAdvancedSearchArea:false,\n                        showAutofillList:false,\n                        selectedAutofillList:0\n                    },()=>{\n                        this.props.getSearchInfo(msg)\n                    })\n                }\n            }\n            else\n            {\n                msg = {\n                    type:type,\n                    searchWord:null\n                }\n\n                tempArray.push(this.initialAdvanceSearchObj())\n                this.setState({\n                    advanceSearchWord:tempArray,\n                    showAdvancedSearchArea:false,\n                    showAutofillList:false,\n                    selectedAutofillList:0\n                },()=>{\n                    this.props.getSearchInfo(msg)\n                })\n            }\n        }\n        else if(type === \"advance\")\n        {\n            if(this.state.advanceSearchWord && this.state.advanceSearchWord[0])\n            {\n                if(this.state.advanceSearchWord[0].keyword !==\"請輸入查詢關鍵字\")\n                {\n                    msg = {\n                        type:type,\n                        searchWord:this.state.advanceSearchWord\n                    }\n\n                    this.setState({\n                        basicSearchWord:null,\n                        showAdvancedSearchArea:false\n                    },()=>{\n                        this.props.getSearchInfo(msg)\n                    })\n                }\n            }\n        }       \n    }\n\n    roughParser = (text) =>{\n        let patt1 = /[^\\s]+/g\n        let outputRough = text.match(patt1)\n        console.log(\"rough parsering...\")\n        console.log(text)\n        console.log(outputRough)\n        return outputRough\n    }\n\n    advanceParser = (roughKeywords) => {\n        let output = []\n        var i\n        for(i=0;i<roughKeywords.length;i++)\n        {\n            if(i===0)\n            {\n                if(roughKeywords[i] !== \"AND\"  && roughKeywords[i] !== \"OR\")\n                {\n                    let key = {\n                        boolean:\"AND\",\n                        keyword:roughKeywords[i]\n                        \n                    }\n                    output.push(key)\n                } \n            }\n            else\n            {\n                if(roughKeywords[i-1] === \"OR\")\n                {\n                    if(roughKeywords[i] !== \"AND\" && roughKeywords[i] !== \"OR\")\n                    {\n                        let key = {\n                            boolean:\"OR\",\n                            keyword:roughKeywords[i],\n                        }\n                        output.push(key)\n                    } \n                }\n                else\n                {\n                    if(roughKeywords[i] !== \"AND\" && roughKeywords[i] !== \"OR\")\n                    {\n                        let key = { \n                            boolean:\"AND\",\n                            keyword:roughKeywords[i],\n                        }\n                        output.push(key)\n                    }\n                }\n            }\n        }\n        return output\n    }\n\n    createAdvanceArea=()=>{\n        return (<div className={\"advanceSearchAreaBackground\"} style={this.state.showAdvancedSearchArea? {height:\"100%\"}:{height:\"0%\"}}>\n            {this.createAdvanceAreaElements()}\n        </div>)\n    }\n\n    createAdvanceAreaElements=()=>{\n        if(this.state.showAdvancedSearchArea)\n        return(\n            <div style={{marginTop:\"50px\"}}>  \n            {this.getSelectOption()}<div style={{display:\"flex\",width:\"60%\",margin:\"auto\"}}><div className={\"advanceSearchAreaAddButton\"} onClick={this.addCondition}>\n       +</div><div className=\"executeAdvanceSearchButton\" onClick={(e)=>this.handleSearchInfo(\"advance\",e)}>執行查詢</div></div>\n            </div>\n        )\n    }\n\n    getSelectOption=()=>{\n        if(this.state.advanceSearchWord)\n        {\n            let result = this.state.advanceSearchWord.map((row,index)=>{\n                return this.createSelectRow(row,index)\n            })\n            return result\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    createSelectRow=(row,index)=>{\n\n        return (   \n            <div style={{width:\"100%\",margin:\"10px\"}}>\n            <div className={\"advanceSearchAreaConditionRow\"}>\n                <select value={row.boolean} className={\"advanceSearchAreaCellSelect\"} onChange={(e)=>this.changeAdvanceValue(e,index,\"boolean\")}>\n                    <option value=\"AND\">AND</option>\n                    <option value=\"OR\">OR</option>\n                </select>\n                <select value={row.columnName} className={\"advanceSearchAreaCellSelect\"} onChange={(e)=>this.changeAdvanceValue(e,index,\"columnName\")}>\n                    <option value=\"Movie_SysID\">藏品系統號</option>\n                    <option value=\"Movie_TitleMain\">主要名稱</option>\n                    <option value=\"Movie_TitleTranslation\">翻譯名稱</option>\n                    <option value=\"Movie_TitleOther\">其他名稱</option>\n                    <option value=\"Movie_SubCategoryOne\">長片短片</option>\n                    <option value=\"Movie_SubCategoryTwo\">種類</option>\n                    <option value=\"Movie_ProductionDate\">出品日期</option>\n                    <option value=\"Movie_ProductionLocation\">出品地點</option>\n                    <option value=\"Movie_ProductionCompany\">出品公司</option>\n                    <option value=\"Movie_Producer\">出品人</option>\n                    <option value=\"Movie_DramaContent\">內容大綱</option>\n                    <option value=\"Movie_Rating\">分級</option>\n                    <option value=\"Movie_Language\">語言</option>\n                    <option value=\"Movie_ActorName\">演員</option>\n                    <option value=\"Movie_RoleName\">腳色名稱</option>\n                    <option value=\"Movie_StaffName\">工作人員</option>\n                    <option value=\"Movie_Position\">職稱</option>\n                    <option value=\"Movie_Company\">公司</option>\n                </select>\n                <select value={row.operator} className={\"advanceSearchAreaCellSelect\"} onChange={(e)=>this.changeAdvanceValue(e,index,\"operator\")}>\n                    {row.columnName === \"Movie_ProductionDate\" ? null:<option value=\"Like\">包含</option>}\n                    <option value=\"Equal\">{\"=\"}</option>\n                    {row.columnName === \"Movie_ProductionDate\" ? <option value=\"Greater\">{\">\"}</option> :null}\n                    {row.columnName === \"Movie_ProductionDate\" ? <option value=\"Smaller\">{\"<\"}</option> :null}\n                </select>\n                <div style={{margin:\"5px 5px 5px 30px\",width:\"30%\"}}>\n                    <input style={{width:\"100%\"}} type='text' value={row.keyword} onChange={(e)=>this.changeAdvanceValue(e,index,\"keyword\")}/>\n                </div>   \n                <div className={\"advanceSearchAreaRemoveButton\"} onClick={()=>this.removeCondition(index)}>\n                    x\n                </div>        \n            </div>\n            </div>\n        )\n    }\n\n    changeAdvanceValue=(e,index,type)=>{\n        if(this.state.advanceSearchWord[index][type] !== e.target.value)\n        {\n            let tempArray = this.state.advanceSearchWord.map((row,rowIndex)=>{\n                if(rowIndex === index)\n                {\n                    let tempObject = Object.assign({},row)\n                    tempObject[type] = e.target.value\n                    return tempObject\n                }\n                else\n                {\n                    return row\n                }\n            })\n\n            this.setState({\n                advanceSearchWord:tempArray\n            })\n        }\n    }\n\n    removeCondition=(index)=>{\n        if(this.state.advanceSearchWord && this.state.advanceSearchWord.length>1)\n        {\n            let tempArray = [...this.state.advanceSearchWord]\n            tempArray.splice(index,1)\n            this.setState({\n                advanceSearchWord:tempArray\n            })\n        }\n    }\n\n    addCondition=()=>{\n        let newCondition = this.initialAdvanceSearchObj()\n        let tempArray = [...this.state.advanceSearchWord,newCondition]\n        this.setState({\n            advanceSearchWord:tempArray\n        })\n    }\n\n    toggleAutofillList=()=>{\n        if(this.state.showAutofillList)\n        {\n            this.setState({\n                showAutofillList:false,\n                selectedAutofillList:0\n            })\n        }\n    }\n\n    onKeyDown=(e)=>{\n        console.log(\"KeyDown : \", e.key)\n        if(e.key === \"Enter\")\n        {\n            this.handleSearchInfo(\"basic\",null)   \n        }\n        else if(e.key === \"ArrowDown\")\n        {\n            if(this.state.showAutofillList)\n            {\n                this.setState({\n                    selectedAutofillList : this.state.selectedAutofillList + 1\n                })\n            }\n        }\n        else if(e.key === \"ArrowUp\")\n        {\n            if(this.state.showAutofillList)\n            {\n                this.setState({\n                    selectedAutofillList : this.state.selectedAutofillList - 1\n                })\n            }\n        }\n        else if(e.key === \"Escape\")\n        {\n            if(this.state.showAutofillList)\n            {\n                this.setState({\n                    showAutofillList:false,\n                    selectedAutofillList:0\n                })\n            }\n        }\n\n    }\n\n    returnKeyword=(msg)=>{\n        if(msg !== this.state.basicSearchWord)\n        {\n            this.setState({\n                basicSearchWord:msg\n            })\n        }\n    }\n\n\n    render(){\n        let inputTextDefaultStyle = {\n            display: \"inline-block\",\n            width:\"300px\",\n            height:\"30px\",\n            fontSize: \"15px\",\n            fontFamily:\"Microsoft JhengHei\",\n            border: \"1px solid #adb4bf\",\n            borderRadius: \"4px 0px 0px 4px\",  \n            backgroundColor:\"#ffffff\",\n            color: \"#adb4bf\"\n        }\n\n        let inputTextStyle = {\n            display: \"inline-block\",\n            width:\"300px\",\n            height:\"30px\",\n            fontSize: \"15px\",\n            fontFamily:\"Microsoft JhengHei\",\n            border: \"1px solid #adb4bf\",\n            borderRadius: \"4px 0px 0px 4px\",  \n            backgroundColor:\"#ffffff\",\n            color: \"#adb4bf\"\n        }\n\n        return(\n            <div className=\"SearchArea\">\n                <div className=\"basicSearchArea\">\n                    <div style={{display:\"flex\"}}>\n                        <div>\n                            <input style={this.state.basicSearchWord === \"查詢全欄位，可用 AND、OR 布林邏輯\" ? inputTextDefaultStyle:inputTextStyle} type=\"text\" value={this.state.basicSearchWord ? this.state.basicSearchWord : \"\" } onChange={this.onBasicSearchWordInput} onKeyDown={(e)=>this.onKeyDown(e)}/* onBlur={this.toggleAutofillList} */ />\n                            {this.state.showAutofillList ?<AutofillList basicSearchWord={this.state.basicSearchWord} selectedIndex={this.state.selectedAutofillList} ipAddress={this.props.ipAddress} getKeyword={this.getKeyword} returnKeyword={this.returnKeyword}/> : null }\n                        </div>\n                        <div className=\"advanceSearchAreaSubmitButton\" onClick={(e)=>this.handleSearchInfo(\"basic\",e)}>查詢</div>         \n                    </div>\n                    <div className=\"ToggleAdvanceAreaButton\" onClick={(e)=>this.setState({showAdvancedSearchArea:!this.state.showAdvancedSearchArea,showAutofillList:false})}>{!this.state.showAdvancedSearchArea? \"開啟進階查詢 +\":\"收合進階查詢 -\"}</div>\n                </div>\n                {this.createAdvanceArea()}\n            </div>    \n        )\n    }\n}\n\nexport default RecordSearchArea\n","import React, { Component } from 'react';\nimport LogoAndTitleDiv from './LogoAndTitleDiv'\nimport RecordSearchArea from './RecordSearchArea'\nimport './UpBanner.css'\nimport { Redirect } from 'react-router-dom'\n\n\nclass UpBanner extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            basicSearchWord:\"查詢全欄位，可用 AND、OR 布林邏輯\",\n            searchInfo:null,\n            //count:0,\n            url:\"/\"\n        }\n    }\n\n    componentDidMount(){\n        console.log(\"UpBanner did mount\")\n        \n    }\n\n    getLogoClick=(msg)=>{\n        this.setState({\n            searchInfo:null,\n            redirect:false\n        },()=>{\n            this.props.getLogoClick(msg)\n        })\n    }\n\n    goToFrontPage=()=>{\n        /* console.log(\"goToFrontPage...\")\n        if(this.state.url === \"/\")\n        {\n\n            this.setState({\n                searchInfo:null,\n                url:\"/default\"\n            })\n        }\n        else if(this.state.url === \"/default\")\n        {\n            this.setState({\n                searchInfo:null,\n                url:\"/\"\n            })\n        }\n        else\n        {\n            this.setState({\n                searchInfo:null,\n                url:\"/\"\n            })\n        } */\n        this.props.getSearchInfo(\"/default\")\n    }\n\n    getSearchInfo=(msg)=>{\n        let uriQuery = encodeURI(JSON.stringify(msg.searchWord))\n        let url = '/SearchResult/searchType/'+msg.type+'/limit/20/page/1/query/'+uriQuery\n\n        this.props.getSearchInfo(url)\n\n        this.setState({\n            searchInfo:msg,\n            url:url\n        })\n    }\n\n    render(){\n        console.log(\"UpBanner render...\")\n        console.log(this.state.url)\n        \n        return(\n           \n            <div className=\"UpBannerBody\">\n                <LogoAndTitleDiv getLogoClick={this.getLogoClick} goToFrontPage={this.goToFrontPage} IntroListShowOrHide={this.props.IntroListShowOrHide}/>\n                <RecordSearchArea getSearchInfo={this.getSearchInfo} ipAddress={this.props.ipAddress}/>\n            </div>\n        )\n    }\n}\n\nexport default UpBanner\n","import React, { Component } from 'react';\nimport './IntroListOption.css'\nimport {Link} from 'react-router-dom';\n\nclass IntroListOption extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    getClassName=()=>{\n        let className = \"IntroListOption\" \n        return className\n    }\n\n    render(){\n        \n        return(\n            <Link to={\"/Introduction/\"+this.props.firstRoute+\"/\"+this.props.secondRoute+\"/\"+this.props.optionID} style={{ textDecoration: 'none' }}>\n                <div className={\"IntroListOption\"} > \n                    {this.props.optionTitle}\n                </div>\n            </Link>\n        )\n    }\n}\n\nexport default IntroListOption","class LinkedListNode {\n    constructor(data, next=null, index=null){\n        this.data=data\n        this.next=next\n    }\n}\n\nclass LinkedList {\n    constructor(){\n        this.head = null;\n        this.length = 0;\n    }\n\n    insertFirst(data){\n        this.head = new LinkedListNode(data, this.head)\n        this.length++\n    }\n\n    insertLast(data){\n        let node = new LinkedListNode(data);\n        let current;\n        if(!this.head)\n        {\n            this.head = node;\n        }\n        else\n        {\n            current = this.head\n            while(current.next)\n            {\n                current=current.next\n            }\n            current.next=node\n        }\n        this.length++\n    }\n\n    insertAtPrefix(data, index){\n        \n        // Index Over Range, stop the function\n        if(index>this.length)\n        {\n            //console.log('Index Over Range')\n        }\n        // Insert at index[0], means insert first\n        else if(index===0)\n        {\n            this.insertFirst(data)\n        }\n        // Index is negtive, not valid, stop function\n        else if(index<0)\n        {\n            //console.log('Index is negtive, not valid')\n        }\n        else\n        {\n            let node = new LinkedListNode(data);\n            let current\n            let previous\n            let count = 0\n\n            current=this.head\n\n            while(count < index){\n                previous = current\n                count++\n                current = current.next\n            }\n            node.next = current\n            previous.next = node\n\n            this.length ++\n        }\n    }\n\n    insertAtSurfix(data, index){\n        \n        // Index Over Range, stop the function\n        if(index>this.length)\n        {\n            //console.log('Index Over Range')\n        }\n        // Insert at index[0], means insert first\n        else if(index===this.length)\n        {\n            this.insertLast(data)\n        }\n        // Index is negtive, not valid, stop function\n        else if(index<0)\n        {\n            //console.log('Index is negtive, not valid')\n        }\n        else\n        {\n            let node = new LinkedListNode(data);\n            let current\n            let previous\n            let count = 0\n\n            current=this.head\n\n            while(count < index+1){\n                previous = current\n                count++\n                current = current.next\n            }\n            node.next = current\n            previous.next = node\n\n            this.length ++\n        }\n    }\n\n    getAt(index) {\n        let current = this.head\n        let count = 0\n        let outputData\n\n        while(current)\n        {\n            if(count == index)\n            {\n                return outputData= {...current.data}\n            }\n            count++\n            current= current.next\n        }\n\n        return null\n    }\n\n    shiftToPrefix(index, targetIndex){\n        if(index<0 || targetIndex <0 || index>this.length || targetIndex> this.length)\n        {\n            return \n        }\n        else\n        {\n            if(index===targetIndex)\n            {\n                return\n            }\n            else\n            {\n                let tempData = this.getAt(index)\n                this.removeAt(index)\n                if(index>targetIndex)\n                {\n                    this.insertAtPrefix(tempData, targetIndex)\n                }\n                else\n                {\n                    this.insertAtPrefix(tempData, targetIndex-1)\n                }   \n            }\n        }\n    }\n\n    shiftToSurfix(index, targetIndex){\n        if(index<0 || targetIndex <0 || index>this.length || targetIndex> this.length)\n        {\n            return \n        }\n        else\n        {\n            if(index===targetIndex)\n            {\n                return\n            }\n            else\n            {\n                let tempData = this.getAt(index)\n                this.removeAt(index)\n                if(index>targetIndex)\n                {\n                    this.insertAtSurfix(tempData, targetIndex)\n                }\n                else\n                {\n                    this.insertAtSurfix(tempData, targetIndex-1)\n                }\n            }\n        }\n    }\n\n     //// BigO = (n)\n\n     shiftToLast(index){\n        if(index<0 || index > this.length-1)\n        {\n            const errMsg = new Error('index not valid (out of length or is negtive)')\n            throw errMsg\n        }\n        else\n        {\n            if(index === this.length-1)\n            {\n                return\n            }\n            else if(index === 0)\n            {\n                let tempData= this.head.data\n                this.head=this.head.next\n                this.insertLast(tempData)\n                this.length--\n            }\n            else\n            {\n                let tempNode = new LinkedListNode();\n                let previous = null\n                let current = this.head\n                let count = 0\n\n               while(current.next)\n                {\n                    if(count === index)\n                    {\n                        tempNode.data = current.data\n                        previous.next=current.next\n                    }\n                    count++\n                    previous = current\n                    current = current.next\n                }\n                current.next = tempNode\n            }\n        }\n    }\n\n    removeLast(){\n        this.removeAt(this.length-1)\n    }\n\n    removeAt(index) {\n        if(index<0 || index > this.length)\n        {\n            return\n        }\n        else if(index===0)\n        {\n            this.head=this.head.next\n            this.length--\n        }\n        else\n        {\n            let current=this.head\n            let previous\n            let count=0\n            while(count<index)\n            {\n                count++\n                previous=current\n                current=current.next\n            }\n            previous.next=current.next\n            this.length--\n        }\n    }\n\n    //// BigO = (n)\n\n    cloneList(){\n        let clone = new LinkedList()\n        let current = this.head\n        \n        while(current)\n        {\n            let tempNodeData = {...current.data}\n            clone.insertLast(tempNodeData)\n            current = current.next\n        }\n\n        return clone\n\n    }\n\n\n    printList(){\n        let current = this.head\n        while(current){\n            console.log(current.data)\n            current= current.next\n        }\n    }\n\n    clearList(){\n        this.head = null\n        this.length = 0\n    }\n\n    transArray(keyName){\n        let tempArray=[]\n        if(keyName)\n        {\n            let current = this.head\n            \n            while(current)\n            {\n                let outputData = {...current.data}\n\n                if(keyName in outputData)\n                {\n                    tempArray.push(outputData[keyName])\n                }\n                current= current.next\n            }\n        }\n        else\n        {\n            let current = this.head\n\n            while(current)\n            {\n                let outputData = {...current.data}\n                tempArray.push(outputData)\n                current= current.next\n            }\n        }\n        return tempArray\n    }\n}\n\n\n\nexport default LinkedList\n","import React, { Component } from 'react';\nimport './Category.css'\nimport IntroListOption from './IntroListOption'\nimport LinkedList from '../Function/LinkedList'\n\nclass Category extends Component {\n    constructor(props){\n        super(props) \n        this.state = {\n            showCategory:false\n        }\n    }\n\n\n    createSecondStageOption=()=>{\n        if(this.props.categoryList)\n        {      \n         \n            let tempLinkedList = this.returnLinkedList(this.props.categoryList)\n            let tempArray = []\n            let countI = -1\n\n            for(let i=0;i< tempLinkedList.length;i++)\n            {\n                //console.log(\"i : \",i)\n                //console.log(tempLinkedList.getAt(i))\n                tempArray.push(tempLinkedList.getAt(i))\n                //return( <FirstStageOption optionInfo={tempLinkedList.getAt(i)}/>)\n            }\n            return tempArray.map(option=>{\n                countI= countI+1\n                return(<IntroListOption key={option.countI} optionID={option.id} firstRoute={this.props.categoryName} secondRoute={option.route} optionTitle={option.title}/> )\n            })\n\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    returnLinkedList =(list)=> {\n        let cloneL = new LinkedList()\n        \n        if(list)\n        {\n            if(list.head)\n            {\n                let current = list.head\n                while(current)\n                {\n                    let tempNodeData = {...current.data}\n                    cloneL.insertLast(tempNodeData)\n                    current = current.next\n                }\n            }\n        }\n        \n        return cloneL\n    }\n\n    showOrHide=()=>{\n        if(this.props.mode === \"footer\")\n        {\n            return \"CategoryBodyShowFooter\"\n        }\n        else\n        {\n            if(this.state.showCategory)\n            {\n                return \"CategoryBodyShowHeader\"\n            }\n            else\n            {\n                return \"CategoryBody\"\n            }\n        }\n\n\n    }\n\n    render(){\n        \n        return(\n            this.props.windowResize === \"small\" ?\n            <div className={\"CategoryBody Padding\"} > \n                <div className=\"CategoryTitle\">{this.props.categoryTitle}</div>\n                {this.createSecondStageOption()}\n            </div>\n            :\n            <div className={this.showOrHide()} onMouseOver={()=>{this.setState({showCategory:true})}} onMouseLeave={()=>{this.setState({showCategory:false})}}> \n                <div className=\"CategoryTitle\">{this.props.categoryTitle}</div>\n                {this.props.mode === \"header\" ? this.state.showCategory ? this.createSecondStageOption(): null : this.createSecondStageOption()}\n            </div>\n        )\n    }\n}\n\nexport default Category","class IPAddress {\n    constructor () {\n        this.state = {\n            ip:'https://3.12.154.48:5000'\n        }\n    }\n}\n\nexport default IPAddress","import React, { Component } from 'react';\nimport './IntroList.css'\nimport Category from './Category'\n\nimport LinkedList from '../Function/LinkedList'\nimport IPAddress from '../IPAddress'\n\nclass IntroList extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            firstStageOptions:null\n        }\n    }\n\n    componentDidMount(){\n       this.initialStaticPage()\n    }\n\n    componentDidUpdate(){\n     \n    }\n\n    initialStaticPage=async()=>{\n        let tempIP = new IPAddress()\n        console.log('initialStaticPage')\n        let msg = await fetch(tempIP.state.ip+'/api/staticPage/get/PublicStaticPageMainInfo', {\n            method:\"get\"\n        })\n\n        let output = await msg.json()\n        //console.log(\"output : \", output[0])\n        \n        let finalList = this.returnLinkedList(output[0] && output[0].Public_StaticPage_LinkedList) \n\n        this.setState({\n            firstStageOptions:finalList\n        })\n\n    }\n\n    returnLinkedList =(list)=> {\n        let cloneL = new LinkedList()\n        \n        if(list)\n        {\n            if(list.head)\n            {\n                let current = list.head\n                while(current)\n                {\n                    let tempNodeData = {...current.data}\n                    cloneL.insertLast(tempNodeData)\n                    current = current.next\n                }\n            }\n        }\n        \n        return cloneL\n    }\n\n    appendCategory=()=>{\n        if(this.state.firstStageOptions)\n        {      \n            let tempLinkedList = this.state.firstStageOptions\n            let tempArray = []\n            let countI = -1\n\n            for(let i=0;i< tempLinkedList.length;i++)\n            {\n                //console.log(\"i : \",i)\n                //console.log(tempLinkedList.getAt(i))\n                tempArray.push(tempLinkedList.getAt(i))\n                //return( <FirstStageOption optionInfo={tempLinkedList.getAt(i)}/>)\n            }\n            return tempArray.map(option=>{\n                countI= countI+1\n                return(<Category key={countI} categoryID={option.id} categoryName={option.route} categoryTitle={option.title} categoryList={option.list} windowSize={this.props.windowSize} mode={\"header\"}/>)\n            })\n\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    getClassName=()=>{\n        let className = \"IntroListMainBody\"\n        if(this.props.showOrHide)\n        {\n            if(this.props.windowSize === \"small\"){\n                className = \"IntroListMainBody ShowSmall\"\n            }\n            else\n            {\n                className = \"IntroListMainBody ShowNotSmall\"\n            }\n        }\n        console.log(\"className : \",className)\n        return className\n    }\n\n    render(){\n        \n        return(\n            <div className={this.getClassName()}> \n                {this.appendCategory()}\n            </div>\n        )\n    }\n}\n\nexport default IntroList","import React, { Component } from 'react';\n\nclass DynamicImage extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            transitionSecond:5,\n            image:{\n                order:null,\n                imageUrl:null\n            }\n        }\n    }\n\n    componentDidMount(){\n        this.loadProps()\n        //if(this.props.eventImages[0])\n        //{\n            \n             \n            \n            this.interval = setInterval(()=>this.transUrl(),5000)\n        //}\n    }\n\n    componentDidUpdate(prevProps){\n\n        if(this.props.windowSize === \"small\")\n        {\n            clearInterval(this.interval)\n        }\n\n        if(this.props.eventImages !== prevProps.eventImages)\n        {\n            this.loadProps()\n        }\n\n        \n    }\n\n    componentWillUnmount(){\n        //if(this.props.eventImages[0])\n        //{\n            clearInterval(this.interval)\n        //}\n    }\n\n    loadProps=()=>{\n        if(this.props.eventImages)\n        {\n            this.setState({\n                image:{\n                    order:1,\n                    imageUrl:this.props.eventImages[0].imageUrl\n                }\n            })\n        }\n    }\n\n    \n\n    transUrl(){\n        //console.log(\"transUrl...\")\n        if(this.props.eventImages)\n        {\n            if(this.props.eventImages.length>0)\n            {\n                let tempOrder = this.state.image.order +1\n                if(this.props.eventImages.length >= tempOrder)\n                {\n                    this.setState({\n                        image:{\n                            order:tempOrder,\n                            imageUrl:this.props.eventImages[tempOrder-1].imageUrl\n                        }\n                    })\n                }\n                else\n                {\n                    this.setState({\n                        image:{\n                            order:1,\n                            imageUrl:this.props.eventImages[0].imageUrl\n                        }\n                    })\n                }\n            }\n        }\n    }\n\n    loadImageUrl=()=>{\n        if(this.state.image.imageUrl)\n        {\n            return 'url('+this.state.image.imageUrl+')'\n        }\n        else\n        {\n            return null\n            //return `url(${BGImage})`\n        }\n    }\n\n    loadImageAdjust=()=>{\n        if(this.props.eventImages)\n        {\n            if(this.props.eventImages[this.state.image.order])\n            {\n                let tempOrder = this.state.image.order-1\n                return ` contrast(${this.props.eventImages[tempOrder].imageAdjust.contrast}%) hue-rotate(${this.props.eventImages[tempOrder].imageAdjust.hue}deg) brightness(${this.props.eventImages[tempOrder].imageAdjust.brightness}%) saturate(${this.props.eventImages[tempOrder].imageAdjust.saturate}%) sepia(${this.props.eventImages[tempOrder].imageAdjust.sepia}%) invert(${this.props.eventImages[tempOrder].imageAdjust.invert}%) blur(${this.props.eventImages[tempOrder].imageAdjust.blur}px) opacity(${this.props.eventImages[tempOrder].imageAdjust.opacity}%)`\n            }\n            else\n            {\n                return null\n            }\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    render(){\n        //console.log(\"DynamicImage render...\")\n        const ImageStyle={\n            width:'100%',\n            height: '100%',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            backgroundImage:this.loadImageUrl(),\n            filter: this.loadImageAdjust(),\n            transitionDuration:\"3s\",\n            transitionProperty:\"background-image\"\n        }\n        \n        return(\n            <div style={ImageStyle}> \n            </div>\n        )\n    }\n}\n\nexport default DynamicImage\n","import React, { Component } from 'react';\nimport './EventContainer.css'\nimport DynamicImage from './DynamicImage'\nimport IPAddress from '../IPAddress'\n\n\n\nclass EventContainer extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            eventAbstract:null\n        }\n    }\n\n    componentDidMount(){\n        this.fetchEventInfoFromAPI()\n    }\n\n    fetchEventInfoFromAPI=async()=>{\n        if(this.props.eventDetail && this.props.eventDetail.Event_SysID)\n        {\n            let tempIP = new IPAddress()\n            console.log('fetchEventInfoFromAPI')\n            let msg = await fetch(tempIP.state.ip+'/api/event/fetch/EventAbstractInfo/'+this.props.eventDetail.Event_SysID)\n            \n            if(msg.statusText !== \"SQL qeury error\" || msg.statusText !== \"mysql DB crash\")\n            {\n                console.log(\"OK\")\n                let output = await msg.json()\n\n                let tempAbstractObj = {\n                    Event_Images:output[0].Event_BGImageSettings,\n                    Event_Story:output[0].Event_Story,\n                    Event_SubTitle:output[0].Event_SubTitle, \n                    Event_Title:output[0].Event_Title,\n                }\n\n                this.setState({\n                    eventAbstract:tempAbstractObj\n                })\n            }\n        }\n    }\n\n    openEventPage=()=>{\n        this.props.openEventPage(this.props.eventDetail.Event_SysID)\n    }\n\n    render(){ \n        let beforeEventContainer = {\n            marginTop: '50px',\n            width: '0%',\n            backgroundColor: 'rgba(0, 0, 0)',\n            padding: '50px',\n            opacity:'0',\n            transition:'all 2s ease'\n        }\n\n        let afterEventContainer = {\n            marginTop: '50px',\n            width: '80%',\n            backgroundColor: 'rgba(112, 128, 144)',\n            //padding: '50px',\n            opacity:'1',\n            transition:'all 2s ease'\n        }\n        return(\n            <div style={this.state.eventAbstract? afterEventContainer:beforeEventContainer}> \n                <div className=\"EventTitleContainer\">\n                    <div className=\"EventTitle\">{this.state.eventAbstract ? this.state.eventAbstract.Event_Title : null}</div>\n                </div>\n                <div className=\"EventImageContainer\">   \n                    <DynamicImage eventImages={this.state.eventAbstract ? this.state.eventAbstract.Event_Images : null} windowSize={this.props.windowSize}/>\n                </div>  \n                <div className=\"EventSubTitle\">{this.state.eventAbstract ? this.state.eventAbstract.Event_SubTitle : null}</div>\n                <div className=\"EventTextBlock\">     \n                    <p className=\"block-with-text\">{this.state.eventAbstract ? this.state.eventAbstract.Event_Story : null}</p>\n                </div>\n                <div className=\"JumpToDetailButton\" onClick={this.openEventPage}>{\"深入專題\"}</div>              \n            </div>\n        )\n    }\n}\n\nexport default EventContainer","import React, { Component } from 'react';\nimport LinkedList from '../Function/LinkedList'\nimport Category from '../IntroList/Category'\nimport './Footer.css'\nimport IPAddress from '../IPAddress'\n\nclass Footer extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            firstStageOptions:null\n        }\n    }\n\n    componentDidMount(){\n        this.initialStaticPage()\n    }\n \n    componentDidUpdate(){\n      \n    }\n \n    initialStaticPage=async()=>{\n        let tempIP = new IPAddress()\n        console.log('initialStaticPage')\n        let msg = await fetch(tempIP.state.ip+'/api/staticPage/get/PublicStaticPageMainInfo', {\n            method:\"get\"\n        })\n \n        let output = await msg.json()\n        //console.log(\"output : \", output[0])\n         \n        let finalList = this.returnLinkedList(output[0] && output[0].Public_StaticPage_LinkedList) \n \n        this.setState({\n            firstStageOptions:finalList\n        })\n    }\n\n    returnLinkedList =(list)=> {\n        let cloneL = new LinkedList()\n        \n        if(list)\n        {\n            if(list.head)\n            {\n                let current = list.head\n                while(current)\n                {\n                    let tempNodeData = {...current.data}\n                    cloneL.insertLast(tempNodeData)\n                    current = current.next\n                }\n            }\n        }\n        \n        return cloneL\n    }\n\n    appendCategory=()=>{\n        if(this.state.firstStageOptions)\n        {      \n            let tempLinkedList = this.state.firstStageOptions\n            let tempArray = []\n            let countI = -1\n\n            for(let i=0;i< tempLinkedList.length;i++)\n            {\n                //console.log(\"i : \",i)\n                //console.log(tempLinkedList.getAt(i))\n                tempArray.push(tempLinkedList.getAt(i))\n                //return( <FirstStageOption optionInfo={tempLinkedList.getAt(i)}/>)\n            }\n            return tempArray.map(option=>{\n                countI= countI+1\n                return(<Category key={countI} categoryID={option.id} categoryName={option.route} categoryTitle={option.title} categoryList={option.list} mode={\"footer\"}/>)\n            })\n\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    render(){\n        let beforeFooterContainer = {\n            backgroundColor:\"White\",\n            //width:\"100vw\",\n            //height:\"500px\",\n            //marginTop:\"300px\",\n            opacity:\"0\",\n            transition:'all 2s ease'\n        }\n\n        let afterFooterContainer = {\n            backgroundColor:\"White\",\n            //width:\"100vw\",\n            //height:\"500px\",\n            //marginTop:\"300px\",\n            opacity:\"1\",\n            transition:'all 2s ease'\n        }\n\n        let categoryContainer = {\n            display:\"flex\",\n            flexDirection:\"row\",\n            flexWrap:\"wrap\",\n            justifyContent:\"center\",\n            paddingBottom:\"50px\",\n            paddingTop:\"50px\"\n        }\n\n        return(\n            <div style={this.state.firstStageOptions?afterFooterContainer:beforeFooterContainer}>\n                <div style={categoryContainer}>  \n                    {this.appendCategory()}\n                </div>\n                <div className={\"FooterInfoContainer\"}>\n                    <div className={\"FooterInfo\"}>\n                        台灣華語電影資料庫\n                    </div>\n                    <div className={\"FooterInfo\"}>\n                        此為功能及個人技術展示版本\n                    </div>\n                    <div className={\"FooterInfo\"}>\n                        內容資料取自 IMDB、WIKI、HKMDB 等網路資料，不保證其正確性\n                    </div>\n                    <div className={\"FooterInfo\"}>\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Footer\n","import React, { Component } from 'react';\nimport './EventBody.css'\nimport EventContainer from './EventContainer'\nimport axios from 'axios'\nimport Footer from '../Footer/Footer'\nimport IPAddress from '../IPAddress'\n\nclass EventBody extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            Event:null,\n        }\n        \n    }\n\n    componentDidMount(){\n       \n       this.getEventState()\n       \n    }\n\n    getEventState =async()=>{\n        let tempIP = new IPAddress()\n        console.log(\"getEventState\")\n        let tDate = new Date()\n        let today = tDate.toISOString().slice(0, 19).replace('T', ' ')\n        let msg = await fetch(tempIP.state.ip+'/api/event/fetch/EventMainInfoByDate/'+today+'/'+today)\n        \n        if(msg.statusText !== \"SQL qeury error\" || msg.statusText !== \"mysql DB crash\")\n        {\n            let output = await msg.json()\n            console.log(\"msg\")\n            this.setState({\n                Event:output\n            })\n        }\n    }\n\n\n\n    getClassName=()=>{\n        let className = \"EventBody\"\n        if(this.props.showOrHide)\n        {\n            className = \"EventBody Show\"\n        }\n        console.log(\"className : \",className)\n        return className\n    }\n\n    createEventContainer=()=>{\n        if(this.state.Event)\n        {\n            return(\n                this.state.Event.map(event=>\n                    <EventContainer eventDetail={event} openEventPage={(msg)=>{this.props.history.push(\"/Event/\"+msg)}} windowSize={this.props.windowSize}/>\n                )\n            )\n        }\n        else\n        {\n            return null\n        }\n    }\n\n   \n    render(){\n        return(\n            <div className={this.getClassName()} >\n                {this.createEventContainer()}     \n                <div>\n                    <Footer/>\n                </div>                  \n            </div>\n             \n        )\n    }\n}\n\nexport default EventBody","import React, { Component } from 'react';\nimport './MovieWorkInfoMainBody.css';\nimport { FacebookProvider, Like } from 'react-facebook';\nimport IPAddress from '../IPAddress'\nimport Footer from '../Footer/Footer'\n\nclass MovieWorkInfoMainBody extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            movieMainInfo:null,\n            movieFilmList:null,\n            movieStaffList:null,\n            movieActorList:null\n        }\n    }\n\n    componentDidMount(){\n        this.initialState()\n    }\n\n    initialState=async()=>{\n        let movieSysID = this.props.match.params.movie_id\n        let tempIP = new IPAddress()\n        if(movieSysID)\n        {\n            let msg1 = await fetch(tempIP.state.ip+'/api/movie/fetch/MovieMainInfo/'+movieSysID)\n            let output1 = await msg1.json()\n            console.log(\"MovieMainInfo : \")\n            console.log(output1[0])  \n\n            if(output1[0])\n            {\n                this.setState({\n                    movieMainInfo:output1[0]\n                }) \n            }\n\n            // let msg2 = await fetch(tempIP.state.ip+'/api/movie/fetch/MovieRelatedFilm/'+movieSysID)\n            // let output2 = await msg2.json()\n            // console.log(\"MovieFilm : \")\n            // console.log(output2)  \n\n            // if(output2)\n            // {\n            //     this.setState({\n            //         movieFilmList:output2\n            //     }) \n            // }\n\n            let msg3 = await fetch(tempIP.state.ip+'/api/movie/fetch/MovieStaffList/'+movieSysID)\n            let output3 = await msg3.json()\n            console.log(\"MovieStaffList : \")\n            console.log(output3)  \n\n            if(output3)\n            {\n                this.setState({\n                    movieStaffList:output3\n                }) \n            }\n\n            let msg4 = await fetch(tempIP.state.ip+'/api/movie/fetch/MovieActorList/'+movieSysID)\n            let output4 = await msg4.json()\n            console.log(\"MovieActorList : \")\n            console.log(output4)  \n\n            if(output4)\n            {\n                this.setState({\n                    movieActorList:output4\n                }) \n            }\n        }\n\n    }\n\n    removeSpaceFromString=(str)=>{\n        let result = \"\"\n        if(str)\n        {\n            result = str.replace(/\\s/g,\"\")\n        }\n        return result\n    }\n\n    getNumberOfFilm=()=>{\n        if(this.state.movieFilmList)\n        {\n            return this.state.movieFilmList.length\n        }\n        else\n        {\n            return 0\n        }\n    }\n\n    createFilmRow=()=>{\n        if(this.state.movieFilmList)\n        {\n            let output = this.state.movieFilmList.map(film=>{\n                return <div className=\"itemArea\">\n                    <div className=\"itemRowContainer\">\n                        <div className=\"itemRowTitle\">{\"膠片編號\"}</div>\n                        <div className=\"itemRowContent\">{film.Film_SysID}</div>\n                    </div>\n                    {\n                        film.Film_Spec !== \"\"? \n                        <div className=\"itemRowContainer\">\n                            <div className=\"itemRowTitle\">{\"膠片規格 (寬幅)\"}</div>\n                            <div className=\"itemRowContent\">{film.Film_Spec}</div>\n                        </div>\n                        :\n                        null\n                    }\n                    {\n                        film.Film_Emulsion !== \"\"? \n                        <div className=\"itemRowContainer\">\n                            <div className=\"itemRowTitle\">{\"膠片規格 (乳劑型式)\"}</div>\n                            <div className=\"itemRowContent\">{film.Film_Emulsion}</div>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n            })\n\n            return output\n\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    createActorList=()=>{\n        if(this.state.movieActorList && this.state.movieActorList.length > 0 )\n        {\n            return <div className=\"MovieActorListArea\">\n                <div className=\"MovieRowTitle\">{\"演員列表\"}</div>\n                {this.createActorRow()}\n\n            </div>\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    createStaffList=()=>{\n        if(this.state.movieStaffList && this.state.movieStaffList.length > 0 )\n        {\n            return <div className=\"MovieStaffListArea\">\n                <div className=\"MovieRowTitle\">{\"職員列表\"}</div>\n                {this.createStaffRow()}\n\n            </div>\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    createActorRow=()=>{\n        let output = this.state.movieActorList.map((actor,index)=>{\n            return <div className=\"MovieActorRowContent\">\n                <div className=\"MovieActorName\">{actor.Movie_ActorName}</div>\n                <div className=\"MovieRoleName\">{actor.Movie_RoleName !== \"\" ? \"飾演 \" +actor.Movie_RoleName : null}</div>\n            </div>\n\n        })\n\n        return output\n    }\n\n    createStaffRow=()=>{\n        let output = this.state.movieStaffList.map((actor,index)=>{\n            if(actor.Movie_StaffName || actor.Movie_Company)\n            {\n                return <div className=\"MovieStaffRowContent\">\n                    <div className=\"MovieStaffName\">{actor.Movie_StaffName ? actor.Movie_StaffName : actor.Movie_Company }</div>\n                    <div className=\"MoviePositionName\">{actor.Movie_Position !== \"\" ? \" \" +actor.Movie_Position : null}</div>\n                </div>\n            }\n            else\n            {\n                return null\n            }\n        })\n\n        return output\n    }\n\n    render(){\n        return(  \n            <div>        \n                <div className=\"MovieMainBody\">  \n                    {\n                        this.state.movieMainInfo?\n                        <div className=\"MovieLeftArea\">\n                            <div className=\"MovieTitle\">{this.removeSpaceFromString(this.state.movieMainInfo.Movie_TitleMain) !== \"\" ? this.state.movieMainInfo.Movie_TitleMain : this.removeSpaceFromString(this.state.movieMainInfo.Movie_TitleTranslation) !== \"\"? this.state.movieMainInfo.Movie_TitleTranslation+ \" (翻譯片名)\":\"暫無片名\"}</div>\n                            <div className=\"MovieRowTitle\">{\"劇情簡介\"}</div>\n                            <div className=\"MovieRowContent\">{this.state.movieMainInfo.Movie_DramaContent ? this.state.movieMainInfo.Movie_DramaContent:\"暫無劇情簡介\"}</div>\n                            { (this.removeSpaceFromString(this.state.movieMainInfo.Movie_SubCategoryOne) !== \"\" || this.removeSpaceFromString(this.state.movieMainInfo.Movie_SubCategoryTwo) !== \"\") ? <div className=\"MovieRowContainer\"><div className=\"MovieRowTitle\">{\"種類\"}</div><div className=\"MovieRowContent\">{this.state.movieMainInfo.Movie_SubCategoryOne + \" \"+ this.state.movieMainInfo.Movie_SubCategoryTwo}</div></div>:null}\n                            { this.removeSpaceFromString(this.state.movieMainInfo.Movie_Language) !== \"\" ? <div className=\"MovieRowContainer\"><div className=\"MovieRowTitle\">{\"語言\"}</div><div className=\"MovieRowContent\">{this.state.movieMainInfo.Movie_Language}</div></div>:null}\n                            { this.removeSpaceFromString(this.state.movieMainInfo.Movie_ProductionDate) !== \"\" ? <div className=\"MovieRowContainer\"><div className=\"MovieRowTitle\">{\"出品日期\"}</div><div className=\"MovieRowContent\">{this.state.movieMainInfo.Movie_ProductionDate}</div></div>:null}\n                            { this.removeSpaceFromString(this.state.movieMainInfo.Movie_Producer ) !== \"\"? <div className=\"MovieRowContainer\"><div className=\"MovieRowTitle\">{\"製作人\"}</div><div className=\"MovieRowContent\">{this.state.movieMainInfo.Movie_Producer}</div></div>:null}\n                            { this.removeSpaceFromString(this.state.movieMainInfo.Movie_ProductionCompany ) !== \"\"? <div className=\"MovieRowContainer\"><div className=\"MovieRowTitle\">{\"製作公司\"}</div><div className=\"MovieRowContent\">{this.state.movieMainInfo.Movie_ProductionCompany}</div></div>:null}\n                            { this.removeSpaceFromString(this.state.movieMainInfo.Movie_ProductionLocation ) !== \"\"? <div className=\"MovieRowContainer\"><div className=\"MovieRowTitle\">{\"出品國家\"}</div><div className=\"MovieRowContent\">{this.state.movieMainInfo.Movie_ProductionLocation}</div></div>:null}\n                            <div style={{display:\"flex\"}}>\n                                {this.createActorList()}\n                                {this.createStaffList()}\n                            </div>\n                            <FacebookProvider appId=\"1608677022605093\">\n                                <Like href={\"\"} colorScheme=\"dark\" showFaces share />\n                            </FacebookProvider>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n                <div style={{\"width\":\"100%\"}}>\n                    <Footer/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MovieWorkInfoMainBody ","import React from 'react'\n\nconst HightlightKeywordCell=(props)=>{\n\n    const getText=()=>{\n        if(props.text)\n        {\n            if(props.keywords)\n            {\n                let keywordArray= getKeywordIndex()\n                //console.log('keywordArray')\n                //console.log(keywordArray)\n                return getFinalText(keywordArray)\n            }\n            else\n            {            \n                return props.text\n            }\n        }\n        else\n        {\n            return props.text\n        }\n    }\n\n    const getKeywordIndex=()=>{\n        let tempArray=[]\n        props.keywords.forEach((keyword,kIndex) => {\n            let color = getColor(kIndex)\n            let tempResult = [...props.text.matchAll(new RegExp(keyword.keyword,'gi'))]\n            tempResult.forEach(element=>{\n                let tempObj = {\n                    keyword:element[0],\n                    keywordID:kIndex,\n                    color:color,\n                    sIndex:element.index,\n                    eIndex:element.index+element[0].length\n                }\n                tempArray.push(tempObj)\n            })\n        })\n        tempArray.sort((a,b)=>{\n            return a.sIndex-b.sIndex\n        })\n        return tempArray\n    }\n\n    const getFinalText=(keywordArray)=>{\n\n        if(props.text && keywordArray.length>0)\n        {\n            let story = props.text\n            let count = 0\n            let sliceSIndex = 0\n            return(\n                keywordArray.map(keyword=>{                     \n                    let s = keyword.sIndex\n                    let e = keyword.eIndex\n\n                    if(count === 0)\n                    {\n                        sliceSIndex = 0    \n                    }\n   \n                    let suffix = null\n                    let prefix = story.slice(sliceSIndex,s)\n                       \n                    if(count === keywordArray.length-1)\n                    {\n                        suffix = story.slice(e,-1)\n                    }\n                        \n                    count = count + 1\n                    sliceSIndex = e\n                    return <span>{prefix}<span style={{backgroundColor:keyword.color}}>{story.slice(s,e)}</span>{suffix}</span>\n                })\n            )\n        }\n        else\n        {\n            return props.text\n        }\n    }\n\n    const getColor=(index)=>{        \n        switch(index){\n            case 0:\n                return '#ffff5e';\n            case 1:\n                return '#5efaff';\n            case 2:\n                return '#c1ffbf';\n            case 3:\n                return '#ff6b6b';\n            default:\n                return '#d9d9d9'\n        }\n    }\n\n    return <div>{getText()}</div>\n}\n\nexport default HightlightKeywordCell\n","import React from 'react'\nimport './ResultRow.css'\nimport HightlightKeywordCell from '../Function/HighlightKeywordCell'\n\nexport default function ResultRow(props) {\n    const movieResultRowClick=(e,sysID)=>{\n        console.log(\"movieResultRowClick\")\n        console.log(sysID)\n        props.getSelectedRow(sysID)\n    }\n\n    const productionInfo=()=>{\n        let productionDate = props.rowData.Movie_ProductionDate.replace(/\\s/g,\"\")\n        let productionLocation = props.rowData.Movie_ProductionLocation.replace(/\\s/g,\"\")\n\n        if(productionDate !== \"\" && productionLocation !== \"\")\n        {\n            return <HightlightKeywordCell text={ \"( \"+props.rowData.Movie_ProductionDate+\"  \"+props.rowData.Movie_ProductionLocation+\" )\"}/>\n        }\n        else if(productionDate !== \"\" && productionLocation == \"\")\n        {\n            return <HightlightKeywordCell text={ \"( \"+props.rowData.Movie_ProductionDate+\" )\"}/>\n        }\n        else if(productionDate == \"\" && productionLocation !== \"\")\n        {\n            return <HightlightKeywordCell text={ \"( \"+props.rowData.Movie_ProductionLocation+\" )\"}/>\n        }\n        else\n        {\n            return null\n        }\n\n    }\n\n    return(\n        <div className={\"ResultRow\"} onClick={(e)=>movieResultRowClick(e,props.rowData.Movie_SysID)}>\n            <div className={\"MovieResultRowCheckBoxCell\"}>\n                <input className={\"MovieResultRowCheckBox\"} name=\"selectedToExportTable\" type=\"checkbox\" checked={false}/>\n                <div className={\"MovieResultRowCheckBoxNumber\"} >{props.rowIndex ? props.rowIndex+\".\" : null}</div>\n            </div>\n            <div className={\"MovieResultRowCell\"}>\n                <div className={\"MovieMainTitle\"}>{props.rowData ? <HightlightKeywordCell text={props.rowData.Movie_TitleMain ? props.rowData.Movie_TitleMain !== \" \" ? props.rowData.Movie_TitleMain : props.rowData.Movie_TitleTranslation+\" (翻譯片名)\"  : props.rowData.Movie_TitleTranslation+\" (翻譯片名)\"} keywords={props.searchWord}/> :null}</div>\n                <div className={\"MovieProductionDate\"}>{props.rowData ? productionInfo() :null}</div>\n            </div>\n            <div className={\"MovieResultRowCell\"}>\n                <div className={\"MovieDramaContain\"}>{props.rowData ? props.rowData.Movie_DramaContent !== \"\" ? <HightlightKeywordCell text={props.rowData.Movie_DramaContent} keywords={props.searchWord}/> : <div style={{color:\"gray\"}}>目前無劇情簡介 </div>: null}</div>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport './PageSelectFunctionArea.css'\n\n\n\nclass PageSelectFunctionArea extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            totalNumber:null,\n        }\n    }\n\n    componentDidMount(){\n        console.log(\"PageSelectFunctionArea componentDidMount\")\n        console.log(this.props.storedTotalNumber)\n        this.setState({\n            totalNumber:Number(this.props.storedTotalNumber)\n        })\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.storedTotalNumber !== this.props.storedTotalNumber)\n        {\n            if(prevProps.storedLimitNumber === this.props.storedLimitNumber && prevProps.storedPageNumber === this.props.storedPageNumber)\n            {\n                this.setState({\n                    totalNumber:Number(this.props.storedTotalNumber)\n                })\n            }\n        }\n    }\n\n    changeLimitValue=(e)=>{\n        e.stopPropagation();\n        this.props.getPageLimitInfo(Number(e.target.value))\n    }\n\n    changeCurrentPage=(e)=>{\n        e.stopPropagation();   \n        if(e.target.value <= this.getTotalPageNumber())\n        {\n            this.props.getPageNumberInfo(Number(e.target.value))\n        }      \n        //this.props.getPageNumberInfo(e.target.value)\n    }\n\n    changeCurrentPageByClick=(e,type)=>{\n        let pageToken = 0\n        switch (type){\n            case \"first\":\n                this.props.getPageNumberInfo(1)\n                break;\n            case \"minusTen\":\n                pageToken = 1\n                if(this.props.storedPageNumber-10 > 1)\n                {\n                    pageToken = Number(this.props.storedPageNumber)-10\n                }\n                this.props.getPageNumberInfo(pageToken)\n                break;\n            case \"minusOne\":\n                pageToken = 1\n                if(this.props.storedPageNumber-1 > 1)\n                {\n                    pageToken = Number(this.props.storedPageNumber)-1\n                }\n                this.props.getPageNumberInfo(pageToken)\n                break;\n            case \"last\":\n                this.props.getPageNumberInfo(this.getTotalPageNumber())\n                break;\n            case \"addTen\":\n                pageToken = this.getTotalPageNumber()\n                if(this.props.storedPageNumber+10 < this.getTotalPageNumber())\n                {\n                    pageToken = Number(this.props.storedPageNumber)+10\n                }\n                this.props.getPageNumberInfo(pageToken)\n                break;\n            case \"addOne\":\n                console.log(\"addOne\")\n                pageToken = this.getTotalPageNumber()\n                if(Number(this.props.storedPageNumber)+1 < Number(this.getTotalPageNumber()))\n                {\n                    pageToken = Number(this.props.storedPageNumber)+1\n                }\n                this.props.getPageNumberInfo(pageToken)\n                break;\n        }\n    }\n\n    getTotalPageNumber=()=>{\n        let output = 0\n        let leftNumber =0 \n        if(this.state.totalNumber)\n        {\n            output = Math.floor(this.state.totalNumber/this.props.storedLimitNumber)\n            leftNumber = this.state.totalNumber % this.props.storedLimitNumber\n        }\n        \n\n        if(output === 0)\n        {\n            output = 1\n        }\n        else\n        {\n            if(leftNumber !== 0)\n            {\n                output = output + 1\n            }\n        }\n\n        return output\n    }\n\n   \n    render(){\n        console.log(\"pageSelectFunctionArea render...\")\n        \n        return(\n            \n                <div className=\"pageFunctionArea\">\n                    <div className=\"leftFieldGroup\">\n                        <div className=\"fieldTitle\">每頁筆數</div>\n                        <form>\n                            <select value={this.props.storedLimitNumber} onChange={this.changeLimitValue} className=\"pageLimitSelect\">\n                                <option value=\"10\">10</option>\n                                <option value=\"20\">20</option>\n                                <option value=\"50\">50</option>\n                                <option value=\"100\">100</option>\n                            </select>\n                        </form>\n                    </div>\n                    <div className=\"centerFieldGroup\">\n                        <div className=\"fieldTitle\">總筆數<a style={{color:\"#ffe736\"}}>{this.state.totalNumber}</a>筆</div>\n                        <div className=\"fieldTitle\">共<a style={{color:\"#ffe736\"}}>{this.getTotalPageNumber()}</a>頁</div>  \n                        <div className=\"fieldTitle\">目前頁面</div>\n                        <form>\n                            <input className=\"pageNumberInput\" type='text' value={this.props.storedPageNumber} onChange={this.changeCurrentPage}/>\n                        </form>   \n                        <div className=\"arrowIconArea\">\n                            <div className=\"arrowIcon\" onClick={(e)=>this.changeCurrentPageByClick(e,\"first\")}>&#10072; &#10092;</div>\n                            <div className=\"arrowIcon\" onClick={(e)=>this.changeCurrentPageByClick(e,\"minusTen\")}>&#10092; &#10092;</div>\n                            <div className=\"arrowIcon\" onClick={(e)=>this.changeCurrentPageByClick(e,\"minusOne\")}>&#10092;</div>\n                            <div className=\"fieldTitle\"><a style={{color:\"#ffe736\"}}>{this.props.storedPageNumber}</a></div>\n                            <div className=\"arrowIcon\" onClick={(e)=>this.changeCurrentPageByClick(e,\"addOne\")}>&#10093;</div>\n                            <div className=\"arrowIcon\" onClick={(e)=>this.changeCurrentPageByClick(e,\"addTen\")}>&#10093; &#10093;</div>\n                            <div className=\"arrowIcon\" onClick={(e)=>this.changeCurrentPageByClick(e,\"last\")}>&#10093; &#10072;</div>\n                        </div>        \n                    </div>    \n                </div>\n          \n        )\n    }\n}\n\nexport default PageSelectFunctionArea","import React, { Component } from 'react';\nimport {serverIP} from '../IPAdressModule'\nimport './ResultListMainBody.css';\nimport IPAddress from '../IPAddress'\nimport ResultRow from './ResultRow'\nimport PageSelectFunctionArea from './PageSelectFunctionArea'\nimport Footer from '../Footer/Footer'\n\n\nclass ResultListMainBody extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            searchWord:null,\n            listData:null,\n            limitNumber:null,\n            pageNumber:null,\n            totalNumber:\"\",\n            orderType:\"ASC\",\n            orderColumn:\"Movie_TitleMain\",\n            searchType:\"basic\",\n            searchColumn:\"All\",\n            metaInfo:null,\n            metaSelectedInfo:null,\n            metaCategoryToggle:{\n                ActorName:false,\n                Category:false,\n                Producer:false,\n                ProductionCompany:false,\n                ProductionDate:false,\n                ProductionLocation:false,\n                StaffCompany:false,\n                StaffName:false\n            },\n            ipAddress:null\n        }\n        this.controller = new AbortController()\n        this.signal = this.controller.signal\n    }\n\n    \n\n    \n    componentDidMount(){\n        //this.testTimeOut()\n        this.initialIPAddress()\n        this.initialState()   \n        \n    }\n\n    componentDidUpdate(prevProps,prevState){\n        console.log(\"ResultListMainBody Update...\")\n        if(prevProps.match.params.searchType !== this.props.match.params.searchType || prevProps.match.params.query !== this.props.match.params.query || prevProps.match.params.limit !== this.props.match.params.limit || prevProps.match.params.page !== this.props.match.params.page)\n        {\n            console.log(\"A1\")\n            if(this.state.metaSelectedInfo)\n            {\n                console.log(\"A1-1\")\n                if(prevProps.match.params.searchType !== this.props.match.params.searchType || prevProps.match.params.query !== this.props.match.params.query)\n                {\n                    console.log(\"A1-1-1\")\n                    this.initialState()\n                }\n            }\n            else\n            {\n                this.initialState()             \n            }\n        }\n    }\n\n    componentWillUnmount(){\n        this.abortFetching()\n    }\n\n    initialStateTemp=()=>{\n        let limitNumber = this.props.match.params.limit\n        let pageNumber = this.props.match.params.page\n        \n        this.setState({\n            searchType:this.props.match.params.searchType,\n            limitNumber:limitNumber,\n            pageNumber:pageNumber,\n            listData:null,\n            metaInfo:null,\n            totalNumber:\"\",\n        },()=>{\n            this.getRecord()\n        })\n    }\n\n    initialState=()=>{\n        let limitNumber = this.props.match.params.limit\n        let pageNumber = this.props.match.params.page\n        //console.log(this.props.match.params.query)\n        let query = JSON.parse(decodeURI(this.props.match.params.query))\n\n        //console.log(query)\n        this.setState({\n            searchType:this.props.match.params.searchType,\n            limitNumber:limitNumber,\n            pageNumber:pageNumber,\n            searchWord:query,\n            listData:null,\n            metaInfo:null,\n            totalNumber:\"\",\n        },()=>{\n            this.getRecord()\n        })\n    }\n\n    initialIPAddress=()=>{\n        let tempIP = new IPAddress()\n        this.setState({\n            ipAddress:tempIP.state.ip\n        })\n    }\n\n    getRecord=()=>{\n        if(this.state.searchType && this.state.searchType === \"basic\")\n        {\n            if(!this.state.searchWord)\n            {\n                console.log(\"A1-1\")\n                console.log(this.state.searchWord)\n                this.getAllRecord()\n                .then(res=>{\n                    this.setState({\n                        showWarningDialog:false,\n                        listData:res,\n                        totalNumber:res[0].Movie_TotalCount,\n                    })             \n                })\n\n                this.getMetaByBasicQuery()\n            }\n            else\n            {\n                console.log(\"A1-2\")\n                console.log(this.state.searchWord)\n                \n                this.getRecordByBasicSearch()\n\n                .then(res=>{\n                    if(res[0])\n                    {\n                        this.setState({\n                            showWarningDialog:false,\n                            listData:res,\n                            totalNumber:res[0].Movie_TotalCount,\n                        })     \n                    }\n                    else\n                    {\n                        this.setState({\n                            showWarningDialog:false,\n                            listData:null,\n                            totalNumber:0,\n                        })\n                    }             \n                })\n\n                this.getMetaByBasicQuery()\n            }\n        }\n        else if(this.state.searchType && this.state.searchType === \"advance\")\n        {\n            console.log(\"A2-1\")\n            this.getRecordByAdvanceSearch()\n            .then(res=>{\n                if(res[0])\n                {\n                    this.setState({\n                        showWarningDialog:false,\n                        listData:res,\n                        totalNumber:res[0].Movie_TotalCount,\n                    })     \n                }\n                else\n                {\n                    this.setState({\n                        showWarningDialog:false,\n                        listData:null,\n                        totalNumber:0,\n                    })\n                }             \n            })\n\n            this.getMetaByAdvanceQuery()\n        }\n    }\n\n    testTimeOut=async()=>{\n        let msg = await fetch(serverIP+'/api/movie/',{\n            method:'get',\n            signal:this.signal\n        })\n\n        let output = await msg\n        //if(msg.status !== 200) throw Error(msg.message)\n        console.log(output)\n    }\n\n\n    getAllRecord = async()=>{\n        console.log(\"proceed getAllRecord...\")\n        let limitNumber = this.state.limitNumber\n        let pageNumber = this.state.pageNumber\n        let orderType = this.state.orderType\n        let orderColumn = this.state.orderColumn\n        let msg = await fetch(serverIP+'/api/movie/basicQuery/frontend/limit/'+limitNumber+'/pageNumber/'+pageNumber+'/orderColumn/'+orderColumn+'/orderType/'+orderType+'/query/default',{\n            method:'get',\n            signal:this.signal\n        })\n\n        let output = await msg.json()\n        if(msg.status !== 200) throw Error(msg.message)\n        //console.log(output)\n        return output\n    }\n\n    abortFetching=()=>{\n        console.log('abortFetching')\n        this.controller.abort()\n    }\n\n\n    getRecordByBasicSearch = async()=>{\n        console.log(\"proceed getRecordByBasicSearch...\")\n        let limitNumber = this.state.limitNumber\n        let pageNumber = this.state.pageNumber\n        let orderType = this.state.orderType\n        let orderColumn = this.state.orderColumn\n        let queryWords = encodeURI(JSON.stringify(this.state.searchWord))\n        console.log(\"limitNumber : \",limitNumber)\n        console.log(\"pageNumber : \",pageNumber)\n        console.log(\"orderType : \",orderType)\n        console.log(\"orderColumn : \",orderColumn)\n        console.log(\"queryWords : \",queryWords)\n        let msg = await fetch(serverIP+'/api/movie/basicQuery/frontend/limit/'+limitNumber+'/pageNumber/'+pageNumber+'/orderColumn/'+orderColumn+'/orderType/'+orderType+'/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n\n        let output = await msg.json()\n        if(msg.status !== 200) throw Error(msg.message)\n        console.log(output)\n        return output\n    }\n\n    \n\n    getRecordByBasicQueryValidation = async()=>{\n        console.log(\"getRecordByBasicQueryValidation...\")\n        let limitNumber = this.state.limitNumber\n        let pageNumber = this.state.pageNumber\n        let orderType = this.state.orderType\n        let orderColumn = this.state.orderColumn\n        let queryWords = encodeURI(JSON.stringify(this.state.searchWord))\n        console.log(\"limitNumber : \",limitNumber)\n        console.log(\"pageNumber : \",pageNumber)\n        console.log(\"orderType : \",orderType)\n        console.log(\"orderColumn : \",orderColumn)\n        console.log(\"queryWords : \",queryWords)\n        let msg = await fetch(serverIP+'/api/movie/basicQueryValidation/frontend/limit/'+limitNumber+'/pageNumber/'+pageNumber+'/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n\n        let output = await msg.json()\n        if(msg.status !== 200) throw Error(msg.message)\n        //console.log(output)\n        return output\n    }\n\n    getMetaByBasicQuery = async()=>{\n        console.log(\"getMetaByBasicQuery...\")\n       \n        let queryWords = encodeURI(JSON.stringify(this.state.searchWord))\n        console.log(\"querywords : \", queryWords)\n\n        let tempState = {}\n\n        let msgStaffName = await fetch(serverIP+'/api/movie/basicQuery/frontend/meta/field/StaffName/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        \n        let msgCategory = await fetch(serverIP+'/api/movie/basicQuery/frontend/meta/field/Category/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        let msgProducer = await fetch(serverIP+'/api/movie/basicQuery/frontend/meta/field/Producer/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        let msgProductionCompany = await fetch(serverIP+'/api/movie/basicQuery/frontend/meta/field/ProductionCompany/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        let msgProductionDate = await fetch(serverIP+'/api/movie/basicQuery/frontend/meta/field/ProductionDate/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        let msgProductionLocation = await fetch(serverIP+'/api/movie/basicQuery/frontend/meta/field/ProductionLocation/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        let msgActorName = await fetch(serverIP+'/api/movie/basicQuery/frontend/meta/field/ActorName/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        \n        let msgStaffCompany = await fetch(serverIP+'/api/movie/basicQuery/frontend/meta/field/StaffCompany/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n\n        let outputCategory = await msgCategory.json()\n        let outputProducer = await msgProducer.json()\n        let outputProductionCompany = await msgProductionCompany.json()\n        let outputProductionDate = await msgProductionDate.json()\n        let outputProductionLocation = await msgProductionLocation.json()\n        let outputActorName = await msgActorName.json()\n        let outputStaffName = await msgStaffName.json()\n        let outputStaffCompany = await msgStaffCompany.json()\n\n        if(outputCategory)\n        {\n            tempState.Category = outputCategory\n        }\n\n        if(outputProducer)\n        {\n            tempState.Producer = outputProducer\n        }\n\n        if(outputProductionCompany)\n        {\n            tempState.ProductionCompany = outputProductionCompany\n        }\n        \n        if(outputProductionDate)\n        {\n            tempState.ProductionDate = outputProductionDate\n        }\n\n        if(outputProductionLocation)\n        {\n            tempState.ProductionLocation = outputProductionLocation\n        }\n        \n        if(outputActorName)\n        {\n            tempState.ActorName = outputActorName\n        }\n\n        if(outputStaffName)\n        {\n            tempState.StaffName = outputStaffName\n        }\n\n        if(outputStaffCompany)\n        {\n            tempState.StaffCompany = outputStaffCompany\n        }\n        \n        if(tempState !== this.state.metaInfo)\n        {\n            this.setState({\n                metaInfo:tempState\n            })\n        }\n    }\n\n    getRecordByBasicAndMetaSearch = async(metaInfo)=>{\n        console.log(\"proceed getRecordByBasicAndMetaSearch...\")\n        \n        let limitNumber = this.state.limitNumber\n        let pageNumber = this.state.pageNumber\n        let orderType = this.state.orderType\n        let orderColumn = this.state.orderColumn\n        let queryWords = encodeURI(JSON.stringify(this.state.searchWord))\n        let encodeMetaInfo = encodeURI(JSON.stringify(metaInfo))\n        console.log(\"limitNumber : \",limitNumber)\n        console.log(\"pageNumber : \",pageNumber)\n        console.log(\"orderType : \",orderType)\n        console.log(\"orderColumn : \",orderColumn)\n        console.log(\"queryWords : \",queryWords)\n\n        \n\n\n        let msg = await fetch(serverIP+'/api/movie/basicQuery/frontend/metaAndSearch/limit/'+limitNumber+'/pageNumber/'+pageNumber+'/orderColumn/'+orderColumn+'/orderType/'+orderType+'/query/'+queryWords+'/metaInfo/'+encodeMetaInfo,{\n            method:'get',\n            signal:this.signal\n        })\n\n        let output = await msg.json()\n        if(msg.status !== 200) throw Error(msg.message)\n        //console.log(output)\n        return output\n    }\n\n    getMetaByAdvanceQuery = async()=>{\n        console.log(\"getMetaByAdvanceQuery...\")\n       \n        let queryWords = encodeURI(JSON.stringify(this.state.searchWord))\n\n        let tempState = {}\n\n        let msgCategory = await fetch(serverIP+'/api/movie/advanceQuery/frontend/meta/field/Category/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        let msgProducer = await fetch(serverIP+'/api/movie/advanceQuery/frontend/meta/field/Producer/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        let msgProductionCompany = await fetch(serverIP+'/api/movie/advanceQuery/frontend/meta/field/ProductionCompany/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        let msgProductionDate = await fetch(serverIP+'/api/movie/advanceQuery/frontend/meta/field/ProductionDate/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        let msgProductionLocation = await fetch(serverIP+'/api/movie/advanceQuery/frontend/meta/field/ProductionLocation/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        let msgActorName = await fetch(serverIP+'/api/movie/advanceQuery/frontend/meta/field/ActorName/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        let msgStaffName = await fetch(serverIP+'/api/movie/advanceQuery/frontend/meta/field/StaffName/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n        let msgStaffCompany = await fetch(serverIP+'/api/movie/advanceQuery/frontend/meta/field/StaffCompany/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n\n        let outputCategory = await msgCategory.json()\n        let outputProducer = await msgProducer.json()\n        let outputProductionCompany = await msgProductionCompany.json()\n        let outputProductionDate = await msgProductionDate.json()\n        let outputProductionLocation = await msgProductionLocation.json()\n        let outputActorName = await msgActorName.json()\n        let outputStaffName = await msgStaffName.json()\n        let outputStaffCompany = await msgStaffCompany.json()\n\n        if(outputCategory)\n        {\n            tempState.Category = outputCategory\n        }\n\n        if(outputProducer)\n        {\n            tempState.Producer = outputProducer\n        }\n\n        if(outputProductionCompany)\n        {\n            tempState.ProductionCompany = outputProductionCompany\n        }\n        \n        if(outputProductionDate)\n        {\n            tempState.ProductionDate = outputProductionDate\n        }\n\n        if(outputProductionLocation)\n        {\n            tempState.ProductionLocation = outputProductionLocation\n        }\n        \n        if(outputActorName)\n        {\n            tempState.ActorName = outputActorName\n        }\n\n        if(outputStaffName)\n        {\n            tempState.StaffName = outputStaffName\n        }\n\n        if(outputStaffCompany)\n        {\n            tempState.StaffCompany = outputStaffCompany\n        }\n        \n        if(tempState !== this.state.metaInfo)\n        {\n            this.setState({\n                metaInfo:tempState\n            })\n        } \n    }\n\n    getRecordByAdvanceAndMetaSearch = async(metaInfo)=>{\n        console.log(\"getRecordByAdvanceAndMetaSearch...\")\n        let limitNumber = this.state.limitNumber\n        let pageNumber = this.state.pageNumber\n        let orderType = this.state.orderType\n        let orderColumn = this.state.orderColumn\n        let objA={}\n        let objB={}\n\n        let tempArray = [...this.state.searchWord]\n\n        switch(metaInfo.type){\n            case \"ActorName\":\n                objA = {\n                    boolean:\"AND\",\n                    columnName:\"Movie_ActorName\",\n                    keyword:metaInfo.keywordA,\n                    operator:\"Equal\"\n                }\n\n                tempArray.push(objA)\n                break;\n            case \"Category\":\n                objA = {\n                    boolean:\"AND\",\n                    columnName:\"Movie_SubCategoryOne\",\n                    keyword:metaInfo.keywordA,\n                    operator:\"Equal\"\n                }\n\n                objB = {\n                    boolean:\"AND\",\n                    columnName:\"Movie_SubCategoryTwo\",\n                    keyword:metaInfo.keywordB,\n                    operator:\"Equal\"\n                }\n                tempArray.push(objA, objB)\n                break;\n            case \"Producer\":\n                objA = {\n                    boolean:\"AND\",\n                    columnName:\"Movie_Producer\",\n                    keyword:metaInfo.keywordA,\n                    operator:\"Equal\"\n                }\n\n                tempArray.push(objA)\n                break;                \n            case \"ProductionCompany\":\n                objA = {\n                    boolean:\"AND\",\n                    columnName:\"Movie_ProductionCompany\",\n                    keyword:metaInfo.keywordA,\n                    operator:\"Equal\"\n                }\n\n                tempArray.push(objA)\n                break;\n            case \"ProductionDate\":\n                objA = {\n                    boolean:\"AND\",\n                    columnName:\"Movie_ProductionDate\",\n                    keyword:metaInfo.keywordA,\n                    operator:\"Equal\"\n                }\n\n                tempArray.push(objA)\n                break;\n            case \"ProductionLocation\":\n                objA = {\n                    boolean:\"AND\",\n                    columnName:\"Movie_ProductionLocation\",\n                    keyword:metaInfo.keywordA,\n                    operator:\"Equal\"\n                }\n\n                tempArray.push(objA)\n                break;\n            case \"StaffCompany\":\n                objA = {\n                    boolean:\"AND\",\n                    columnName:\"Movie_Company\",\n                    keyword:metaInfo.keywordA,\n                    operator:\"Equal\"\n                }\n\n                objB = {\n                    boolean:\"AND\",\n                    columnName:\"Movie_Position\",\n                    keyword:metaInfo.keywordB,\n                    operator:\"Equal\"\n                }\n                tempArray.push(objA, objB)\n                break;\n            case \"StaffName\":\n                objA = {\n                    boolean:\"AND\",\n                    columnName:\"Movie_StaffName\",\n                    keyword:metaInfo.keywordA,\n                    operator:\"Equal\"\n                }\n\n                objB = {\n                    boolean:\"AND\",\n                    columnName:\"Movie_Position\",\n                    keyword:metaInfo.keywordB,\n                    operator:\"Equal\"\n                }\n                tempArray.push(objA, objB)\n                break;\n        }\n        \n        let queryWords = encodeURI(JSON.stringify(tempArray))\n        \n        console.log(\"limitNumber : \",limitNumber)\n        console.log(\"pageNumber : \",pageNumber)\n        console.log(\"orderType : \",orderType)\n        console.log(\"orderColumn : \",orderColumn)\n        console.log(\"queryWords : \",queryWords)\n\n        let msg = await fetch(serverIP+'/api/movie/advanceQuery/frontend/limit/'+limitNumber+'/pageNumber/'+pageNumber+'/orderColumn/'+orderColumn+'/orderType/'+orderType+'/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n\n        let output = await msg.json()\n        if(msg.status !== 200) throw Error(msg.message)\n        //console.log(output)\n        return output\n    }\n\n    getRecordByAdvanceSearch = async()=>{\n        console.log(\"proceed getRecordByAdvanceSearch...\")\n        let limitNumber = this.state.limitNumber\n        let pageNumber = this.state.pageNumber\n        let orderType = this.state.orderType\n        let orderColumn = this.state.orderColumn\n        let queryWords = encodeURI(JSON.stringify(this.state.searchWord))\n        console.log(\"limitNumber : \",limitNumber)\n        console.log(\"pageNumber : \",pageNumber)\n        console.log(\"orderType : \",orderType)\n        console.log(\"orderColumn : \",orderColumn)\n        console.log(\"queryWords : \",queryWords)\n        let msg = await fetch(serverIP+'/api/movie/advanceQuery/frontend/limit/'+limitNumber+'/pageNumber/'+pageNumber+'/orderColumn/'+orderColumn+'/orderType/'+orderType+'/query/'+queryWords,{\n            method:'get',\n            signal:this.signal\n        })\n\n        let output = await msg.json()\n        if(msg.status !== 200) throw Error(msg.message)\n        //console.log(output)\n        return output\n    }\n\n    getSearchWords=()=>{\n             \n            if(this.state.searchType === \"basic\")\n            { \n                let output = \"\"\n                if(this.state.searchWord)      \n                {\n                    this.state.searchWord.forEach((word,index) => {\n                        if(index === 0)\n                        {\n                            output = word.keyword\n                        }\n                        else\n                        {\n                            output = output+\" \"+word.boolean+\" \"+word.keyword \n                        }\n                    });\n                }\n                else\n                {\n                    output = \"無關鍵字，搜尋全部資料\"\n                }  \n                \n                return  <div className=\"ResultListInfoArea\">\n                        <div className=\"ResultListInfoAreaRow\">\n                            <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                            <div className=\"ResultListInfoAreaRowContent\">{output}</div>\n                        </div>\n                        <div className=\"ResultListInfoAreaRow\">\n                            <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋結果筆數 : \"}</div>\n                            <div className=\"ResultListInfoAreaRowContent\">{this.state.totalNumber + \" 筆\"}</div>\n                        </div>\n                    </div>\n                \n            }\n            else if(this.state.searchType === \"advance\")\n            {\n                let output = this.state.searchWord.map((word,index)=>{\n                    return <div className=\"ResultListInfoAreaRowParent\">\n                        <div className=\"ResultListInfoAreaRow\">\n                            <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                            <div className=\"ResultListInfoAreaRowContent\">{word.keyword}</div>\n                        </div>\n                        <div className=\"ResultListInfoAreaRow\">\n                            <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                            <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(word.columnName)}</div>\n                        </div>\n                        <div className=\"ResultListInfoAreaRow\">\n                            <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                            <div className=\"ResultListInfoAreaRowContent\">{this.getOperator(word.operator)}</div>\n                        </div>\n                        <div className=\"ResultListInfoAreaRow\">\n                            <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                            <div className=\"ResultListInfoAreaRowContent\">{word.boolean}</div>\n                        </div>\n                    </div>\n                })\n\n                return  <div className=\"ResultListInfoArea\">\n                    <div style={{width:\"60%\"}}>\n                        {output}\n                    </div>\n                    <div className=\"ResultListInfoAreaRow\">\n                        <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋結果筆數 : \"}</div>\n                        <div className=\"ResultListInfoAreaRowContent\">{this.state.totalNumber + \" 筆\"}</div>\n                    </div>\n                </div>\n                \n\n            }\n            else if(this.state.searchType === \"basicMeta\")\n            {             \n                let output = \"\"\n                if(this.state.searchWord)      \n                {\n                    this.state.searchWord.forEach((word,index) => {\n                        if(index === 0)\n                        {\n                            output = word.keyword\n                        }\n                        else\n                        {\n                            output = output+\" \"+word.boolean+\" \"+word.keyword \n                        }\n                    });\n                }\n                else\n                {\n                    output = \"無關鍵字，搜尋全部資料\"\n                }  \n                \n                return  <div className=\"ResultListInfoContainerArea\">\n                    <div className=\"ResultListInfoArea\">\n                        <div className=\"ResultListInfoAreaRow\">\n                            <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                            <div className=\"ResultListInfoAreaRowContent\">{output}</div>\n                        </div>\n                                                \n                    </div>\n                    {this.getMetaSearchInfoView()}\n                    <div className=\"ResultListInfoAreaRow\">\n                        <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋結果筆數 : \"}</div>\n                        <div className=\"ResultListInfoAreaRowContent\">{this.state.totalNumber + \" 筆\"}</div>\n                    </div>\n                </div>\n            }\n            else if(this.state.searchType === \"advanceMeta\")\n            {     \n                let objA\n                let objB        \n                let output = this.state.searchWord.map((word,index)=>{\n                    return <div className=\"ResultListInfoAreaRowParent\">\n                        <div className=\"ResultListInfoAreaRow\">\n                            <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                            <div className=\"ResultListInfoAreaRowContent\">{word.keyword}</div>\n                        </div>\n                        <div className=\"ResultListInfoAreaRow\">\n                            <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                            <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(word.columnName)}</div>\n                        </div>\n                        <div className=\"ResultListInfoAreaRow\">\n                            <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                            <div className=\"ResultListInfoAreaRowContent\">{this.getOperator(word.operator)}</div>\n                        </div>\n                        <div className=\"ResultListInfoAreaRow\">\n                            <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                            <div className=\"ResultListInfoAreaRowContent\">{word.boolean}</div>\n                        </div>\n                    </div>\n                })\n\n                if(this.state.metaSelectedInfo)\n                {\n                    switch(this.state.metaSelectedInfo.type){\n                        case \"ActorName\":\n                            objA = <div className=\"ResultListInfoAreaRowParent\">\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(\"Movie_ActorName\")}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                                </div>\n                            </div>\n\n                            output.push(objA)\n                            break;\n                            \n                        case \"Category\":\n                            objA = <div className=\"ResultListInfoAreaRowParent\">\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(\"Movie_SubCategoryOne\")}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                                </div>\n                            </div>\n\n                            objB = <div className=\"ResultListInfoAreaRowParent\">\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordB ? this.state.metaSelectedInfo.keywordB.replace('@','/'):null}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(\"Movie_SubCategoryTwo\")}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                                </div>\n                            </div>\n\n                            output.push(objA, objB)\n                            break;\n                        case \"Producer\":\n                            objA = <div className=\"ResultListInfoAreaRowParent\">\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(\"Movie_Producer\")}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                                </div>\n                            </div>\n\n                            output.push(objA)\n                            break;\n                        case \"ProductionCompany\":\n                            objA = <div className=\"ResultListInfoAreaRowParent\">\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(\"Movie_ProductionCompany\")}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                                </div>\n                            </div>\n\n                            output.push(objA)\n                            break;\n                        case \"ProductionDate\":\n                            objA = <div className=\"ResultListInfoAreaRowParent\">\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(\"Movie_ProductionDate\")}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                                </div>\n                            </div>\n\n                            output.push(objA)\n                            break;\n                        case \"ProductionLocation\":\n                            objA = <div className=\"ResultListInfoAreaRowParent\">\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(\"Movie_ProductionLocation\")}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                                </div>\n                            </div>\n\n                            output.push(objA)\n                            break;\n                        case \"StaffCompany\":\n                            objA = <div className=\"ResultListInfoAreaRowParent\">\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(\"Movie_Company\")}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                                </div>\n                            </div>\n\n                            objB = <div className=\"ResultListInfoAreaRowParent\">\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordB ? this.state.metaSelectedInfo.keywordB.replace('@','/'):null}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(\"Movie_Position\")}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                                </div>\n                            </div>\n\n                            output.push(objA, objB)\n                            break;\n                        case \"StaffName\":\n                            objA = <div className=\"ResultListInfoAreaRowParent\">\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(\"Movie_StaffName\")}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                                </div>\n                            </div>\n\n                            objB = <div className=\"ResultListInfoAreaRowParent\">\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordB ? this.state.metaSelectedInfo.keywordB.replace('@','/'):null}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{this.getColumnName(\"Movie_Position\")}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                                </div>\n                                <div className=\"ResultListInfoAreaRow\">\n                                    <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                    <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                                </div>\n                            </div>\n\n                            output.push(objA, objB)\n                            break;\n                    }           \n                }\n\n\n\n                return  <div className=\"ResultListInfoArea\">\n                    <div style={{width:\"60%\"}}>\n                        {output}\n                    </div>\n                    <div className=\"ResultListInfoAreaRow\">\n                        <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋結果筆數 : \"}</div>\n                        <div className=\"ResultListInfoAreaRowContent\">{this.state.totalNumber + \" 筆\"}</div>\n                    </div>\n                </div>\n            }\n\n    }\n\n    getMetaSearchInfoView=()=>{\n        if(this.state.metaSelectedInfo)\n        {\n            switch(this.state.metaSelectedInfo.type){\n                case \"ActorName\":\n                    return <div> \n                        <div className=\"ResultListInfoAreaRowParent\">\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"演員\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                            </div>\n                        </div>\n                    </div>\n                case \"Category\":\n                    return <div> \n                        <div className=\"ResultListInfoAreaRowParent\">\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"長片短片\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                            </div>\n                        </div>\n                        <div className=\"ResultListInfoAreaRowParent\">\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordB ? this.state.metaSelectedInfo.keywordB.replace('@','/'):null}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"種類\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                            </div>\n                        </div>\n                    </div>\n                case \"Producer\":\n                    return <div> \n                        <div className=\"ResultListInfoAreaRowParent\">\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"出品人\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                            </div>\n                        </div>\n                    </div>\n                case \"ProductionCompany\":\n                    return <div> \n                        <div className=\"ResultListInfoAreaRowParent\">\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"出品公司\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                            </div>\n                        </div>\n                    </div>\n                case \"ProductionDate\":\n                    return <div> \n                        <div className=\"ResultListInfoAreaRowParent\">\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"出品日期\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                            </div>\n                        </div>\n                    </div>\n                case \"ProductionLocation\":\n                    return <div> \n                        <div className=\"ResultListInfoAreaRowParent\">\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"出品地點\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                            </div>\n                        </div>\n                    </div>\n                case \"StaffCompany\":\n                    return <div> \n                        <div className=\"ResultListInfoAreaRowParent\">\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"公司\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                            </div>\n                        </div>\n                        <div className=\"ResultListInfoAreaRowParent\">\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordB ? this.state.metaSelectedInfo.keywordB.replace('@','/'):null}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"職稱\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                            </div>\n                        </div>\n                    </div>\n                case \"StaffName\":\n                    return <div> \n                        <div className=\"ResultListInfoAreaRowParent\">\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordA ? this.state.metaSelectedInfo.keywordA.replace('@','/'):null}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"工作人員\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                            </div>\n                        </div>\n                        <div className=\"ResultListInfoAreaRowParent\">\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋關鍵字 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{this.state.metaSelectedInfo.keywordB ? this.state.metaSelectedInfo.keywordB.replace('@','/'):null}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋欄位 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"職稱\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋模式 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"等於\"}</div>\n                            </div>\n                            <div className=\"ResultListInfoAreaRow\">\n                                <div className=\"ResultListInfoAreaRowTitle\">{\"搜尋邏輯 : \"}</div>\n                                <div className=\"ResultListInfoAreaRowContent\">{\"AND\"}</div>\n                            </div>\n                        </div>\n                    </div>\n            }\n\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    getColumnName=(name)=>{\n        switch (name){\n            case \"Movie_SysID\":\n                return \"藏品系統號\";\n            case \"Movie_TitleMain\":\n                return \"主要名稱\";\n            case \"Movie_TitleTranslation\":\n                return \"翻譯名稱\";\n            case \"Movie_TitleOther\":\n                return \"其他名稱\";\n            case \"Movie_SubCategoryOne\":\n                return \"長片短片\";\n            case \"Movie_SubCategoryTwo\":\n                return \"種類\";\n            case \"Movie_ProductionDate\":\n                return \"出品日期\";\n            case \"Movie_ProductionLocation\":\n                return \"出品地點\";\n            case \"Movie_ProductionCompany\":\n                return \"出品公司\";\n            case \"Movie_Producer\":\n                return \"出品人\";\n            case \"Movie_DramaContent\":\n                return \"內容大綱\";\n            case \"Movie_Rating\":\n                return \"分級\";\n            case \"Movie_Language\":\n                return \"語言\";\n            case \"Movie_ActorName\":\n                return \"演員\";\n            case \"Movie_RoleName\":\n                return \"腳色名稱\";\n            case \"Movie_StaffName\":\n                return \"工作人員\";\n            case \"Movie_Position\":\n                return \"職稱\";\n            case \"Movie_Company\":\n                return \"公司\"\n        }\n    }\n\n    getOperator=(operator)=>{\n        switch(operator){\n            case \"Like\":\n                return \"包含\";\n            case \"Equal\":\n                return \"等於\";\n            case \"Greater\":\n                return \"大於\";\n            case \"Smaller\":\n                return \"小於\";\n        }\n    }\n\n    createRow=()=>{\n        if(this.state.listData && this.state.listData[0])\n        {\n            let output = this.state.listData.map((row,index)=>{\n                return <ResultRow rowIndex={1+index+(this.state.limitNumber*(this.state.pageNumber-1))} rowData={row} searchWord={this.state.searchWord} getSelectedRow={this.getSelectedRow}/>\n            })\n\n            let lastObj = <div className={\"LastRow\"}></div>\n\n            output.push(lastObj)\n\n            return output\n        }\n        else\n        {\n            if(this.state.totalNumber === \"\")\n            {\n                return <div>{\"資料搜尋中...\"}</div>\n            }\n            else\n            {\n                return null\n            }\n        }\n    }\n\n    createMetaInfo=()=>{\n        if(this.state.metaInfo)\n        {\n            let tempCount = 0\n            let tempArray = Object.keys(this.state.metaInfo)\n            tempArray.sort((a, b)=>{\n                if(this.state.metaInfo[a][0] && this.state.metaInfo[b][0])\n                {\n                    if(this.state.metaInfo[a][0].sumCount > this.state.metaInfo[b][0].sumCount)\n                    {\n                        return -1\n                    }\n                }\n                else if(this.state.metaInfo[b][0] && !this.state.metaInfo[a][0])\n                {\n                    return -1\n                }\n                else if(this.state.metaInfo[a][0] && !this.state.metaInfo[b][0])\n                {\n                    return -1\n                }\n                else\n                {\n                    return 0 \n                }\n            })\n\n            console.log(tempArray)\n            \n            let output = tempArray.map(field=>{\n                if(this.state.metaInfo[field].length>0)\n                {\n                    console.log(this.state.metaInfo[field])\n                    return (\n                        <div className={this.identifiedMetaAreaSelectedOrNot(field)}>\n                            <div className={\"MetaInfoTitle\"} onClick={()=>this.toggleMetaCatogory(field)}>\n                                {this.transTitle(field)}\n                            </div>\n                            {\n                                this.state.metaCategoryToggle[field] ?\n                                <div>\n                                    {this.state.metaInfo[field].map((row,index)=>{\n                                        return (this.createMetaRow(field, row, index, true))\n                                    })}\n                                </div>\n                                :\n                                <div>\n                                    {this.state.metaInfo[field].map((row,index)=>{\n                                        return (this.createMetaRow(field, row, index, false))\n                                    })}\n                                </div>                       \n                            }                     \n                        </div>\n                    )\n                }\n                else\n                {\n                    return <div></div>\n                }\n            })\n          \n            return output\n        }\n        else\n        {      \n            return <div>{\"產生後設資料中...\"}</div>       \n        }\n    }\n\n    transTitle=(field)=>{\n        switch(field){\n            case \"ActorName\":\n                return \"相關演出人員\"\n            case \"Category\":\n                return \"相關分類\"\n            case \"Producer\":\n                return \"相關出品人\"\n            case \"ProductionCompany\":\n                return \"相關出品公司\"\n            case \"ProductionDate\":\n                return \"相關出品日期\"\n            case \"ProductionLocation\":\n                return \"相關出品地點\"\n            case \"StaffCompany\":\n                return \"相關參與製作公司\"\n            case \"StaffName\":\n                return \"相關工作人員\"\n        }\n    }\n\n    createMetaRow=(type, row, index, show)=>{\n        switch(type){\n            case \"ActorName\":\n                return (\n                    <div className={this.identifiedMetaRow(type, index, show)} onClick={()=>this.metaRowClicked(type, row.Movie_ActorName, \"\", index)}>\n                        {show ? <div className={\"MetaInfoContent\"}>{row.Movie_ActorName+\" (\"+row.Count+\")\"}</div> : null }\n                    </div>\n                )\n            case \"Category\":\n                return (\n                    <div className={this.identifiedMetaRow(type, index, show)} onClick={()=>this.metaRowClicked(type, row.Movie_SubCategoryOne, row.Movie_SubCategoryTwo, index)}>\n                        {show ? <div className={\"MetaInfoContent\"}>{row.Movie_SubCategoryOne+\" / \"+row.Movie_SubCategoryTwo+\" (\"+row.Count+\")\"}</div> : null }\n                    </div>\n                )\n            case \"Producer\":\n                return (\n                    <div className={this.identifiedMetaRow(type, index, show)} onClick={()=>this.metaRowClicked(type, row.Movie_Producer, \"\", index)}>\n                        {show ? <div className={\"MetaInfoContent\"}>{row.Movie_Producer+\" (\"+row.Count+\")\"}</div> : null }\n                    </div>\n                )\n            case \"ProductionCompany\":\n                return (\n                    <div className={this.identifiedMetaRow(type, index, show)} onClick={()=>this.metaRowClicked(type, row.Movie_ProductionCompany, \"\", index)}>\n                        {show ? <div className={\"MetaInfoContent\"}>{row.Movie_ProductionCompany+\" (\"+row.Count+\")\"}</div> : null }\n                    </div>\n                )\n            case \"ProductionDate\":\n                return (\n                    <div className={this.identifiedMetaRow(type, index, show)} onClick={()=>this.metaRowClicked(type, row.Movie_ProductionDate, \"\", index)}>\n                        {show ? <div className={\"MetaInfoContent\"}>{row.Movie_ProductionDate+\" (\"+row.Count+\")\"}</div> : null }\n                    </div>\n                )\n            case \"ProductionLocation\":\n                return (\n                    <div className={this.identifiedMetaRow(type, index, show)} onClick={()=>this.metaRowClicked(type, row.Movie_ProductionLocation, \"\", index)}>\n                        {show ? <div className={\"MetaInfoContent\"}>{row.Movie_ProductionLocation+\" (\"+row.Count+\")\"}</div> : null}\n                    </div>\n                )\n            case \"StaffCompany\":\n                return (\n                    <div className={this.identifiedMetaRow(type, index, show)} onClick={()=>this.metaRowClicked(type, row.Movie_Company, row.Movie_Position, index)}>\n                        {show ? <div className={\"MetaInfoContent\"}>{row.Movie_Company+\" / \"+row.Movie_Position+\" (\"+row.Count+\")\"}</div> : null}\n                    </div>\n                )\n            case \"StaffName\":\n                return (\n                    <div className={this.identifiedMetaRow(type, index, show)} onClick={()=>this.metaRowClicked(type, row.Movie_StaffName, row.Movie_Position, index)}>\n                        {show ? <div className={\"MetaInfoContent\"}>{row.Movie_StaffName+\" / \"+row.Movie_Position+\" (\"+row.Count+\")\"}</div> : null}\n                    </div>\n                )\n        }\n    }\n\n    identifiedMetaRow=(type, index, show)=>{\n\n        if(show)\n        {\n            if(this.state.metaSelectedInfo)\n            {\n                if(this.state.metaSelectedInfo.type === type && this.state.metaSelectedInfo.index === index)\n                {\n                    return \"MetaInfoRow Selected\"\n                }\n                else\n                {\n                    return \"MetaInfoRow Expand\"\n                }\n            }\n            else\n            {\n                return \"MetaInfoRow Expand\"\n            }\n        }\n        else\n        {\n            return \"MetaInfoRow\"\n        }    \n    }\n\n    identifiedMetaAreaSelectedOrNot=(field)=>{\n        if(this.state.metaCategoryToggle[field])\n        {\n            return \"MetaInfoArea Expand\"\n        }\n        else\n        {\n            return \"MetaInfoArea\"\n        }\n    }\n\n    toggleMetaCatogory=(field)=>{      \n        let tempObj = this.state.metaCategoryToggle\n        tempObj[field] = !this.state.metaCategoryToggle[field]\n        this.setState({\n            metaCategoryToggle:tempObj\n        })\n    }\n\n    \n\n    metaRowClicked=(type, keywordA, keywordB, index)=>{\n        console.log(\"type : \", type)\n        console.log(keywordA, keywordB)\n\n        let outputKeywordB = 'null'\n\n        if(keywordB || keywordB !== \"\")\n        {\n            outputKeywordB = keywordB\n        }\n\n        this.setState({\n            pageNumber:1,\n            limitNumber:20\n        },()=>{\n            if(this.state.searchType && (this.state.searchType === \"basic\" || this.state.searchType === \"basicMeta\"))\n            {\n                let outputObj = {\n                    type : type,\n                    keywordA : keywordA ? keywordA.replace('/','@'):null,\n                    keywordB : keywordB ? keywordB.replace('/','@'):null,\n                    index:index\n                }\n                this.getRecordByBasicAndMetaSearch(outputObj)\n                .then(res=>{\n                    this.setState({\n                        searchType:\"basicMeta\",\n                        showWarningDialog:false,\n                        listData:res,\n                        totalNumber:res[0].Movie_TotalCount,\n                        metaSelectedInfo:outputObj\n                    })   \n                })\n            }\n            else if(this.state.searchType && (this.state.searchType === \"advance\" || this.state.searchType === \"advanceMeta\"))\n            {\n                let outputObj = {\n                    type : type,\n                    keywordA : keywordA ? keywordA.replace('/','@'):null,\n                    keywordB : keywordB ? keywordB.replace('/','@'):null,\n                    index:index\n                }\n                this.getRecordByAdvanceAndMetaSearch(outputObj)\n                .then(res=>{\n                    this.setState({\n                        searchType:\"advanceMeta\",\n                        showWarningDialog:false,\n                        listData:res,\n                        totalNumber:res[0].Movie_TotalCount,\n                        metaSelectedInfo:outputObj\n                    })   \n                })\n            }\n\n        })\n  \n\n        \n    }\n    \n    getSelectedRow=(sysID)=>{\n        console.log(\"getSelectedRow\")\n        console.log(sysID)\n        this.props.history.push(\"/Movie/Workinfo/\"+sysID)\n    }\n\n\n    getPageLimitInfo=(number)=>{\n\n        if(this.state.metaSelectedInfo)\n        {\n            this.setState({\n                limitNumber:number,\n                pageNumber:1\n            },()=>{\n                if(this.state.searchType && (this.state.searchType === \"basic\" || this.state.searchType === \"basicMeta\"))\n                {\n                    //console.log('getPageNumberInfo A1')\n                    this.getRecordByBasicAndMetaSearch(this.state.metaSelectedInfo)\n                    .then(res=>{\n                        this.setState({\n                            listData:res\n                        })   \n                    })\n                }\n                else if(this.state.searchType && (this.state.searchType === \"advance\" || this.state.searchType === \"advanceMeta\"))\n                {\n                    //console.log('getPageNumberInfo A2')\n                    this.getRecordByAdvanceAndMetaSearch(this.state.metaSelectedInfo)\n                    .then(res=>{\n                        this.setState({                        \n                            listData:res                                   \n                        })   \n                    })\n                }\n                else\n                {\n                    console.log('getPageNumberInfo A3')\n                }\n            })\n        }\n        else\n        {\n            this.setState({\n                limitNumber:number,\n                pageNumber:1\n            },()=>{\n                if(this.state.searchWord)\n                {\n                    if(this.state.searchType === \"basic\")\n                    {\n                        this.getRecordByBasicSearch()\n                        .then(res=>{\n                            this.setState({\n                                listData:res\n                            })\n                        })\n                    }\n                    else\n                    {\n                        this.getRecordByAdvanceSearch()\n                        .then(res=>{\n                            this.setState({\n                                listData:res\n                            })\n                        })\n                    }\n                }\n                else\n                {\n                    this.getAllRecord()\n                    .then(res=>{\n                        this.setState({\n                            listData:res\n                        })\n                    })\n                }             \n            })\n            //let query = encodeURI(JSON.stringify(this.state.searchWord))\n            //this.props.history.push('/SearchResult/searchType/'+this.state.searchType+'/limit/'+this.state.limitNumber+'/page/'+number+'/query/'+query)\n        }\n    }\n\n    getPageNumberInfo=(number)=>{\n\n        if(this.state.metaSelectedInfo)\n        {\n            this.setState({\n                pageNumber:number\n            },()=>{\n                if(this.state.searchType && (this.state.searchType === \"basic\" || this.state.searchType === \"basicMeta\"))\n                {\n                    //console.log('getPageNumberInfo A1')\n                    this.getRecordByBasicAndMetaSearch(this.state.metaSelectedInfo)\n                    .then(res=>{\n                        this.setState({\n                            listData:res\n                        })   \n                    })\n                }\n                else if(this.state.searchType && (this.state.searchType === \"advance\" || this.state.searchType === \"advanceMeta\"))\n                {\n                    //console.log('getPageNumberInfo A2')\n                    this.getRecordByAdvanceAndMetaSearch(this.state.metaSelectedInfo)\n                    .then(res=>{\n                        this.setState({                        \n                            listData:res                                   \n                        })   \n                    })\n                }\n                else\n                {\n                    console.log('getPageNumberInfo A3')\n                }\n            })\n        }\n        else\n        {\n            this.setState({\n                pageNumber:number\n            },()=>{\n                if(this.state.searchWord)\n                {\n                    if(this.state.searchType === \"basic\")\n                    {\n                        this.getRecordByBasicSearch()\n                        .then(res=>{\n                            this.setState({\n                                listData:res\n                            })\n                        })\n                    }\n                    else\n                    {\n                        this.getRecordByAdvanceSearch()\n                        .then(res=>{\n                            this.setState({\n                                listData:res\n                            })\n                        })\n                    }\n                }\n                else\n                {\n                    this.getAllRecord()\n                    .then(res=>{\n                        this.setState({\n                            listData:res\n                        })\n                    })\n                }             \n            })\n            //let query = encodeURI(JSON.stringify(this.state.searchWord))\n            //this.props.history.push('/SearchResult/searchType/'+this.state.searchType+'/limit/'+this.state.limitNumber+'/page/'+number+'/query/'+query)\n        }\n    }\n\n    \n\n    \n    render(){\n\n        return(\n            <div className=\"ResultListMainBody\" >  \n                <PageSelectFunctionArea getPageLimitInfo={this.getPageLimitInfo} getPageNumberInfo={this.getPageNumberInfo} getListNumberEqualOneOrNot={this.state.listData && this.state.listData.length === 1 ? false:true} storedLimitNumber={this.state.limitNumber} storedPageNumber={this.state.pageNumber} storedTotalNumber={this.state.totalNumber}/>\n                <div className=\"ResultListLeftArea\">\n                    <div className=\"ResultListLeftAreaInner\">\n                        {this.createMetaInfo()}\n                    </div>\n                </div>\n                <div className=\"ResultListRightArea\">\n                    {this.getSearchWords()}                     \n                    {this.createRow()} \n                    <div style={{\"width\":\"100%\", \"position\":\"absolute\", \"left\":\"0px\"}}>\n                        <Footer/>\n                    </div>\n                </div>             \n            </div>\n        )\n    }\n}\n\nexport default ResultListMainBody","import React, { Component } from 'react';\n//import { ReactComponent as DefaultImageBackground } from '../../../../../Utilities/defaultImage.svg'\n\nconst wStyles = theme => ({\n    ImageIconAdjusted:{\n        width:\"100%\",\n        height:\"100%\"\n    }\n})\n\nclass ImageDiv extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n        }\n    }\n\n    loadImageAdjust=()=>{\n        if(this.props.imageAttributes.imageAdjust)\n        {\n            return ` contrast(${this.props.imageAttributes.imageAdjust.contrast}%) hue-rotate(${this.props.imageAttributes.imageAdjust.hue}deg) brightness(${this.props.imageAttributes.imageAdjust.brightness}%) saturate(${this.props.imageAttributes.imageAdjust.saturate}%) sepia(${this.props.imageAttributes.imageAdjust.sepia}%) invert(${this.props.imageAttributes.imageAdjust.invert}%) blur(${this.props.imageAttributes.imageAdjust.blur}px) opacity(${this.props.imageAttributes.imageAdjust.opacity}%)`\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    getImagePos=(type)=>{\n        if(this.props.imageAttributes.imageContainerPos)\n        {\n            if(!this.props.previewMode)\n            {\n                if(type===\"left\")\n                {\n                    return 0-this.props.imageAttributes.imageContainerPos.x\n                }\n                else if(type===\"top\")\n                {\n                    return 0-this.props.imageAttributes.imageContainerPos.y\n                }\n            }\n            else\n            {\n                if(type===\"left\")\n                {\n                    return 0-this.props.imageAttributes.imageContainerPos.x\n                }\n                else if(type===\"top\")\n                {\n                    return 0-this.props.imageAttributes.imageContainerPos.y\n                }\n            }\n        }\n        else\n        {\n            return 0\n        }\n    }\n\n    getImageSize=(type)=>{\n        if(this.props.imageAttributes.dynamicImageSize)\n        {\n            if(type===\"width\")\n            {\n                return this.props.imageAttributes.dynamicImageSize.width\n            }\n            else if(type===\"height\")\n            {\n                return this.props.imageAttributes.dynamicImageSize.height\n            }\n        }\n        else\n        {\n            return \"100%\"\n        }\n    }\n\n    detectUrlProps=()=>{\n      \n        let svgStyle = {\n            width:this.props.imageSize.width,\n            height:this.props.imageSize.height,\n            position:\"absolute\",\n        }\n\n        if(this.props.imageAttributes.imageUrl)\n        {\n            //console.log(\"detectUrlProps imageUrl true\")\n    \n            let imageStyle ={\n                position:\"relative\",\n                top:this.getImagePos(\"top\"),\n                left:this.getImagePos(\"left\"),\n                width:this.getImageSize(\"width\"),\n                height:this.getImageSize(\"height\"),\n                filter: this.loadImageAdjust(),\n            }\n\n            return(\n                <img style={imageStyle} src={this.props.imageAttributes.imageUrl} alt={\"loadimage\"}/>\n            )\n        }\n        else\n        {\n            //console.log(\"detectUrlProps imageUrl false\")\n            //return(<DefaultImageBackground style={svgStyle}/>)\n        }\n    }\n\n    getWidth=()=>{\n        if(this.props.imageAttributes.imageUrl)\n        {\n            return this.props.imageSize.width+6\n        }\n        else\n        {\n            return this.props.imageSize.width\n        }\n    }\n\n    getHeight=()=>{\n        if(this.props.imageAttributes.imageUrl)\n        {\n            return this.props.imageSize.height+6\n        }\n        else\n        {\n            return this.props.imageSize.height\n        }\n    }\n\n\n    render(){\n        // let focusingCompositionContainerStyle ={\n        //     width:this.getWidth(),\n        //     height:this.getHeight(),\n        //     border:'3px dashed',\n        //     borderColor:'#fff838',\n        //     overflow:\"hidden\",    \n        // }\n\n        let notFocusingCompositionContainerStyle ={\n            width:this.getWidth()-6,\n            height:this.getHeight()-6,\n            overflow:\"hidden\",\n            position:\"relative\",\n        }\n       \n        return(\n            <div style={notFocusingCompositionContainerStyle}>\n                {this.detectUrlProps()}      \n            </div>\n        )\n    }\n}\n\nexport default ImageDiv\n","import React, { Component } from 'react';\nimport './TextDiv.css'\n\nclass TextDiv extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n           \n        }\n        this.textRef= React.createRef()\n    }\n\n    componentDidMount(){\n        window.addEventListener(\"resize\", this.getResizeHeight)\n        this.getResizeHeight()\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener(\"resize\", this.getResizeHeight)\n    }\n\n    \n    getResizeHeight=()=>{\n        //console.log(\"TextDiv Resizing...\")\n        let tempHeight = this.textRef.current.scrollHeight\n        //console.log(\"resizeHeight : \", tempHeight)\n        //console.log(this.textRef)\n        this.props.getResizeHeight(tempHeight)\n    }\n\n    detectUrlProps=()=>{\n        // let svgStyle = {\n        //     width:\"100%\",\n        //     height:\"100%\",\n        //     position:\"absolute\"    \n        // }\n        if(this.props.textAttributes.background)\n        {\n            return null\n        }\n        //else\n        //{\n        //    return(<DefaultTextBackground style={svgStyle}/>)\n        //}\n    }\n\n    getWidth=()=>{\n        return this.props.textSize.width\n    }\n\n    getHeight=()=>{\n        return this.props.textSize.height\n    }\n\n    getFontColor=()=>{\n        if(this.props.textAttributes.font)\n        {\n            return this.props.textAttributes.font.color\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    getFontSize=()=>{\n        if(this.props.textAttributes.font)\n        {\n            return this.props.textAttributes.font.size\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    getFontSize=()=>{\n        if(this.props.textAttributes.font)\n        {\n            return this.props.textAttributes.font.size\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    getFontFamily=()=>{\n        if(this.props.textAttributes.font)\n        {\n            if(this.props.textAttributes.font.eFamily !==\"none\" && this.props.textAttributes.font.cFamily !==\"none\")\n            {\n                return \"'\"+this.props.textAttributes.font.eFamily+\"','\"+this.props.textAttributes.font.cFamily+\"'\"\n            }\n            else if(this.props.textAttributes.font.eFamily !==\"none\" && this.props.textAttributes.font.cFamily ===\"none\")\n            {\n                return this.props.textAttributes.font.eFamily\n            }\n            else if(this.props.textAttributes.font.eFamily ===\"none\" && this.props.textAttributes.font.cFamily !==\"none\")\n            {\n                return this.props.textAttributes.font.cFamily\n            }\n            else\n            {\n                return null\n            }\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    overflowCheck=()=>{\n        if(this.props.previewMode)\n        {\n            return null\n        }\n        else\n        {\n            return \"hidden\"\n        }\n    }\n\n    buildContent=()=>{\n        //console.log(\"buildContent...\")\n        \n        if(this.props.textAttributes.story)\n        {\n            let result = this.props.textAttributes.story.replace(/!es#/g, '\"')     \n            return <div dangerouslySetInnerHTML={{__html:result}} />\n        }\n        else\n        {\n            return null\n        }     \n    }\n\n    onDoubleClick=()=>{\n\n    }\n\n\n    render(){\n        //console.log(\"TextDiv get textAttributes story\")\n        //console.log(this.props.textAttributes.story)\n        // let focusingCompositionContainerStyle ={\n        //     width:this.getWidth(),\n        //     height:this.getHeight(),\n        //     border:'3px dashed',\n        //     borderColor:'#fff838',\n        // }\n\n        let notFocusingCompositionContainerStyle ={\n            width:this.getWidth(),\n            height:this.getHeight(),\n            position:\"relative\",\n            color:this.getFontColor(),\n            overflow:this.overflowCheck(),\n            fontSize:this.getFontSize()+'px',\n            fontFamily:this.getFontFamily(),\n            textAlign:\"left\"\n        }\n        \n        return(\n            <div style={notFocusingCompositionContainerStyle} ref={this.textRef}>\n                {this.detectUrlProps()}      \n                {this.buildContent()}\n            </div>\n        )\n    }\n}\n\nexport default TextDiv\n","import React, { Component } from 'react';\nimport ImageDiv from './ImageDiv'\nimport TextDiv from './TextDiv'\n\nclass CompositionContainer extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            position:{\n                x:0,\n                y:0,\n            },\n            refPos:{\n                x:0,\n                y:0\n            },\n            divSize:{\n                width:0,\n                height:0,\n            },\n            refDivSize:{\n                width:0,\n                height:0\n            },\n            \n            containerFocusing:false,\n            containerExtending:false,\n            containerDragging:false,\n            resizeHeight:null\n        }\n   \n    }\n    componentDidMount(){\n        if(this.props.divPos.x)\n        {\n            this.setState({\n                position:{\n                    //x:this.props.initialPos.x,\n                    //y:this.props.initialPos.y\n                    x:this.props.divPos.x,\n                    y:this.props.divPos.y\n                },\n                divSize:this.props.size\n            })\n\n        }\n        else\n        {\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        //console.log('ControllerUnitContainer componentDidUpdate conID ', this.props.conID)\n        \n        if(this.state.containerExtending === false && this.state.containerDragging === true)\n        {\n            if(prevProps.mousePos !== this.props.mousePos)\n            {\n                this.setNewContainerPosition()\n            } \n        }\n        else if(this.state.containerExtending === true && this.state.containerDragging === false)\n        {\n            if(prevProps.mousePos !== this.props.mousePos)\n            {\n                this.setNewContainerSize()\n            } \n        }\n        else\n        {\n            if(prevProps.size !== this.props.size && prevProps.divPos !== this.props.divPos)\n            {\n                this.setState({\n                    position:this.props.divPos,\n                    divSize:this.props.size,\n                    containerFocusing:true\n                })\n            }\n            else if(prevProps.size !== this.props.size && prevProps.divPos === this.props.divPos)\n            {\n                this.setState({\n                    divSize:this.props.size,\n                    containerFocusing:true\n                })\n\n            }\n            else if(prevProps.size === this.props.size && prevProps.divPos !== this.props.divPos)\n            {\n                this.setState({\n                    position:this.props.divPos,\n                    containerFocusing:true\n                })\n            }\n            else\n            {\n                if(this.props.focusingContainer === this.props.conID)\n                {\n                    if(!this.state.containerFocusing)\n                    {\n                        this.setState({\n                            containerFocusing:true\n                        })\n                    }   \n                }\n                else\n                {\n                    if(this.state.containerFocusing)\n                    {\n                        this.setState({\n                            containerFocusing:false\n                        })\n                    }   \n                }\n            }\n        }\n    }\n\n    detectTextOrImageDiv=()=>{\n        let tempSize = {}\n        if(this.props.previewMode)\n        {\n            tempSize=this.props.size\n        }\n        else\n        {\n            tempSize = this.state.divSize\n        }\n\n\n        if(this.props.type===\"image\")\n        {           \n            return(\n                <ImageDiv imageSize={tempSize} commonAttributes={this.props.commonAttributes} imageAttributes={this.props.imageAttributes} previewMode={this.props.previewMode}/>\n            )\n            \n        }\n        else if(this.props.type===\"text\")\n        {\n            return(\n                <TextDiv textSize={tempSize} commonAttributes={this.props.commonAttributes} textAttributes={this.props.textAttributes} previewMode={this.props.previewMode} getResizeHeight={this.getResizeHeight}/>\n            )\n        }\n    }\n\n    getResizeHeight=(msg)=>{\n        if(this.state.resizeHeight !== msg)\n        {\n            this.setState({\n                resizeHeight:msg\n            })\n            //this.props.getResizeHeight(msg)\n            if(this.props.grouped)\n            {\n                this.props.getMaxHeight(this.state.position.y+msg)\n            }\n        }\n    }\n\n    setNewContainerPosition() {\n        let containerX = this.props.mousePos.x-this.state.refPos.x\n        let containerY = this.props.mousePos.y-this.state.refPos.y\n        let newPos = {\n            x:containerX,\n            y:containerY\n        }\n        this.setState({\n            position:newPos,\n            containerFocusing:true\n        })\n    }\n\n    setNewContainerSize=()=>{\n\n        let width = this.state.refDivSize.width+(this.props.mousePos.x-this.state.refPos.x)\n        let height = this.state.refDivSize.height+(this.props.mousePos.y-this.state.refPos.y)\n       \n        let newSize = {\n            width:width,\n            height:height\n        }\n   \n        this.setState({\n            divSize:newSize,\n            containerFocusing:true\n        })\n       \n    }\n\n    extendAreaMouseDown=(e)=>{\n        // console.log('extendAreaMouseDown')\n        e.stopPropagation()\n        this.setState({\n            containerExtending:true,\n            containerFocusing:true,\n            refPos:{\n                //x:e.clientX-this.props.offset.x,\n                //y:e.clientY-this.props.offset.y\n                x:e.clientX,\n                y:e.clientY\n            },\n            refDivSize:this.state.divSize\n        })   \n\n        let msg ={\n            conID:this.props.conID,\n            //unitID:this.props.showingUnitID,\n            //zIndex:this.props.zIndex,\n            containerExtending:true,\n            //subView:this.getSubView()\n        }\n        this.props.containerExtending(msg)\n    }\n\n    extendAreaMouseUp=(e)=>{\n        e.stopPropagation()\n        // console.log('extendAreaMouseUp')\n        this.setState({\n            containerExtending:false,\n            refPos:{\n                x:0,\n                y:0\n            },\n        })  \n\n        let msg ={\n            conID:this.props.conID,\n            containerExtending:false,\n            size:this.state.divSize,\n        }\n        \n        this.props.containerExtending(msg)\n\n    }\n\n    headerMouseDown=(e)=>{   \n        e.stopPropagation()\n        e.preventDefault()\n        //console.log('ControllerUnitContainer headerMouseDown')\n        this.setState({\n            containerDragging:true,\n            containerFocusing:true,\n            refPos:{\n                //x:e.clientX-this.props.offset.x-this.state.position.x,\n                //y:e.clientY-this.props.offset.y-this.state.position.y\n                x:e.clientX-this.state.position.x,\n                y:e.clientY-this.state.position.y\n            }\n        })   \n\n        let msg ={\n            conID:this.props.conID,\n            //unitID:this.props.showingUnitID,\n            //zIndex:this.props.zIndex,\n            containerDragging:true,\n        }\n        this.props.containerDragging(msg)\n        \n    }\n\n    headerMouseUp=(e)=>{\n        e.stopPropagation()\n        e.preventDefault()\n        this.setState({\n            containerDragging:false,\n            refPos:{\n                x:0,\n                y:0\n            },\n        })  \n\n        let msg ={\n            conID:this.props.conID,\n            containerDragging:false,\n            position:this.state.position,\n        }\n        this.props.containerDragging(msg)\n    }\n\n    headerOnDoubleClick=()=>{\n        //console.log(\"CompositionContainer headerOnDoubleClick\")  \n    }\n\n    checkImageAttribute=()=>{\n        if(this.props.imageAttributes.imageUrl)\n        {\n            //console.log(\"checkImageAttribute\")\n        }\n        else\n        {\n            if(this.props.textAttributes.background)\n            {\n                return this.props.textAttributes.background.color\n            }\n            else\n            {\n                return this.props.color\n            }\n        }\n    }\n\n    onContextMenu=(e)=>{\n        e.preventDefault()\n        e.stopPropagation()\n        let refPos={\n            x:e.clientX,\n            y:e.clientY\n        }\n        let msg = {\n            conID:this.props.conID,\n            pos:refPos\n        }\n        this.props.getContextMenu(msg)\n    }\n\n    onDoubleClick=()=>{\n        if(this.props.type===\"image\")\n        {\n            this.props.invokeImageEditor()\n        }\n        else if(this.props.type===\"text\")\n        {\n            this.props.invokeTextEditor()\n        }\n    }\n\n    loadOpacity=()=>{\n        if(this.props.textAttributes)\n        {\n            if(this.props.textAttributes.background)\n            {\n                return this.props.textAttributes.background.opacity / 100\n            }\n            else\n            {\n                return null\n            }\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    checkBackgroundStyleHeight=()=>{\n        if(this.props.previewMode)\n        {\n            if(this.state.resizeHeight)\n            {\n                return this.state.resizeHeight\n            }\n            else\n            {\n                return this.state.divSize.height\n            }\n        }\n        else\n        {\n            return this.state.divSize.height\n        }\n    }\n\n    getPositionTop=()=>{\n        if(this.props.previewMode)\n        {\n            if(this.props.previewSize === \"large\")\n            {\n                return this.state.position.y\n            }\n            else if(!this.props.previewSize)\n            {\n                return this.state.position.y\n            }\n            else if(this.props.grouped)\n            {\n                return this.state.position.y\n            }\n            else\n            {\n                return 0\n            }\n        }\n        else\n        {\n            return this.state.position.y\n        }\n    }\n\n    getPositionMode=()=>{\n        if(this.props.previewMode)\n        {\n            if(this.props.previewSize === 'large')\n            {\n                return 'absolute'\n            }\n            else if(!this.props.previewSize)\n            {\n                return 'absolute'\n            }\n            else if(this.props.grouped)\n            {\n                return 'absolute'\n            }\n            else\n            {\n                return 'relative'\n            }\n        }\n        else\n        {\n            return 'absolute'\n        }\n    }\n\n    getHeight=()=>{\n        if(this.props.previewMode)\n        {\n            if(this.props.previewSize === 'large')\n            {\n                return this.state.divSize.height\n            }\n            else if(!this.props.previewSize)\n            {\n                return this.state.divSize.height\n            }\n            else\n            {\n                if(this.state.resizeHeight)\n                {\n                    return this.state.resizeHeight\n                }\n                else\n                {\n                    return this.state.divSize.height\n                }\n            }\n        }\n        else\n        {\n            return this.state.divSize.height\n        }\n    }\n\n    render(){\n        let focusingCompositionContainerStyle ={\n            width:this.state.divSize.width,\n            height:this.state.divSize.height,\n            position:'absolute',\n            left:this.state.position.x,\n            top:this.state.position.y,\n            zIndex:this.props.zIndex,\n            //backgroundColor:this.checkImageAttribute(),\n            outline:'3px dashed #fff838',\n            //borderColor:'#fff838',\n            boxSizing:'border-box',\n            display: 'flex',\n            flexDirection: 'column',\n            cursor:this.props.previewMode?null:'move',\n        }\n\n        let notFocusingCompositionContainerStyle ={\n            width:this.state.divSize.width,\n            height:this.getHeight(),\n            position:this.getPositionMode(),\n            left:this.state.position.x,\n            top: this.getPositionTop(),\n            zIndex:this.props.zIndex,\n            boxSizing:'border-box',\n            display: 'flex',\n            flexDirection: 'column',\n            cursor:this.props.previewMode?null:'move',\n        }\n\n        let extendFunctionAreaStyle = {\n            width:'20px',\n            height:'20px',\n            position:'absolute',\n            right:'0px',\n            bottom:'0px',\n            userSelect:'none',\n            color:\"#fff838\",\n            cursor:'nw-resize',\n            zIndex:1300\n        }\n\n        let backgroundStyle= {\n            width:this.state.divSize.width,\n            height:this.checkBackgroundStyleHeight(),\n            backgroundColor:this.checkImageAttribute(),\n            position:\"absolute\",\n            top:0,\n            left:0,\n            opacity:this.loadOpacity(),\n        }\n\n\n\n        return(\n            this.props.previewMode ?\n            <div style={notFocusingCompositionContainerStyle}> \n                <div>\n                    <div style={backgroundStyle}></div>\n                    {this.detectTextOrImageDiv()} \n                </div>  \n            </div>\n            :\n            <div style={this.state.containerFocusing? focusingCompositionContainerStyle: notFocusingCompositionContainerStyle}> \n                <div onMouseDown={this.headerMouseDown} onMouseUp={this.headerMouseUp} onContextMenu={this.onContextMenu} onDoubleClick={this.onDoubleClick}>\n                    <div style={backgroundStyle}></div>\n                    {this.detectTextOrImageDiv()} \n                </div>  \n                <div style={extendFunctionAreaStyle} onMouseDown={this.extendAreaMouseDown}  onMouseUp={this.extendAreaMouseUp}>\n                    &#9499;\n                </div> \n            </div>\n        )\n    }\n}\n\nexport default CompositionContainer\n","import React, { Component } from 'react';\nimport CompositionContainer from './CompositionContainer'\n\n\nclass ContainerGroup extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            maxHeight:null\n        }\n    }\n    componentDidMount(){\n        this.initialMaxHeight()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n  \n    }\n\n    initialMaxHeight=()=>{\n        if(this.props.containerArray.length>1)\n        {\n            //console.log(\"A1\")\n            let minY = Math.min.apply(Math, this.props.containerArray.map(container=>{return container.y}))\n            let maxY = Math.max.apply(Math, this.props.containerArray.map(container=>{return container.y+container.height}))\n\n            //console.log(\"minY : \", minY)\n            //console.log(\"maxY : \", maxY)\n            \n            this.setState({\n                maxHeight:maxY-minY\n            })\n        }\n        //else\n        //{\n            //console.log(\"A2\")\n        //}\n    }\n\n    getMaxHeight=(msg)=>{\n        if(msg !== this.state.maxHeight)\n        {\n            this.setState({\n                maxHeight:msg\n            })\n        }\n    }\n\n    createContainer=()=>{\n        if(this.props.containerArray.length>1)\n        {\n            return this.props.containerArray.map(container=>{\n                let pos2 = {\n                    x:(container.x/this.props.bodySize.width)*100+\"%\",\n                    y:container.y\n                }\n\n                let size = {\n                    width:(container.width/this.props.bodySize.width)*100+\"vw\",\n                    height:container.height\n                }\n                \n                return(\n                    <CompositionContainer key={container.conID} conID={container.conID} type={container.type} previewMode={true} previewSize={this.props.previewSize} grouped={true} getMaxHeight={this.getMaxHeight} bodySize={this.props.bodySize} commonAttributes={container.commonAttributes} imageAttributes={container.imageAttributes} textAttributes={container.textAttributes} color={\"grey\"} divPos={pos2}  size={size} />\n                )\n            })\n        }\n        else\n        {\n            return(\n                <CompositionContainer key={this.props.containerArray[0].conID} conID={this.props.containerArray[0].conID} type={this.props.containerArray[0].type} previewMode={true} previewSize={this.props.previewSize} grouped={false} getMaxHeight={this.getMaxHeight} bodySize={this.props.bodySize} commonAttributes={this.props.containerArray[0].commonAttributes} imageAttributes={this.props.containerArray[0].imageAttributes} textAttributes={this.props.containerArray[0].textAttributes} color={\"grey\"} divPos={{x:(this.props.containerArray[0].x/this.props.bodySize.width)*100+\"%\",y:this.props.containerArray[0].y}}  size={{width:(this.props.containerArray[0].width/this.props.bodySize.width)*100+\"vw\",\n                height:this.props.containerArray[0].height}} />\n            )\n        }                 \n    }\n\n    getHeight=()=>{\n        //console.log(\"ContainerGroup getHeight\")\n        if(this.props.containerArray.length>1)\n        {\n            //console.log(\"maxHeight : \", this.state.maxHeight)\n            if(this.state.maxHeight)\n            {\n                return this.state.maxHeight\n            }\n            else\n            {\n                return null\n            }\n        }\n        else\n        {\n            return null\n        }\n    }\n\n\n    render(){\n        let containerGroupStyle= {\n            width:\"100%\",\n            height:this.getHeight(),\n            position:\"relative\",\n            marginTop:this.props.indexKey === 0 ? \"-600px\":\"40px\"\n        }\n\n        return(\n            <div style={containerGroupStyle}> \n                {this.createContainer()}\n            </div>\n        )\n    }\n}\n\nexport default ContainerGroup\n","import React, {Component} from 'react';\nimport CompositionContainer from './CompositionContainer'\nimport ContainerGroup from './ContainerGroup'\n\nimport IPAddress from '../IPAddress'\nimport Footer from '../Footer/Footer'\n\n\nclass EventPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            windowSize:\"large\",\n            compositionContainers:null,\n            bodyHeight:null,\n            bodySize:null\n        }\n        this.openTempFile = React.createRef()\n        this.scrollContainerLayout = React.createRef()   \n    }\n\n    componentDidMount(){\n        this.initialState()\n        window.addEventListener(\"resize\", this.getResizeWidth)\n    }\n\n    componentDidUpdate(preProps){\n        if(this.props.match.params.StaticPage_SysID !== preProps.match.params.StaticPage_SysID)\n        {\n            this.initialState()\n            window.addEventListener(\"resize\", this.getResizeWidth)\n        }\n    }\n\n    componentWillUnmount(){\n\n    }\n\n    initialState=async()=>{\n        console.log('initialState')\n        let staticPageSysID = this.props.match.params.StaticPage_SysID \n        let eventSysID = this.props.match.params.Event_SysID\n        let tempIP = new IPAddress()\n        if(eventSysID && !staticPageSysID)\n        {\n            let msg = await fetch(tempIP.state.ip+'/api/event/fetch/EventComposition/'+eventSysID)\n            let output = await msg.json()\n            let size= {\n                width:window.innerWidth,\n                height:window.innerHeight\n            }\n    \n            this.setState({\n                compositionContainers:output[0].Event_CompositionSettings,\n                bodyHeight:800,\n                bodySize:size\n            })\n        }\n        else if(!eventSysID && staticPageSysID)\n        {\n            let msg = await fetch(tempIP.state.ip+'/api/staticPage/get/PublicPage/'+staticPageSysID)\n            let output = await msg.json()\n            console.log(output)\n            let size= {\n                width:window.innerWidth,\n                height:window.innerHeight\n            }\n    \n            this.setState({\n                compositionContainers:output[0].Public_StaticPage_CompositionSettings,\n                bodyHeight:800,\n                bodySize:size\n            })\n        }\n    }\n\n\n    getResizeWidth=()=>{\n        //console.log(this.scrollContainerLayout)\n        let tempWidth = 1900\n        if(this.scrollContainerLayout.current)\n        {\n            tempWidth = this.scrollContainerLayout.current.scrollWidth\n        }\n    \n        //console.log(tempWidth)\n        if(tempWidth >= 1900)\n        {\n            if(this.state.windowSize !== \"large\")\n            {\n                this.setState({\n                    windowSize :\"large\"\n                })\n            }\n        }\n        else if(tempWidth<1900 && tempWidth >= 1300)\n        {\n            if(this.state.windowSize !== \"medium\")\n            {\n                this.setState({\n                    windowSize :\"medium\"\n                })\n            }\n        }\n        else if(tempWidth<1300)\n        {\n            if(this.state.windowSize !== \"small\")\n            {\n                this.setState({\n                    windowSize :\"small\"\n                })\n            }\n        }\n    }\n\n    createContainer=()=>{\n        if(this.state.windowSize === \"large\")\n        {\n            return this.renderInLargeContainer()\n        }\n        else if(this.state.windowSize === \"medium\")\n        {\n            return this.renderInMediumContainer()\n        }\n        else if(this.state.windowSize === \"small\")\n        {\n            return this.renderInMediumContainer()\n        }\n\n        //console.log(\"ContentPreview createContainer...\")\n    }\n\n    renderInLargeContainer=()=>{\n        if(this.state.compositionContainers)\n        {\n            return(\n                this.state.compositionContainers.map(container=>{\n\n                    let pos2 = {\n                        x:(container.x/this.state.bodySize.width)*100+\"%\",\n                        y:container.y\n                    }\n            \n                    let size = {\n                        width:(container.width/this.state.bodySize.width)*100+\"vw\",\n                        height:container.height\n                    }\n\n                    return(\n                        <CompositionContainer key={container.conID} conID={container.conID} type={container.type} previewMode={true} bodySize={this.state.bodySize} commonAttributes={container.commonAttributes} imageAttributes={container.imageAttributes} textAttributes={container.textAttributes} color={\"grey\"} divPos={pos2}  size={size} />\n                    )\n                })\n            )\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    renderInMediumContainer=()=>{\n        if(this.state.compositionContainers)\n        {\n            /// sorting array\n            let tempArray = this.state.compositionContainers.map(composition=>{\n                return composition\n            }).sort((a,b)=>{\n                return a.y-b.y\n            })\n\n            console.log(\"sorting array :\")\n            console.log(tempArray)\n\n            let groupArray = []\n            let groupObj = []\n            let prevMinHeight=0\n            let prevMaxHeight=0 \n            //let groupToken = false\n\n            for(var i =0; i<tempArray.length; i++)\n            {\n                //console.log(\"loop i : \", i)\n                if(i === 0)\n                {      \n                    groupObj.push(tempArray[i]) \n                }\n                else if(i === tempArray.length-1)\n                {\n                    prevMaxHeight = tempArray[i-1].y+tempArray[i-1].height\n                    if(tempArray[i].y < prevMaxHeight)\n                    {\n                        //console.log(\"height been involved : \", i-1, i)\n                        groupObj.push(tempArray[i])\n                        let tempGroupObj = groupObj.map(obj=>{\n                            return obj\n                        })\n                        groupArray.push(tempGroupObj )\n                    }\n                    else\n                    {\n                        let tempGroupObj = groupObj.map(obj=>{\n                            return obj\n                        })\n                        groupArray.push(tempGroupObj)\n                        let finalGroupObj = []\n                        finalGroupObj.push(tempArray[i])\n                        groupArray.push(finalGroupObj)\n                    }\n                }\n                else\n                {\n                    ///prevMinHeight = tempArray[i-1].y\n                    prevMaxHeight = tempArray[i-1].y+tempArray[i-1].height\n                    if(tempArray[i].y < prevMaxHeight)\n                    {\n                        //console.log(\"height been involved : \", i-1, i)\n                        groupObj.push(tempArray[i])\n                    }\n                    else\n                    {\n                        let tempGroupObj = groupObj.map(obj=>{\n                            return obj\n                        })\n                        groupArray.push(tempGroupObj)\n                        groupObj = []\n                        groupObj.push(tempArray[i])\n                    }\n                }\n            }\n\n            console.log(\"groupArray :\")\n            console.log(groupArray)\n\n            let finalGroupArray =[]\n\n            groupArray.forEach(array=>{\n                if(array.length>1)\n                {\n                    let minY = Math.min.apply(Math, array.map(container=>{return container.y}))\n                    let maxY = Math.max.apply(Math, array.map(container=>{return container.y+container.height}))\n                    let maxHeight = maxY-minY\n                    let newArray = array.map(container=>{\n                        let tempContainer = {\n                            conID:container.conID,\n                            width:container.width,\n                            height:container.height,\n                            x:container.x,\n                            y:container.y-minY,\n                            imageAttributes:container.imageAttributes,\n                            textAttributes:container.textAttributes,\n                            title:container.title,\n                            type:container.type,\n                            zIndex:container.zIndex\n                        }\n                        return tempContainer\n                    })\n                    finalGroupArray.push(newArray)\n                }\n                else\n                {\n                    finalGroupArray.push(array)\n                }\n            })\n\n            console.log(\"finalGroupArray :\")\n            console.log(finalGroupArray)\n\n\n            return(\n                finalGroupArray.map((array,index)=>{\n                    console.log(\"A1\")\n                    return (\n                        <ContainerGroup key={index} indexKey={index} containerArray={array} bodySize={this.state.bodySize} previewSize={this.state.windowSize}/>\n                    )\n                })\n            )\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    getLastContainerPos=()=>{\n        let maxTop = 0\n        if(this.state.compositionContainers)\n        {\n            this.state.compositionContainers.forEach(container=>{\n                if(container.y+container.height>maxTop)\n                {\n                    maxTop = container.y+container.height\n                }\n            })\n        }\n\n        return maxTop+100\n    }\n    \n    render(){\n        let scrollContainer={\n            //position:\"fixed\",\n            top:0,\n            left:0,\n            width:\"100vw\",\n            //height:\"100vh\",\n            height:this.getLastContainerPos()+\"px\",\n            backgroundColor:\"rgb(255 255 255)\",\n            //overflow:\"scroll\",\n            zIndex:1400\n        }\n\n        let middleLayout = {\n            position:this.state.windowSize === \"small\"? \"sticky\":\"relative\",\n            top:0,\n            marginLeft:\"auto\",\n            marginRight:\"auto\",\n            borderRadius:\"10px\",\n            width:\"90vw\",\n            height:this.state.windowSize === \"small\"? \"100vh\" : this.props.bodyHeight,\n            //height:\"1300px\",\n            backgroundColor:\"#ffffff\",\n            opacity:\"0.3\"\n        }\n\n        let backgroundImageStyle = {\n            //backgroundImage: `url(${BGImage})`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundAttachment: \"fixed\",\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\",\n            position:\"fixed\",\n            top:0,\n            left:0,\n            width:\"100vw\",\n            height:\"100vh\",\n            filter:\"blur(5px)\",\n            opacity:\"20%\"\n        }\n\n        return (\n\n            <div style={scrollContainer}  ref={this.scrollContainerLayout} >\n               \n                <div style={middleLayout}/> \n                {this.createContainer()}\n                {\n                     this.state.bodySize?\n                    <div style={{\"width\":\"100%\", \"position\":\"absolute\", \"left\":\"0px\",\"top\":this.getLastContainerPos()+200+\"px\"}}>\n                        <Footer/>\n                    </div>\n                    :null\n                }\n            </div>\n           \n        )  \n    }\n}\n\nexport default EventPage\n","import React,{useState,useEffect, useRef} from 'react'\nimport './FlashCountBadge.css'\n\n\nconst usePreviousValue=(value)=>{\n    const ref = useRef()\n    useEffect(()=>{\n        ref.current = value\n    })\n    return ref.current\n}\n\nexport default function FlashCountBadge(props) {\n    //console.log(\"FlashCountBadge\")\n    const [currentCount,setCount] = useState(0)\n    const [backColor, setBackColor] = useState(null)\n    //const [countNumber, setCountNumber] = useState(props.countNumber)\n    const timer=()=>{\n        setCount(currentCount + 1)\n    }\n\n    const bgStyle = {\n        backgroundColor:backColor\n    }\n\n    const preValue = usePreviousValue(props.countNumber)\n\n    useEffect(\n        ()=>{\n\n            if(preValue !== props.countNumber)\n            {\n                setCount(0)\n            }\n\n            if(props.badgeType === \"red-blue\")\n            {\n                if(props.countNumber === 0)\n                {\n                    if(currentCount > 3)\n                    {\n                        return\n                    }\n                    else\n                    {\n                        if(currentCount === 0 || currentCount === 2)\n                        {\n                            setBackColor(\"red\")\n                        }\n                        else if(currentCount === 1 || currentCount === 3)\n                        {\n                            setBackColor(\"blue\")\n                        }\n                    }\n                }\n                else\n                {\n                    if(currentCount > 3)\n                    {\n                        return\n                    }\n                    else\n                    {\n                        if(currentCount === 0 || currentCount === 2)\n                        {\n                            setBackColor(\"blue\")\n                        }\n                        else if(currentCount === 1 || currentCount === 3)\n                        {\n                            setBackColor(\"red\")\n                        }\n                    }\n                }\n            }\n            else if(props.badgeType === \"blue\")\n            {\n                if(currentCount > 3)\n                {\n                    return\n                }\n                else\n                {\n                    if(currentCount === 0 || currentCount === 2)\n                    {\n                        setBackColor(\"green\")\n                    }\n                    else if(currentCount === 1 || currentCount === 3)\n                    {\n                        setBackColor(\"blue\")\n                    }\n                }\n            }\n\n            \n            \n            const timerFunction = setInterval(timer,1000)\n            return ()=>clearInterval(timerFunction)\n        }\n    )\n    \n    return (\n        <div className={\"FlashCountBadge\"} style={bgStyle}>\n            {props.countNumber}\n        </div>\n    )\n}\n","import React, {Component} from 'react'\nimport TextsmsIcon from '@material-ui/icons/Textsms';\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\nimport './ChatRoom.css'\nimport FlashCountBadge from '../Function/FlashCountBadge'\n\n\nclass ChatRoom extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n           \n\n        }\n    }\n\n    componentDidMount(){\n\n    }\n\n    componentDidUpdate(prevProps){\n        //if(prevProps.unreadMessage !== this.props.unreadMessage && this.props.unreadMessage.length === 0 )\n        //{\n        //    this.setState({\n        //        shrink:true,\n        //        expandContain:null\n        //    })\n        //}        \n    }\n\n    rowContainer=()=>{       \n        return this.createShrinkContainer()   \n    }\n\n    \n    createShrinkContainer=()=>{\n        return  <div>\n                    <div className={\"userCountRow\"} onClick={this.invokeChatChannel}><div className={\"userCountTitle\"}><LiveHelpIcon fontSize={\"large\"}/></div><div className={\"messageNumberBadge\"}><FlashCountBadge countNumber={this.props.queryStage === \"1A\"?2:this.props.unreadMessage.length} badgeType={\"red-blue\"}/></div></div>\n                </div>\n    }\n\n    shrinkContainer=()=>{\n        this.setState({\n            shrink:true,\n            expandContain:null\n        })\n    }\n\n\n    invokeChatChannel=()=>{\n        this.props.getChatChannel()\n    }\n\n    render(){\n        return(\n            <div className={\"chatRoom\"} style={this.state.shrink? null:null}>           \n                {this.rowContainer()}              \n            </div>    \n        )\n    }\n}\n\nexport default ChatRoom\n","import React, {Component} from 'react'\nimport './ChatChannel.css'\nimport CameraIcon from '@material-ui/icons/LocalSee'\nimport {serverIP} from '../IPAdressModule'\n\n\n\nclass ChatChannel extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            message:\"請輸入訊息\",\n        }\n        //this.dummyChatRowRef = React.createRef()\n    }\n\n    componentDidMount(){\n        this.scrollToBottom()\n        this.markMessageRead()\n    }\n\n    componentDidUpdate(prevProp, prevstate){\n        console.log(\"componentDidUpdate\")\n        this.scrollToBottom()\n        if(prevProp.textInfo !== this.props.textInfo)\n        {\n            console.log(\"ChatChannel update\")\n            \n\n            if(this.props.textInfo)\n            {\n                console.log(\"A1\")\n                if(!prevProp.textInfo)\n                {\n                    console.log(\"A1-1\")\n                    this.markMessageRead()\n                }\n                else\n                {\n                    console.log(\"A1-2\")\n                    let objA = prevProp.textInfo[prevProp.textInfo.length -1]\n                    let objB = this.props.textInfo[this.props.textInfo.length -1]\n\n                    if(objA.channelID !== objB.channelID || objA.emitDate !== objB.emitDate || objA.emitID !== objB.emitID || objA.emitImage !== objB.emitImage || objA.emitMessage !== objB.emitMessage || objA.emitName !== objB.emitName || objA.emitTime !== objB.emitTime)                        \n                    {\n                        console.log(\"A1-2-1\")\n                        this.markMessageRead()\n                    }\n                }\n            }\n        }\n    }\n\n    scrollToBottom=()=>{\n        //console.log(this.dummyChatRowRef)\n        this.dummyChatRowRef.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n    createStageRow=(text)=>{\n        switch(text.emitMessage){\n            case \"cmsStage1A\":\n                return <div className={\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{\"系統自動客服\"}</div><div className={\"chatRowTime\"}></div></div>\n                    <div className={\"rightChatMessage\"}>{\"您好，歡迎使用台灣華語電影資料庫~\"}</div>\n                    </div>\n            case \"cmsStage1B\":\n                if(this.props.queryStage === \"1\")\n                {\n                    return <div className={\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{\"系統自動客服\"}</div><div className={\"chatRowTime\"}></div></div>\n                    <div className={\"rightChatMessage leftAlign\"}>{\"請問您是要：\"}\n                        <div className={\"queryTypeOption\"} onClick={()=>this.chooseType(1)}>{\"1. 我有使用上的問題想請教。\"}</div>\n                        <div className={\"queryTypeOption\"} onClick={()=>this.chooseType(2)}>{\"2. 我發現資料文字有錯誤!\"}</div>\n                        <div className={\"queryTypeOption\"} onClick={()=>this.chooseType(3)}>{\"3. 我發現系統有些功能不正常!\"}</div>\n                        <div className={\"queryTypeOption\"} onClick={()=>this.chooseType(4)}>{\"4. 我對於此系統有些建議跟想法。\"}</div>\n                        <div className={\"queryTypeOption\"} onClick={()=>this.chooseType(5)}>{\"5. 都不是，我有其他問題...\"}</div>\n                    </div>\n                    </div>\n                }\n                else\n                {\n                    return <div className={\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{\"系統自動客服\"}</div><div className={\"chatRowTime\"}></div></div>\n                    <div className={\"rightChatMessage leftAlign\"}>{\"請問您是要：\"}\n                        <div className={\"queryTypeOptionChoosed\"} >{\"1. 我有使用上的問題想請教。\"}</div>\n                        <div className={\"queryTypeOptionChoosed\"} >{\"2. 我發現資料文字有錯誤!\"}</div>\n                        <div className={\"queryTypeOptionChoosed\"} >{\"3. 我發現系統有些功能不正常!\"}</div>\n                        <div className={\"queryTypeOptionChoosed\"} >{\"4. 我對於此系統有些建議跟想法。\"}</div>\n                        <div className={\"queryTypeOptionChoosed\"} >{\"5. 都不是，我有其他問題...\"}</div>\n                    </div>\n                    </div>\n\n                }\n            case \"cmsStage2\":\n                return <div className={\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{\"系統自動客服\"}</div><div className={\"chatRowTime\"}></div></div>\n                    <div className={\"rightChatMessage\"}>{\"好的，接下來請讓我們知道如何稱呼您，請於下方輸入您的名稱~\"}</div>\n                    </div>\n            case \"cmsStage3\":\n                return <div className={\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{\"系統自動客服\"}</div><div className={\"chatRowTime\"}></div></div>\n                    <div className={\"rightChatMessage\"}>{\"謝謝您\"}<div style={{color:\"blue\"}}>{this.props.hostUserName\n                    }</div>{\"! 為方便聯繫您，再請您輸入您的email帳號\"}</div>\n                    </div>\n            case \"cmsStage4A\":\n                return <div className={\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{\"系統自動客服\"}</div><div className={\"chatRowTime\"}></div></div>\n                    <div className={\"rightChatMessage\"}>{\"謝謝您，接下來請描述您的問題或意見-\"}</div>\n                    </div>\n            case \"cmsStage4B\":\n                return <div className={\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{\"系統自動客服\"}</div><div className={\"chatRowTime\"}></div></div>\n        <div className={\"rightChatMessage\"}>{\"1. 截圖功能：您可以點擊\"}<CameraIcon/>{\"按鈕，頁面左上會出現可拖曳放大之截圖框。將其拖曳至您有問題之區域，再點擊截圖框左上同樣圖示，即可截圖並傳送給系統客服，使客服更直覺地了解您的問題。\"}</div>\n                    </div>  \n            case \"cmsStage4C\":\n                return <div className={\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{\"系統自動客服\"}</div><div className={\"chatRowTime\"}></div></div>\n        <div className={\"rightChatMessage\"}>{'2. 文字數量：如您的意見文字較多，可分段輸入，請勿一對話框超過100字。如已陳述完畢，請於獨立對話框輸入\"完畢\"或\"Done\"，系統始進入下一階段。'}</div>\n                    </div> \n            case \"cmsStage5A\":\n                return <div className={\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{\"系統自動客服\"}</div><div className={\"chatRowTime\"}></div></div>\n        <div className={\"rightChatMessage\"}>{\"謝謝您提供的意見，如系統客服人員在線的話，將直接線上回覆您，若不在線，將於2日內回覆至您的信箱。\"}</div>\n                    </div>\n            case \"cmsStage5B\":\n                return <div className={\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{\"系統自動客服\"}</div><div className={\"chatRowTime\"}></div></div>\n        <div className={\"rightChatMessage\"}>{'如您有新的問題，請於下方輸入: \"我有問題\"。'}</div>\n                    </div>\n            case \"cmsQueryType1\":\n                return <div className={text.emitID === this.props.hostUserID ? \"leftChatRow\":\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{text.emitName}</div><div className={\"chatRowTime\"}>{text.emitTime}</div></div>\n                    <div className={text.emitID === this.props.hostUserID ? \"leftChatMessage\":\"rightChatMessage\"}>{\"我有使用上的問題想請教。\"}</div>\n                    </div>\n            case \"cmsQueryType2\":\n                return <div className={text.emitID === this.props.hostUserID ? \"leftChatRow\":\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{text.emitName}</div><div className={\"chatRowTime\"}>{text.emitTime}</div></div>\n                    <div className={text.emitID === this.props.hostUserID ? \"leftChatMessage\":\"rightChatMessage\"}>{\"我發現資料文字有錯誤!\"}</div>\n                    </div>\n            case \"cmsQueryType3\":\n                return <div className={text.emitID === this.props.hostUserID ? \"leftChatRow\":\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{text.emitName}</div><div className={\"chatRowTime\"}>{text.emitTime}</div></div>\n                    <div className={text.emitID === this.props.hostUserID ? \"leftChatMessage\":\"rightChatMessage\"}>{\"我發現系統有些功能不正常!\"}</div>\n                    </div>\n            case \"cmsQueryType4\":\n                return <div className={text.emitID === this.props.hostUserID ? \"leftChatRow\":\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{text.emitName}</div><div className={\"chatRowTime\"}>{text.emitTime}</div></div>\n                    <div className={text.emitID === this.props.hostUserID ? \"leftChatMessage\":\"rightChatMessage\"}>{\"我對於此系統有些建議跟想法。\"}</div>\n                    </div>\n            case \"cmsQueryType5\":\n                return <div className={text.emitID === this.props.hostUserID ? \"leftChatRow\":\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{text.emitName}</div><div className={\"chatRowTime\"}>{text.emitTime}</div></div>\n                    <div className={text.emitID === this.props.hostUserID ? \"leftChatMessage\":\"rightChatMessage\"}>{\"都不是，我有其他問題...\"}</div>\n                    </div>\n            default:\n                return <div className={text.emitID === this.props.hostUserID ? \"leftChatRow\":\"rightChatRow\"}>\n                    <div className={\"chatRowHeader\"}><div className={\"chatRowName\"}>{text.emitName}</div><div className={\"chatRowTime\"}>{text.emitTime}</div></div>\n                    <div className={text.emitID === this.props.hostUserID ? \"leftChatMessage\":\"rightChatMessage\"}>{text.emitMessage? text.emitMessage:<a href={serverIP+'/api/screenshotImage/download/'+text.emitImage} style={{display:\"table-cell\"}} target=\"_blank\"><img src={serverIP+'/api/screenshotImage/download/'+text.emitImage} style={{maxWidth:\"150px\",height:\"auto\",cursor:\"pointer\"}}/></a>}</div>\n                    </div>\n        }\n    }\n\n    openImageTab=(dataImage)=>{\n        let html = \"<img src='\"+dataImage+\"'/>\";\n        let newTab = window.open()\n        newTab.document.write(html)\n        newTab.focus()\n    }\n\n    chooseType=(number)=>{\n        let stageTwoMsg = \"請輸入您的名稱\"\n        let msg = {\n            userID: this.props.hostUserID,\n            emitMessage:\"請輸入訊息\"\n        }\n\n        let stage = \"2\"\n        switch(number){\n            case 1:\n                msg = {\n                    userID: this.props.hostUserID,\n                    emitMessage:\"cmsQueryType1\"\n                }\n                this.props.getChatMessage(msg, stage)\n                this.setState({\n                    message:stageTwoMsg\n                })\n                break;\n            case 2:\n                msg = {\n                    userID: this.props.hostUserID,\n                    emitMessage:\"cmsQueryType2\"\n                }\n                this.props.getChatMessage(msg, stage)\n                this.setState({\n                    message:stageTwoMsg\n                })\n                break;\n            case 3:\n                msg = {\n                    userID: this.props.hostUserID,\n                    emitMessage:\"cmsQueryType3\"\n                }\n                this.props.getChatMessage(msg, stage)\n                this.setState({\n                    message:stageTwoMsg\n                })\n                break;\n            case 4:\n                msg = {\n                    userID: this.props.hostUserID,\n                    emitMessage:\"cmsQueryType4\"\n                }\n                this.props.getChatMessage(msg, stage)\n                this.setState({\n                    message:stageTwoMsg\n                })\n                break;\n            case 5:\n                msg = {\n                    userID: this.props.hostUserID,\n                    emitMessage:\"cmsQueryType5\"\n                }\n                this.props.getChatMessage(msg, stage)\n                this.setState({\n                    message:stageTwoMsg\n                })\n                break;\n            default:\n                break;\n        }\n    }\n\n    createMessageRows=()=>{\n        let output =[]\n        if(this.props.queryInfo)\n        {\n            output = this.props.queryInfo.map(text=>{\n                return this.createStageRow(text)\n            })\n        }\n        else\n        {\n            output = null\n        }\n\n        return output\n    }\n\n    closeChannel=()=>{\n        this.props.closeChannel()\n    }\n\n    markMessageRead=()=>{\n        console.log(\"markMessageRead\")\n        if(this.props.textInfo)\n        {\n            let msg = {\n                channelID : this.props.hostUserID,\n                type : \"query\"\n            }\n\n            this.props.markRead(msg)\n        }\n    }\n\n    messageInput=(e)=>{\n        if(e.target.value !== this.state.message)\n        {\n            if(new TextEncoder().encode(e.target.value).length < 300)\n            {\n                this.setState({message:e.target.value})\n            }\n        }\n    }\n\n    messageSubmit=(e)=>{\n        if(e.key === \"Enter\")\n        {\n            if(this.props.queryStage === \"2\")\n            {\n                let stage = \"3\"\n                let msg = {\n                    userID: this.props.hostUserID,\n                    emitMessage:this.state.message\n                }\n                this.props.getChatMessage(msg,stage)\n                this.setState({\n                    message:\"您的email\"\n                })\n            }\n            else if(this.props.queryStage === \"3\")\n            {\n                let stage = \"4\"\n                let msg = {\n                    userID: this.props.hostUserID,\n                    emitMessage:this.state.message\n                }\n                this.props.getChatMessage(msg,stage)\n                this.setState({\n                    message:\"請描述您的意見或問題\"\n                })\n            }\n            else if(this.props.queryStage === \"4\")\n            {\n                let stage = \"5\"\n                let msg = {\n                    userID: this.props.hostUserID,\n                    emitMessage:this.state.message\n                }\n                this.props.getChatMessage(msg,stage)\n                this.setState({\n                    message:\"請描述您的意見或問題\"\n                })\n            }\n            else if(this.props.queryStage === \"5\")\n            {\n                if(this.state.message === \"完畢\" || this.state.message === \"Done\")\n                {\n                    let stage = \"6\"\n                    let msg = {\n                        userID: this.props.hostUserID,\n                        emitMessage:this.state.message\n                    }\n                    this.props.getChatMessage(msg,stage)\n                    this.setState({\n                        message:\"請描述您的意見或問題\"\n                    })\n                }\n                else\n                {\n                    let stage = \"5\"\n                    let msg = {\n                        userID: this.props.hostUserID,\n                        emitMessage:this.state.message\n                    }\n                    this.props.getChatMessage(msg,stage)\n                    this.setState({\n                        message:\"請描述您的意見或問題\"\n                    })\n                } \n            }\n            else if(this.props.queryStage === \"10\")\n            {\n                if(this.state.message === \"我有問題\" )\n                {\n                    let stage = \"1\"\n                    let msg = {\n                        userID: this.props.hostUserID,\n                        emitMessage:this.state.message\n                    }\n                    this.props.getChatMessage(msg,stage)\n                    this.setState({\n                        message:\"請描述您的意見或問題\"\n                    })\n                }\n                else\n                {\n                    let stage = \"10\"\n                    let msg = {\n                        userID: this.props.hostUserID,\n                        emitMessage:this.state.message\n                    }\n                    this.props.getChatMessage(msg,stage)\n                    this.setState({\n                        message:\"請描述您的意見或問題\"\n                    })\n                } \n            }\n        }\n    }\n\n    takeScreenShot=()=>{\n        this.props.takeScreenShot()\n    }\n\n    render(){\n        console.log(\"ChatChannel render...\")\n        return(\n            <div className={\"chatChannel\"} style={{right:this.props.index*280+250}}>   \n                <div className={\"chatChannelHeader\"}>\n                    <div className={\"chatChannelLabel\"}>{\"反映問題\"}</div>\n                    <div className={\"rightUpConrnerArea\"}>\n                        {this.props.queryStage === \"4\" || this.props.queryStage === \"5\" || this.props.queryStage === \"10\" ?  <div className={\"chatChannelButton\"} onClick={this.takeScreenShot}><CameraIcon/></div> :null}\n                        <div className={\"chatChannelCloseButton\"} onClick={this.closeChannel}>{\"x\"}</div>\n                    </div>\n                </div> \n                <div className={\"chatRowContainer\"}>\n                    {this.createMessageRows()}\n                    <div className={\"chatRowBottom\"} ref={(re)=>{this.dummyChatRowRef= re}}></div>\n                </div>\n                {this.props.queryStage === \"1\" ? null: <div className={\"chatChannelInput\"}><input type=\"text\" style={{width:\"100%\",border:\"1px solid #c5c5c5\"}} value={this.state.message?this.state.message:\"\"} onChange={this.messageInput} onKeyDown={this.messageSubmit}/></div>}      \n            </div>    \n        )\n    }\n}\n\nexport default ChatChannel\n","import React, { Component } from 'react';\n\nclass MaskArea extends Component {\n    constructor(props){\n        super(props)\n        this.state={}\n           \n   \n    }\n    componentDidMount(){\n       \n    }\n\n    getPath=()=>{\n        let outer = \"M0,0 L0,\"+this.props.dynamicImageSize.height+\"L\"+this.props.dynamicImageSize.width+\",\"+this.props.dynamicImageSize.height+\"L\"+this.props.dynamicImageSize.width+\",0 Z\"\n        let inner = \"M\"+this.props.floatWinPos.x+\",\"+this.props.floatWinPos.y+\"L\"+Number(this.props.floatWinPos.x+this.props.floatWinSize.width)+\",\"+this.props.floatWinPos.y+\"L\"+Number(this.props.floatWinPos.x+this.props.floatWinSize.width)+\",\"+Number(this.props.floatWinPos.y+this.props.floatWinSize.height)+\"L\"+this.props.floatWinPos.x+\",\"+Number(this.props.floatWinPos.y+this.props.floatWinSize.height)+\"L\"+this.props.floatWinPos.x+\",\"+this.props.floatWinPos.y+\"Z\"\n\n        //console.log(outer+inner)\n        return outer+inner\n    }\n\n    render(){\n        let svgStyle={\n            fill:\"#000000\",\n            width:this.props.dynamicImageSize.width,\n            height:this.props.dynamicImageSize.height,\n            opacity:\"50%\",\n            \n        }\n\n        let pathStyle ={\n            fillRule:\"evenodd\"\n        }\n\n        return(       \n            <svg style={svgStyle}>\n                <path style={pathStyle} d={this.getPath()}/>    \n            </svg>\n        )\n    }\n}\n\nexport default MaskArea\n","import React, {Component} from 'react'\nimport MaskArea from './MaskArea'\nimport './ScreenshotPicker.css'\nimport CameraIcon from '@material-ui/icons/LocalSee'\n\nclass ScreenshotPicker extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position:{\n                x:0,\n                y:0\n            },\n            refPos:{\n                x:0,\n                y:0\n            },\n            divSize:{\n                width:250,\n                height:250\n            },\n            refDivSize:{\n                width:0,\n                height:0\n            },\n\n            containerExtending:false,\n            containerDragging:false\n        }\n    }\n\n    componentDidMount(){\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        //console.log('FloatWindow componentDidUpdate...')\n         \n        if(this.state.containerExtending === false && this.state.containerDragging === true)\n        {\n            //console.log(\"A\")\n            if(prevProps.mousePos !== this.props.mousePos)\n            {\n                this.setNewContainerPosition()\n            } \n        }\n        else if(this.state.containerExtending === true && this.state.containerDragging === false)\n        {\n            //console.log(\"B\")\n            if(prevProps.mousePos !== this.props.mousePos)\n            {\n                this.setNewContainerSize()\n            } \n        }\n    }\n\n\n    setNewContainerPosition() {\n        let containerX = this.props.mousePos.x-this.state.refPos.x\n        let containerY = this.props.mousePos.y-this.state.refPos.y\n        let newPos = {\n            x:containerX,\n            y:containerY\n        }\n\n        this.setState({\n            position:this.borderCollisonForMoving(newPos),\n        })\n    }\n\n    setNewContainerSize=()=>{\n\n        let width = this.state.refDivSize.width+(this.props.mousePos.x-this.state.refPos.x)\n        let height = this.state.refDivSize.height+(this.props.mousePos.y-this.state.refPos.y)\n       \n        let newSize = {\n            width:width,\n            height:height\n        }\n   \n        this.setState({\n            divSize: this.borderCollisonForExtending(newSize) ,\n        })\n    }\n\n    borderCollisonForMoving=(pos)=>{\n        if(pos.x<0)\n        {\n            pos.x=0\n        }\n\n        if(pos.x+this.state.divSize.width>this.props.bodySize.width)\n        {\n            pos.x=this.props.bodySize.width-this.state.divSize.width\n        }\n\n        if(pos.y<0)\n        {\n            pos.y=0\n        }\n\n        if(pos.y+this.state.divSize.height>this.props.bodySize.height)\n        {\n            pos.y=this.props.bodySize.height-this.state.divSize.height\n        }\n\n        return pos\n\n    }\n\n    borderCollisonForExtending=(size)=>{\n        if(size.width+this.state.position.x>this.props.bodySize.width)\n        {\n            size.width = this.props.bodySize.width-this.state.position.x\n        }\n\n        if(size.height+this.state.position.y>this.props.bodySize.height)\n        {\n            size.height = this.props.bodySize.height-this.state.position.y\n        }\n\n        return size\n\n    }\n\n\n    extendAreaMouseDown=(e)=>{\n        // console.log('extendAreaMouseDown')\n        e.stopPropagation()\n        this.setState({\n            containerExtending:true,\n            containerFocusing:true,\n            refPos:{\n                x:e.clientX,\n                y:e.clientY\n            },\n            refDivSize:this.state.divSize\n        })   \n\n        let msg ={\n            containerExtending:true,\n        }\n        this.props.containerExtending(msg)\n    }\n\n    extendAreaMouseUp=(e)=>{\n        e.stopPropagation()\n        this.setState({\n            containerExtending:false,\n            refPos:{\n                x:0,\n                y:0\n            },\n        })  \n\n        let msg ={\n            containerExtending:false,\n        }\n        //console.log(\"D0\")\n      \n        this.props.containerExtending(msg)\n    }\n\n    headerMouseDown=(e)=>{   \n        e.stopPropagation()\n        e.preventDefault()\n        //console.log('ControllerUnitContainer headerMouseDown')\n        this.setState({\n            containerDragging:true,\n            containerFocusing:true,\n            refPos:{\n                x:e.clientX-this.state.position.x,\n                y:e.clientY-this.state.position.y\n            }\n        })   \n\n        let msg ={\n            containerDragging:true,\n        }\n        this.props.containerDragging(msg)\n        \n    }\n\n    headerMouseUp=(e)=>{\n        e.stopPropagation()\n        this.setState({\n            containerDragging:false,\n            refPos:{\n                x:0,\n                y:0\n            },\n        })  \n\n        let msg ={\n            containerDragging:false,\n        }\n        this.props.containerDragging(msg)\n    }\n\n    closeScreenshotPicker=()=>{\n        this.props.closeScreenshotPicker()\n    }\n\n    getSreenshotArea=()=>{\n        let msg = {\n            x:this.state.position.x,\n            y:this.state.position.y,\n            width:this.state.divSize.width,\n            height:this.state.divSize.height\n        }\n        this.props.getSreenshotArea(msg)\n    }\n\n    render(){\n        let defaultImageLayout = {\n            top:this.state.position.y,\n            left:this.state.position.x,\n            width:this.state.divSize.width,\n            height:this.state.divSize.height\n        }\n\n        let extendFunctionAreaStyle = {\n            width:'20px',\n            height:'20px',\n            position:'absolute',\n            right:'0px',\n            bottom:'0px',\n            userSelect:'none',\n            color:\"#d2691e\",\n            cursor:'nw-resize'\n        }\n\n        return(\n            <div style={{width:this.props.bodySize.width,height:this.props.bodySize.height}}>\n                <div className={\"ScreenshotPickerContainer\"} style={defaultImageLayout} onMouseDown={this.headerMouseDown} onMouseUp={this.headerMouseUp}>\n                    <div className={\"ScreenshotPickerContainerButton\"} style={{lineHeight:\"30px\"}} onClick={this.closeScreenshotPicker}>X</div>\n                    <div className={\"ScreenshotPickerContainerButton\"} style={{lineHeight:\"41px\"}} onClick={this.getSreenshotArea}><CameraIcon/></div>\n                    <div className={\"ScreenshotPickerContainerText\"}>{\"1. 拖曳截圖框至您想截圖的地方。\"}</div>\n                    <div className={\"ScreenshotPickerContainerText\"}>{\"2. 指標移置右下角按住右鍵後，拖曳可放大縮小截圖區域。\"}</div>\n                    <div className={\"ScreenshotPickerContainerText\"}>{\"3. 確定後，按左側\"}<CameraIcon/>{\"按鈕完成截圖。\"}</div>\n                    <div className={\"ScreenshotPickerContainerText\"}>{'4. 若要放棄截圖，按左側 \"X\" 按鈕取消。'}</div>\n                    <div style={extendFunctionAreaStyle} onMouseDown={this.extendAreaMouseDown}  onMouseUp={this.extendAreaMouseUp}>\n                        &#9499;\n                    </div> \n                </div>\n                <MaskArea dynamicImageSize={this.props.bodySize} floatWinPos={this.state.position} floatWinSize={this.state.divSize}/>\n            </div>\n        )\n    }\n}\n\nexport default ScreenshotPicker\n","import React, {Component} from 'react'\nimport ScreenshotPicker from './ScreenshotPicker'\n\n\nclass ScreenshotContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            mousePos:{\n                x:0,\n                y:0\n            },\n            refPos:{\n                x:0,\n                y:0\n            },\n            needMousePos:false,\n            containerExtending:false,\n            containerDragging:false,\n        }\n        this.containerRef = React.createRef()\n    }\n\n    componentDidMount(){\n\n    }\n\n    onContainerExtending = (msg)=>{\n        //console.log('ControllerUnitLayout onContainerExtending')\n\n        if(msg.containerExtending)\n        {\n            this.setState({\n                containerExtending:msg.containerExtending,\n                needMousePos:true,\n            })\n        }  \n    }\n\n    onContainerDragging = (msg) => {\n\n        if(msg.containerDragging)\n        {\n            this.setState({\n                containerDragging:msg.containerDragging,     \n                needMousePos:true,\n            })         \n        }\n        else\n        {        \n            this.setState({          \n                containerDragging:false,\n                needMousePos:false,\n                mousePos:{\n                    x:0,\n                    y:0\n                }   \n            })\n        }\n    }\n\n  \n    onMouseMove=(e)=>{\n        //console.log(\"FloatWindowLayout onMouseMove...\")\n        if(this.state.needMousePos)\n        { \n            this.setState({\n                mousePos:{\n                    x:e.clientX,\n                    y:e.clientY\n                },\n            })\n        }\n    }\n\n    getBodySize=()=>{\n        let size = {\n            width:this.containerRef.clientWidth,\n            height:this.containerRef.clientHeight\n            //width:this.containerRef.clientWidth,\n            //height:this.containerRef.clientHeight\n        }\n        return size\n    }\n\n\n    closeScreenshotPicker=()=>{\n        this.props.closeScreenshotPicker()\n    }\n\n    getSreenshotArea=(msg)=>{\n        this.props.getSreenshotArea(msg)\n    }\n\n    render(){\n        let containerStyle = {\n            position:\"fixed\",\n            top:\"0px\",\n            left:\"0px\",\n            width:\"100%\",\n            height:\"100%\",\n            zIndex:\"2000\"\n        }\n\n        return(\n            <div style={containerStyle} ref={(ref)=>{this.containerRef=ref}} onMouseMove={this.onMouseMove}>\n                <ScreenshotPicker bodySize={this.getBodySize()} mousePos={this.state.mousePos} containerExtending={this.onContainerExtending} containerDragging={this.onContainerDragging} closeScreenshotPicker={this.closeScreenshotPicker} getSreenshotArea={this.getSreenshotArea}/>\n            </div>    \n        )\n    }\n}\n\nexport default ScreenshotContainer\n","import React, { Component } from 'react';\nimport './GridCell.css'\nimport DynamicImage from '../Event/DynamicImage'\nimport IPAddress from '../IPAddress'\n\n\n\nclass GridCell extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            eventAbstract:null,\n            hover:false\n        }\n    }\n\n    componentDidMount(){\n        this.fetchEventInfoFromAPI()\n    }\n\n    fetchEventInfoFromAPI=async()=>{\n        if(this.props.eventDetail && this.props.eventDetail.Event_SysID)\n        {\n            let tempIP = new IPAddress()\n            console.log('fetchEventInfoFromAPI')\n            let msg = await fetch(tempIP.state.ip+'/api/event/fetch/EventAbstractInfo/'+this.props.eventDetail.Event_SysID)\n            \n            if(msg.statusText !== \"SQL qeury error\" || msg.statusText !== \"mysql DB crash\")\n            {\n                console.log(\"OK\")\n                let output = await msg.json()\n\n                let tempAbstractObj = {\n                    Event_Images:output[0].Event_BGImageSettings,\n                    Event_Story:output[0].Event_Story,\n                    Event_SubTitle:output[0].Event_SubTitle, \n                    Event_Title:output[0].Event_Title,\n                }\n\n                this.setState({\n                    eventAbstract:tempAbstractObj\n                })\n            }\n        }\n    }\n\n    openEventPage=()=>{\n        this.props.openEventPage(this.props.eventDetail.Event_SysID)\n    }\n\n    render(){ \n        let beforeEventContainer = {\n            width: this.props.posRef.width+'px',\n            height: this.props.posRef.height+'px',\n            top:this.props.posRef.top+'px',\n            left:this.props.posRef.left+'px',\n            backgroundColor: 'rgba(0, 0, 0)',\n            cursor:'normal',\n            boxShadow: 'white 0px 0px 0px 1px',\n            position:'absolute',\n            //border:'1px solid white'\n        }\n\n        let afterEventContainer = {\n            width: this.props.posRef.width+'px',\n            height: this.props.posRef.height+'px',\n            top:this.props.posRef.top+'px',\n            left:this.props.posRef.left+'px',\n            backgroundColor: 'rgba(112, 128, 144)',\n            cursor:'pointer',\n            boxShadow: 'white 0px 0px 0px 1px',\n            position:'absolute',\n            //border:'1px solid white'\n        }\n        return(\n            <div style={this.state.hover? afterEventContainer:beforeEventContainer} onClick={this.openEventPage} onMouseOver={()=>{this.setState({hover:true})}} onMouseLeave={()=>{this.setState({hover:false})}}> \n                <div className={this.state.hover?\"CellTitleContainer mousehover\":\"CellTitleContainer nothover\"}>\n                    <div className=\"EventTitle\">{this.state.eventAbstract ? this.state.eventAbstract.Event_Title : null}</div>\n                </div>\n                {\n                    this.state.hover? null:\n                    <div className={this.props.posRef.height === 300 ? \"CellImageContainer Normal\":\"CellImageContainer Tall\"}>   \n                        <DynamicImage eventImages={this.state.eventAbstract ? this.state.eventAbstract.Event_Images : null} windowSize={this.props.windowSize}/>\n                    </div> \n                } \n                {\n                    this.state.hover? null:\n                    <div className=\"CellSubTitle\">{this.state.eventAbstract ? this.state.eventAbstract.Event_SubTitle : null}</div>\n                }\n                {\n                    this.state.hover?\n                    <div className=\"CellTextBlock\">     \n                        <p className=\"Cell-with-text\">{this.state.eventAbstract ? this.state.eventAbstract.Event_Story : null}</p>\n                    </div>  \n                    :null\n                }\n                 \n            </div>\n        )\n    }\n}\n\nexport default GridCell","import React, { Component } from 'react';\nimport './HomeBody.css'\nimport Footer from '../Footer/Footer'\nimport IPAddress from '../IPAddress'\nimport GridCell from './GridCell'\nimport {CellRef} from './GridContainerRef'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nclass HomeBody extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            Event:null,\n            xPos:0\n        }\n        \n    }\n\n    componentDidMount(){\n       \n       this.getEventState()\n       \n    }\n\n    getEventState =async()=>{\n        let tempIP = new IPAddress()\n        console.log(\"getEventState\")\n        let tDate = new Date()\n        let today = tDate.toISOString().slice(0, 19).replace('T', ' ')\n        let msg = await fetch(tempIP.state.ip+'/api/event/fetch/EventMainInfoByDate/'+today+'/'+today)\n        \n        if(msg.statusText !== \"SQL qeury error\" || msg.statusText !== \"mysql DB crash\")\n        {\n            let output = await msg.json()\n            console.log(\"msg\")\n            this.setState({\n                Event:output\n            })\n        }\n    }\n\n    createEventContainer=()=>{\n        let output = []\n        let frontObj = <div className={\"PrefixEmptyCell\"}/>\n        let backObj \n        let maxLeft = 0\n        output.push(frontObj)\n        if(this.state.Event)\n        {\n            \n            this.state.Event.forEach((event,index) => {                        \n                if(index < 6)\n                {\n                    let obj = <GridCell posRef={CellRef[index]} eventDetail={event} openEventPage={(msg)=>{this.props.history.push(\"/Event/\"+msg)}} windowSize={this.props.windowSize}/>\n                    output.push(obj)\n                    maxLeft = CellRef[index]\n                }\n                else\n                {\n                    maxLeft = 1600*(index/6>>0)+CellRef[index%6].left\n                    let tempPosRef = {\n                        no:index,\n                        width:CellRef[index%6].width,\n                        height:CellRef[index%6].height,\n                        left:maxLeft,\n                        top:CellRef[index%6].top\n                    }\n\n                    let obj = <GridCell posRef={tempPosRef} eventDetail={event} openEventPage={(msg)=>{this.props.history.push(\"/Event/\"+msg)}} windowSize={this.props.windowSize}/>\n                    output.push(obj)  \n                }\n            })\n\n            let finalLeft = maxLeft+400\n\n            backObj = <div className={\"SuffixEmptyCell\"} style={{\"top\":\"0px\",\"left\":finalLeft+\"px\"}}/>\n\n            output.push(backObj)\n\n\n\n           \n\n            return output\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    moveToLeft=()=>{\n        console.log(\"Move Left\")\n        this.dummyGridContainerRowRef.scrollBy({top:0,left:-400,behavior:'smooth'})\n\n    }\n\n    moveToRight=()=>{\n        //this.setState({\n        //    xPos:this.state.xPos + 250\n        //},()=>{\n            this.dummyGridContainerRowRef.scrollBy({top:0,left:+400,behavior:'smooth'})\n        //})\n    }\n\n   \n    render(){\n        return(\n            <div className={\"HomeBody\"} >\n                <div className={\"GridCenterBody\"}>            \n                    <div className={\"GridContainer\"} ref={(re)=>{this.dummyGridContainerRowRef= re}}>          \n                        {this.createEventContainer()}\n                    </div>\n                    <div className={\"GridLeftArrow\"}>\n                        <div className={\"GridArrowMiddleLevel\"} onClick={()=>this.moveToLeft()}>\n                            <ArrowBackIosIcon style={{fontSize:80}}/>\n                        </div>\n                    </div>    \n                    <div className={\"GridRightArrow\"}>\n                        <div className={\"GridArrowMiddleLevel\"} onClick={()=>this.moveToRight()}>\n                            <ArrowForwardIosIcon style={{fontSize:80}}/>\n                        </div>\n                    </div>\n                </div> \n                <div style={{\"width\":\"100%\"}}>\n                    <Footer/>\n                </div>                  \n            </div>\n             \n        )\n    }\n}\n\nexport default HomeBody","import React, { Component } from 'react';\nimport './APIDocMainPage.css'\nimport {serverIP} from '../IPAdressModule'\nimport {APIDoc} from './APIDoc'\n\nclass APIDocMainPage extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            \n        }\n        \n    }\n\n    componentDidMount(){\n       \n    }\n\n    getParagraph=()=>{\n        let output = APIDoc.paragraph.map(paragraph=>{\n            return(\n            <div className={\"APIDocRightAreaMainOption\"}>\n                <div className={\"APIDocRightAreaMainOptionTitle\"}>{paragraph.number+\" \"+paragraph.pTitle}</div>\n                <div className={\"APIDocRightAreaMainOptionText\"}>{paragraph.pText}</div>\n                {this.getSubParagraph(paragraph.subParagraph)}\n            </div>\n            )\n        })\n\n        return output\n    }\n\n    getSubParagraph=(subParagraphs)=>{\n        let output = subParagraphs.map(sParagraph=>{\n            return(\n            <div className={\"APIDocRightAreaMinorOption\"}>\n                <div className={\"APIDocRightAreaMinorOptionTitle\"}>{sParagraph.number+\" \"+sParagraph.spTitle}</div>\n                <div className={\"APIDocRightAreaMinorOptionText\"}>{sParagraph.spText}</div>\n                <div className={\"APIDocAddressLine\"}>{serverIP+sParagraph.spUrl}</div>\n                {this.getSubParagraphInputTable(sParagraph.inputTableText, sParagraph.inputTable)}\n                {this.getSubParagraphOutputTable(sParagraph.outputTableText, sParagraph.outputTable)}\n            </div>\n            )\n        })\n\n        return output\n    }\n\n\n    getSubParagraphInputTable=(text,table)=>{\n        let output =  <div className={\"APIDocTable\"}>\n            <div className={\"APIDocRightAreaTableTitle\"}>輸入參數說明</div>\n            <div className={\"APIDocRightAreaTableText\"}>{text}</div>\n            <table style={{\"width\":\"100%\",\"borderSpacing\":\"0px\",\"border\": \"1px solid rgb(185, 185, 185)\"}}>\n                <thead>\n                    <tr>\n                        <th className={\"APIDocTableHeadTH\"} style={{\"width\":\"30%\"}}>參數</th>\n                        <th className={\"APIDocTableHeadTH\"} style={{\"width\":\"10%\"}}>類型</th>\n                        <th className={\"APIDocTableHeadTH\"} style={{\"width\":\"60%\"}}>說明</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.getTableRow(table)}\n                </tbody>\n            </table>\n\n        </div>\n\n        return output\n    }\n\n\n    getSubParagraphOutputTable=(text,table)=>{\n        let output =  <div className={\"APIDocTable\"}>\n            <div className={\"APIDocRightAreaTableTitle\"}>API呼叫成功 Success 200 回傳訊息說明</div>\n            <div className={\"APIDocRightAreaTableText\"}>{text}</div>\n            <table style={{\"width\":\"100%\",\"borderSpacing\":\"0px\",\"border\": \"1px solid rgb(185, 185, 185)\"}}>\n                <thead>\n                    <tr>\n                        <th className={\"APIDocTableHeadTH\"} style={{\"width\":\"30%\"}}>物件屬性 (資料欄位)</th>\n                        <th className={\"APIDocTableHeadTH\"} style={{\"width\":\"10%\"}}>類型</th>\n                        <th className={\"APIDocTableHeadTH\"} style={{\"width\":\"60%\"}}>說明</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.getTableRow(table)}\n                </tbody>\n            </table>\n\n        </div>\n\n        return output\n    }\n\n\n    getTableRow=(table)=>{\n        let output = table.map(row=>{\n            return(\n            <tr>\n                <td className={\"APIDocTableBodyTD\"}>{row.iTitle}</td>\n                <td className={\"APIDocTableBodyTD\"}>{row.iType}</td>\n                <td className={\"APIDocTableBodyTD\"} dangerouslySetInnerHTML={{__html:row.iText}}/>\n            </tr>\n            )\n        })\n\n        return output\n    }\n\n\n   \n    render(){\n        return(\n            <div className={\"APIDocMainPage\"} >\n                <div style={{\"display\":\"flex\",\"flexDirection\":\"row\"}}>\n                    <div className={\"APIDocLeftArea\"}>\n                        <div className={\"APIDocLeftAreaMainOption\"}>\n                            <div className={\"APIDocLeftAreaMinorOption\"}></div>\n                            <div className={\"APIDocLeftAreaMinorOption\"}></div>\n                        </div>\n                        <div className={\"APIDocLeftAreaMainOption\"}>\n                            <div className={\"APIDocLeftAreaMinorOption\"}></div>\n                            <div className={\"APIDocLeftAreaMinorOption\"}></div>\n                        </div>\n                        <div className={\"APIDocLeftAreaMainOption\"}>\n                            <div className={\"APIDocLeftAreaMinorOption\"}></div>\n                            <div className={\"APIDocLeftAreaMinorOption\"}></div>\n                        </div>\n                    </div>\n                    <div className={\"APIDocRightArea\"}>\n                        <div className={\"APIDocMainTitle\"}>{APIDoc.mainTitle}</div>\n                        <div className={\"APIDocText\"}>{APIDoc.mainText}</div>\n                        {this.getParagraph()}\n                    </div>\n                </div>                   \n            </div>\n             \n        )\n    }\n}\n\nexport default APIDocMainPage","import React, { Component } from 'react';\nimport UpBanner from '../UpBanner/UpBanner'\nimport './MainBody.css'\nimport IntroList from '../IntroList/IntroList'\nimport EventBody from '../Event/EventBody'\nimport MovieWorkInfoMainBody from '../MovieWorkInfo/MovieWorkInfoMainBody'\nimport ResultListMainBody from '../ResultList/ResultListMainBody'\nimport EventPage from '../Event/EventPage'\nimport {BrowserRouter, Route, Redirect, Switch} from 'react-router-dom'\nimport {serverIP} from '../IPAdressModule'\nimport ChatRoom from '../ChatRoom/ChatRoom'\nimport ChatChannel from '../ChatRoom/ChatChannel'\nimport webSocket from 'socket.io-client'\nimport html2canvas from 'html2canvas'\nimport ScreenshotContainer from '../Screenshot/ScreenshotContainer'\nimport HomeBody from '../Home/HomeBody'\nimport APIDocMainPage from '../APIDoc/APIDocMainPage'\n\nclass MainBody extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            event:true,\n            showIntroList:false,\n            sessionID:null,\n            queryType:null,\n            clientIP:null,\n            clientName:null,\n            clientEmail:null,\n            toggleScreenshotPicker:false,\n            screenshotArea:null,\n            screenshotEmitInfo:null,\n            wsMiddleWare:null,\n            preQuery:null,\n            query:null,\n            toggleChatChannel:false,\n            queryStage:\"1\",\n            newUrl:null,\n            scrollTop:0,\n            windowSize:\"large\"\n        } \n        this.containerLayout = React.createRef()\n    }\n\n    componentDidMount(){\n        window.addEventListener(\"resize\", this.getResizeWidth)\n        this.userSessionStart()       \n        window.addEventListener(\"beforeunload\",(e)=>this.userSessionEnd(e))\n    }\n\n    componentDidUpdate(prevProps,prveState){\n        \n\n        if(this.state.screenshotArea)\n        {\n            let msg = this.state.screenshotArea\n            this.captureScreenShot(msg.x, msg.y+this.state.scrollTop, msg.width, msg.height, this.state.screenshotEmitInfo)\n            this.setState({\n                screenshotArea:null,\n                screenshotEmitInfo:null\n            })\n        }\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener(\"beforeunload\", this.userSessionEnd)\n    }\n\n    getResizeWidth=()=>{\n        //console.log(this.scrollContainerLayout)\n        let tempWidth = 1900\n        if(this.containerLayout.current)\n        {\n            tempWidth = this.containerLayout.current.scrollWidth\n        }\n    \n        //console.log(tempWidth)\n        if(tempWidth >= 1900)\n        {\n            if(this.state.windowSize !== \"large\")\n            {\n                this.setState({\n                    windowSize :\"large\"\n                })\n            }\n        }\n        else if(tempWidth<1900 && tempWidth >= 900)\n        {\n            if(this.state.windowSize !== \"medium\")\n            {\n                this.setState({\n                    windowSize :\"medium\"\n                })\n            }\n        }\n        else if(tempWidth<900)\n        {\n            if(this.state.windowSize !== \"small\")\n            {\n                this.setState({\n                    windowSize :\"small\"\n                })\n            }\n        }\n    }\n\n    captureScreenShot=(posX,posY,width,height, emitInfo)=>{\n        html2canvas(document.body,{\n            useCORS:true,\n            allowTaint:false\n        }).then((canvas)=>{\n            let tempCanvas = document.createElement('canvas')\n            let tempCanvasContext = tempCanvas.getContext('2d')\n          \n            tempCanvas.width = width/9*10\n            tempCanvas.height = height/9*10\n            tempCanvasContext.drawImage(canvas, posX, posY, width/9*10, height/9*10, 0, 0, width/9*10, height/9*10)\n            //tempCanvasContext.drawImage(canvas, posX/9*10, posY/9*10, width/9*10, height/9*10, 0, 0, width/9*10, height/9*10)\n         \n            //var a = document.createElement('a')\n            var screenshotImg = tempCanvas.toDataURL(\"image/jpeg\")\n            //a.download = 'testScreenShot.jpg'\n            //a.click()\n            let tempObj = {}\n            tempObj[this.state.clientIP] = true\n\n            if(this.state.queryStage === \"4\")\n            {\n                this.setState({queryStage : \"5\"},()=>{\n                    this.state.wsMiddleWare.emit('query_image',{channelID:emitInfo.channelID, emitID:emitInfo.visitorID, emitName:this.state.clientName? this.state.clientName:emitInfo.visitorName, emitIP:this.state.clientIP, emitImage:screenshotImg, read:tempObj})\n                })\n            }\n            else\n            {\n                this.state.wsMiddleWare.emit('query_image',{channelID:emitInfo.channelID, emitID:emitInfo.visitorID, emitName:this.state.clientName? this.state.clientName:emitInfo.visitorName, emitIP:this.state.clientIP, emitImage:screenshotImg, read:tempObj})\n            }\n        })\n    }\n  \n    userSessionStart=async()=>{\n        console.log(\"userSessionStart\")\n        let msg = await fetch(serverIP+'/frontEnd/userBehavior/session/start',{\n            method:\"POST\",\n            headers:{\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n            }\n        })\n        let output = await msg.json()\n        if(msg.status !== 200) throw Error(msg.message)\n        console.log(output)\n        this.setState({\n            sessionID:output[0].sessionID,\n            clientIP:output[0].clientIP,\n            wsMiddleWare:webSocket(serverIP)\n        },()=>{\n            this.dealWebSocket()\n            this.createPersonalRoom()\n            this.emitStageOne()\n            this.getResizeWidth()\n        })\n    }\n\n    userSessionEnd=(e)=>{\n        e.preventDefault()      \n        this.emitUserSessionEnd()\n        let msg = fetch(serverIP+'/frontEnd/userBehavior/session/leave/'+this.state.sessionID)\n        e.returnValue = \"\"  // !!!!!! Chrome requires returnValue to be set !!!!!!!\n    }\n\n    emitUserSessionEnd=()=>{ \n        this.state.wsMiddleWare.emit('visitor_leave',{visitorIP:this.state.clientIP, visitorName:this.state.clientName})\n        //e.returnValue = \"\"\n      }\n  \n\n    createPersonalRoom=()=>{\n        if(this.state.clientIP)\n        {\n            this.state.wsMiddleWare.emit('visitor_visit',{visitorID:this.state.clientIP, visitorIP:this.state.clientIP, visitorName:this.state.clientName?this.state.clientName:this.state.clientIP})\n        }\n    }\n\n    dealWebSocket=()=>{\n        console.log(\"dealWebSocket...\")\n        this.state.wsMiddleWare.on('query', data=>{\n              \n            let IDArray = []\n            let tempObj = data[data.length-1]\n            let stage\n\n            if(this.state.queryStage === \"10\")\n            {\n                IDArray = null\n                stage = \"10\"\n            }\n            else if(this.state.queryStage === \"6\" && tempObj.emitMessage === \"cmsStage5B\")\n            {\n                this.state.wsMiddleWare.emit('queryComplete',{channelID:this.state.clientIP,emitID:this.state.clientIP, emitName:this.state.clientName, emitIP:this.state.clientIP, emitFullTime:tempObj.emitFullTime, emitEmail:this.state.clientEmail, queryType:this.state.queryType, IDList:this.state.preQuery})\n                stage = \"10\"\n                IDArray = null\n            }\n            else\n            {\n                if(this.state.preQuery)\n                {\n                    IDArray = this.state.preQuery\n\n                    if(IDArray[IDArray.length-1].DBID !== tempObj.DBID)\n                    {\n                        let obj = { DBID:tempObj.DBID}\n                        IDArray.push(obj)\n                    }\n                }\n                else\n                {\n                    let obj = { DBID:tempObj.DBID}\n                    IDArray.push(obj)\n                }\n                stage = this.state.queryStage\n            }\n\n            \n            this.setState({\n                query:data,\n                preQuery:IDArray,\n                queryStage:stage\n            })                 \n        })\n  \n        this.state.wsMiddleWare.on('query_image', data=>{\n            console.log('query_image')\n            console.log(data)\n            let IDArray = []\n            let tempObj = data[data.length-1]\n\n            if(this.state.preQuery)\n            {\n                IDArray = this.state.preQuery\n\n                if(IDArray[IDArray.length-1].DBID !== tempObj.DBID)\n                {\n                    let obj = { DBID:tempObj.DBID}\n                    IDArray.push(obj)\n                }\n            }\n            else\n            {\n                let obj = { DBID:tempObj.DBID}\n                IDArray.push(obj)\n            }\n            \n            this.setState({\n                query:data,\n                preQuery:IDArray\n            })\n        })\n    }\n  \n    getLogoClick=(msg)=>{\n        //if(!this.state.showIntroList)\n        //{\n            this.setState({\n                showIntroList:msg\n            })\n        //}\n    }\n\n    onClickHandler=()=>{\n        if(this.state.showIntroList)\n        {\n            this.setState({\n                showIntroList:false\n            })\n        }\n    }\n\n    countUnreadMessage=()=>{\n        let resultArray = []\n        if(this.state.query)\n        {           \n            console.log(\"countUnreadMessage\")\n            console.log(this.state.query)\n            \n            this.state.query.forEach(query=>{\n                if( !query.read[this.state.clientIP])\n                {\n                    resultArray.push(query)\n                }\n            })        \n            return resultArray\n        }\n        else\n        {\n            return resultArray\n        }\n    }\n\n    createChatChannel=()=>{      \n        if(this.state.toggleChatChannel)\n        {\n            return <ChatChannel hostUserID={this.state.clientIP} hostUserName={this.state.clientName} textInfo={this.state.preQuery} queryInfo={this.state.query} closeChannel={this.closeChannel} getChatMessage={this.getChatMessage} takeScreenShot={this.takeScreenShot} markRead={this.markRead} queryStage={this.state.queryStage}/>\n        }\n    }\n\n    getChatChannel=()=>{\n        this.setState({\n            toggleChatChannel:true\n        })\n    }\n\n    closeChannel=()=>{  \n        this.setState({\n            toggleChatChannel:false\n        })\n    }\n  \n    takeScreenShot=()=>{\n        console.log(\"takeScreenShot\")\n        let msg = {\n            channelID:this.state.clientIP,\n            type:\"query\",\n            visitorID:this.state.clientIP,\n            visitorName:\"來自\"+this.state.clientIP\n        }\n        this.setState({      \n            toggleScreenshotPicker:true,\n            screenshotEmitInfo:msg\n        })\n    }\n  \n    closeScreenshotPicker=()=>{\n        this.setState({\n            toggleScreenshotPicker:false,\n            screenshotEmitInfo:null\n        })\n    }\n  \n    getSreenshotArea=(msg)=>{\n        this.setState({\n            toggleScreenshotPicker:false,\n            screenshotArea:msg,\n            scrollTop:document.documentElement.scrollTop\n        })\n    }\n\n    markRead=(msg)=>{\n        this.state.wsMiddleWare.emit('mark_read',{channelID:msg.channelID, emitID:this.state.clientIP, type:msg.type})\n    }\n\n    emitStageOne=()=>{\n\n        console.log(\"emit firstStage\")\n        let tempObj = {}\n        tempObj[this.state.clientIP] = true\n        this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\", emitMessage:\"cmsStage1A\",read:tempObj})\n        this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\", emitMessage:\"cmsStage1B\",read:tempObj})\n \n    }\n\n    getChatMessage=(msg, stage)=>{\n        console.log(\"getChatMessage...\")\n        let tempObj = {}\n        tempObj[this.state.clientIP] = true\n\n        if(stage === \"1\")\n        {\n            console.log(\"stage 1\")\n            this.setState({\n                queryStage:stage\n            },()=>{\n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:this.state.clientIP, emitName:this.state.clientName, emitIP:this.state.clientIP, emitMessage:msg.emitMessage,read:tempObj})  \n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\", emitMessage:\"cmsStage1A\",read:tempObj})\n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\", emitMessage:\"cmsStage1B\",read:tempObj})\n            })\n\n        }\n        else if(stage === \"2\")\n        {\n            \n            if(this.state.clientName)\n            {\n                this.setState({\n                    queryType:msg.emitMessage,\n                    queryStage:\"4\"\n                },()=>{\n                    this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:this.state.clientIP, emitName:this.state.clientName, emitIP:this.state.clientIP, emitMessage:msg.emitMessage,read:tempObj})\n                    this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\", emitMessage:\"cmsStage4A\",read:tempObj})\n                    this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\", emitMessage:\"cmsStage4B\",read:tempObj})\n                    this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\", emitMessage:\"cmsStage4C\",read:tempObj})\n                })\n            }\n            else\n            {\n                this.setState({\n                    queryType:msg.emitMessage,\n                    queryStage:stage\n                },()=>{\n                    this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:this.state.clientIP, emitName:this.state.clientName, emitIP:this.state.clientIP, emitMessage:msg.emitMessage,read:tempObj})  \n                    this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\", emitMessage:\"cmsStage2\",read:tempObj})\n                })\n            }\n            \n        }\n        else if(stage === \"3\")\n        {\n            this.setState({\n                clientName:msg.emitMessage,\n                queryStage:stage\n            },()=>{\n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:this.state.clientIP, emitName:this.state.clientName, emitIP:this.state.clientIP, emitMessage:msg.emitMessage,read:tempObj})  \n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\", emitMessage:\"cmsStage3\",read:tempObj})\n            })\n        }\n        else if(stage === \"4\")\n        {\n            this.setState({\n                clientEmail:msg.emitMessage,\n                queryStage:stage\n            },()=>{\n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:this.state.clientIP, emitName:this.state.clientName, emitIP:this.state.clientIP, emitMessage:msg.emitMessage,read:tempObj})\n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\", emitMessage:\"cmsStage4A\",read:tempObj})\n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\", emitMessage:\"cmsStage4B\",read:tempObj})\n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\", emitMessage:\"cmsStage4C\",read:tempObj})\n            })      \n        }\n        else if(stage === \"5\")\n        {\n            \n            this.setState({\n                queryStage:stage\n            },()=>{\n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:this.state.clientIP, emitName:this.state.clientName,  emitIP:this.state.clientIP, emitMessage:msg.emitMessage,read:tempObj})\n                \n            })      \n        }\n        else if(stage === \"6\")\n        {\n           \n            this.setState({\n                queryStage:stage\n            },()=>{\n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:this.state.clientIP, emitName:this.state.clientName, emitIP:this.state.clientIP,  emitMessage:msg.emitMessage,read:tempObj})\n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\",  emitMessage:\"cmsStage5A\",read:tempObj})\n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:\"AutoResponse\", emitName:\"自動客服\", emitIP:\"AutoResponse\",  emitMessage:\"cmsStage5B\",read:tempObj})\n                \n            })      \n        }\n        else\n        {\n            this.setState({\n                queryStage:stage\n            },()=>{\n                this.state.wsMiddleWare.emit('query',{channelID:this.state.clientIP, emitID:this.state.clientIP, emitName:this.state.clientName, emitIP:this.state.clientIP, emitMessage:msg.emitMessage,read:tempObj})  \n            })\n        }\n    }\n\n    getSearchInfo=(msg)=>{\n        console.log(\"getSearchInfo\")\n        console.log(msg)\n        let url = msg\n        if(msg === \"/default\")\n        {\n            if(this.state.newUrl === \"/default\")\n            {\n                url = \"/\"\n            }\n            else if(this.state.newUrl === \"/\")\n            {\n                url = \"/default\"\n            }\n            else\n            {\n                url = \"/default\"\n            }\n        }\n    \n        this.setState({newUrl:url})\n    }\n\n   \n\n    render(){\n\n        return(\n            <BrowserRouter>\n            {this.state.newUrl ?<Redirect to={this.state.newUrl}/> : null}\n            <Switch>\n            <Route exact path='/API/Doc' component={APIDocMainPage}/>\n            <div className=\"MainBody\" onClick={this.onClickHandler} ref={this.containerLayout} >  \n                {this.state.toggleScreenshotPicker? <ScreenshotContainer closeScreenshotPicker={this.closeScreenshotPicker} getSreenshotArea={this.getSreenshotArea}/>:null}   \n                {this.createChatChannel()}\n                <ChatRoom unreadMessage={this.countUnreadMessage()} userID={this.state.clientIP} getChatChannel={this.getChatChannel} queryStage={this.state.queryStage}/>\n                <div className=\"UpHeader\"> \n                    <UpBanner getLogoClick={this.getLogoClick} IntroListShowOrHide={this.state.showIntroList} getSearchInfo={this.getSearchInfo} ipAddress={serverIP}/> \n                    <IntroList showOrHide={this.state.windowSize === \"small\" ? this.state.showIntroList:true} windowSize={this.state.windowSize}/>\n                </div>\n                <div className=\"MainContainer\" >     \n                    <div className=\"BufferArea\"/>\n                    <Route exact path='/demoapp/' render={props=>(<HomeBody {...props} windowSize={this.state.windowSize}/>)}/>\n                    <Route exact path='/' render={props=>(<HomeBody {...props} windowSize={this.state.windowSize}/>)}/>\n                    <Route path='/default' render={props=>(<HomeBody {...props} windowSize={this.state.windowSize}/>)}/>\n                    <Route path='/Movie/Workinfo/:movie_id' component={MovieWorkInfoMainBody}/>\n                    <Route path='/Event/:Event_SysID' component={EventPage}/>\n                    <Route path='/Introduction/:FirstStageRoute/:SecondStageRoute/:StaticPage_SysID' component={EventPage}/>\n                    <Route path='/SearchResult/searchType/:searchType/limit/:limit/page/:page/query/:query' component={ResultListMainBody}/>\n                </div>\n                <div className=\"BackgroundImage\" >  \n                </div>             \n            </div>\n          \n            </Switch>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default MainBody\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport MainBody from './MainBody/MainBody'\n\n\n\nfunction App() { \n    return (\n        <div className=\"App\" >         \n            <MainBody/>           \n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","let cW = 400\nlet cH = 300\n\nmodule.exports = {    \n    CellRef:[\n        {\n            no:0,\n            width:cW*2,\n            height:cH,\n            top:0,\n            left:400\n        },\n        {\n            no:1,\n            width:cW,\n            height:cH,\n            top:cH,\n            left:400\n        },\n        {\n            no:2,\n            width:cW,\n            height:cH,\n            top:cH,\n            left:400+cW\n        },\n        {\n            no:3,\n            width:cW,\n            height:cH,\n            top:0,\n            left:400+cW*2\n        },\n        {\n            no:4,\n            width:cW,\n            height:cH,\n            top:cH,\n            left:400+cW*2\n        },\n        {\n            no:5,\n            width:cW,\n            height:cH*2,\n            top:0,\n            left:400+cW*3\n        }\n    ]\n}","module.exports = {\n    APIDoc:{\n        mainTitle:\"台灣華語電影資料庫 示範用 API 使用說明\",\n        mainText:\"本示範資料庫建置有資料介接功能 (API)。以下為各API之說明\",\n        paragraph:[\n            {\n                number:\"1\",\n                pTitle:\"電影資料查詢\",\n                pText:\"查詢電影資料 API，有下列5隻：\",\n                subParagraph:[\n                    {\n                        number:\"1.1\",\n                        spTitle:\"電影資料簡目搜尋 API (全欄位)\",\n                        spText:\"使用者輸入查詢字詞、每頁筆數、第幾頁、排序欄位、排序方式等參數後，API將以輸入字詞搜尋電影權威資料內所有欄位，搜尋後回傳與此字詞相關的電影簡目資料\",\n                        spUrl:\"/api/movie/basicQuery/frontend/limit/:limitNumber/pageNumber/:pageNumber/orderColumn/:orderColumn/orderType/:orderType/query/:query\",\n                        inputTableText:null,\n                        inputTable:[\n                            {\n                                iTitle:\"limitNumber\",\n                                iType:\"Integer\",\n                                iText:\"<div>回傳每頁筆數：有時搜尋結果會有幾百幾千筆，所以API會分頁回傳。此參數設定回傳結果一頁有幾筆資料。<p>允許數值：此數值為大於0正整數，無上限。</p></div>\"\n                            },\n                            {\n                                iTitle:\"pageNumber\",\n                                iType:\"Integer\",\n                                iText:\"<div>回傳第幾頁資料：有時搜尋結果會有幾百幾千筆，所以API會分頁回傳。此參數設定要回傳搜尋結果的第幾頁資料。<p>允許數值：此數值為大於0正整數，上限不超過搜尋結果總筆數除以每頁筆數。</p></div>\"\n                            },\n                            {\n                                iTitle:\"orderColumn\",\n                                iType:\"String\",\n                                iText:\"<div>排序欄位：此參數為欄位名，設定參數後系統會將搜尋結果依該欄位進行升冪或降冪排序。<p>允許數值：符合之欄位名，<code>Movie_SysID</code> (系統識別號)、<code>Movie_SubCategoryOne</code>(電影種類-長短片)、<code>Movie_SubCategoryTwo</code> (電影種類)、<code>Movie_TitleMain</code> (電影主要名稱)、<code>Movie_TitleTranslation</code> (電影翻譯名稱)、<code>Movie_TitleOther</code> (電影其他名稱)、<code>Movie_ProductionDate</code> (電影出品日期)、<code>Movie_ProductionLocation</code> (電影製作國家)、<code>Movie_ProductionCompany</code> (電影製作公司)、<code>Movie_Producer</code> (電影製作者)、<code>Movie_DramaContent</code> (電影劇情大綱)、<code>Movie_Rating</code> (電影分級)、<code>Movie_Language</code> (電影語言)。</p></div>\"\n                            },\n                            {\n                                iTitle:\"orderType\",\n                                iType:\"String\",\n                                iText:\"<div>排序方式：設定搜尋果為升冪或降冪排序 (依orderColumn欄位)。<p>允許數值：<code>asc</code> (升冪)、<code>desc</code>(降冪)</p></div>\"\n                            },\n                            {\n                                iTitle:\"query\",\n                                iType:\"ObjectArray\",\n                                iText:\"<div>搜尋字詞：使用者於此設定想要查詢的關鍵字，因本隻API允許複數關鍵字的搜尋，所以回傳為字詞組成的陣列。<p>允許數值：符合下列形式之物件陣列： <code>{`[{boolean:BOOLEAN1,keyword:KEYWORD1},{boolean:BOOLEAN2,keyword:KEYWORD2},...]`}</code>，並且須將此物件陣列經由 <code> URI 加密為字串</code>始傳入API。</p><p>物件屬性：</p><p><code>boolean</code>: 為此關鍵字與其他關鍵字之關係是 <code>AND</code> (交集) 或 <code>OR</code> (聯集)。</p><p><code>keyword</code>: 為使用者想搜尋的關鍵字，一個關鍵字的中文字數勿超過50字。</p></div>\"\n                            }\n                        ],\n                        outputTableText:\"本隻API呼叫成功後，搜尋結果將會以陣列回傳，每筆資料為此陣列中的一個物件，資料的欄位以物件屬性呈現，以下說明各物件屬性 (也就是資料欄位)\",\n                        outputTable:[\n                            {\n                                iTitle:\"Movie_SysID\",\n                                iType:\"String\",\n                                iText:\"<div>電影系統識別號：該筆電影的系統唯一ID，藉由此ID可再進一步查詢該電影的細節內容、演職員表、相關藏品等。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_SubCategoryOne\",\n                                iType:\"String\",\n                                iText:\"<div>電影種類 (長短片)：該電影是長片或短片。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_SubCategoryTwo\",\n                                iType:\"String\",\n                                iText:\"<div>電影種類：該電影的種類，如劇情片、紀錄片等。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_TitleMain\",\n                                iType:\"String\",\n                                iText:\"<div>電影主要片名：該電影的主要片名。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_TitleTranslation\",\n                                iType:\"String\",\n                                iText:\"<div>電影翻譯片名：該電影的英譯或其他語言的譯名。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_TitleOther\",\n                                iType:\"String\",\n                                iText:\"<div>電影其他片名：該電影其他片名。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_ProductionDate\",\n                                iType:\"String\",\n                                iText:\"<div>電影出品日期：該電影的出品日期。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_ProductionLocation\",\n                                iType:\"String\",\n                                iText:\"<div>電影出品國家：該電影的出品國家。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_ProductionCompany\",\n                                iType:\"String\",\n                                iText:\"<div>電影製作公司：該電影的製作公司。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_Producer\",\n                                iType:\"String\",\n                                iText:\"<div>電影製作人：該電影的製作人。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_DramaContent\",\n                                iType:\"String\",\n                                iText:\"<div>電影劇情大綱：該電影的劇情介紹。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_Rating\",\n                                iType:\"String\",\n                                iText:\"<div>電影分級：該電影的分級。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_Language\",\n                                iType:\"String\",\n                                iText:\"<div>電影語言：該電影的語言。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_TotalCount\",\n                                iType:\"String\",\n                                iText:\"<div>搜尋結果總筆數：本次搜尋所搜尋到的電影總筆數。</div>\"\n                            },\n                        ]\n\n                    },\n                    {\n                        number:\"1.2\",\n                        spTitle:\"電影資料簡目搜尋 API (個別欄位)\",\n                        spText:\"使用者輸入查詢字詞(含指定搜尋欄位)、每頁筆數、第幾頁、排序欄位、排序方式等參數後，API將以輸入字詞搜尋電影權威資料內指定搜尋欄位，搜尋後回傳與此字詞相關的電影簡目資料\",\n                        spUrl:\"/api/movie/advanceQuery/frontend/limit/:limitNumber/pageNumber/:pageNumber/orderColumn/:orderColumn/orderType/:orderType/query/:query\",\n                        inputTableText:null,\n                        inputTable:[\n                            {\n                                iTitle:\"limitNumber\",\n                                iType:\"Integer\",\n                                iText:\"<div>回傳每頁筆數：有時搜尋結果會有幾百幾千筆，所以API會分頁回傳。此參數設定回傳結果一頁有幾筆資料。<p>允許數值：此數值為大於0正整數，無上限。</p></div>\"\n                            },\n                            {\n                                iTitle:\"pageNumber\",\n                                iType:\"Integer\",\n                                iText:\"<div>回傳第幾頁資料：有時搜尋結果會有幾百幾千筆，所以API會分頁回傳。此參數設定要回傳搜尋結果的第幾頁資料。<p>允許數值：此數值為大於0正整數，上限不超過搜尋結果總筆數除以每頁筆數。</p></div>\"\n                            },\n                            {\n                                iTitle:\"orderColumn\",\n                                iType:\"String\",\n                                iText:\"<div>排序欄位：此參數為欄位名，設定參數後系統會將搜尋結果依該欄位進行升冪或降冪排序。<p>允許數值：符合之欄位名，<code>Movie_SysID</code> (系統識別號)、<code>Movie_SubCategoryOne</code>(電影種類-長短片)、<code>Movie_SubCategoryTwo</code> (電影種類)、<code>Movie_TitleMain</code> (電影主要名稱)、<code>Movie_TitleTranslation</code> (電影翻譯名稱)、<code>Movie_TitleOther</code> (電影其他名稱)、<code>Movie_ProductionDate</code> (電影出品日期)、<code>Movie_ProductionLocation</code> (電影製作國家)、<code>Movie_ProductionCompany</code> (電影製作公司)、<code>Movie_Producer</code> (電影製作者)、<code>Movie_DramaContent</code> (電影劇情大綱)、<code>Movie_Rating</code> (電影分級)、<code>Movie_Language</code> (電影語言)。</p></div>\"\n                            },\n                            {\n                                iTitle:\"orderType\",\n                                iType:\"String\",\n                                iText:\"<div>排序方式：設定搜尋果為升冪或降冪排序 (依orderColumn欄位)。<p>允許數值：<code>asc</code> (升冪)、<code>desc</code>(降冪)</p></div>\"\n                            },\n                            {\n                                iTitle:\"query\",\n                                iType:\"ObjectArray\",\n                                iText:\"<div>搜尋字詞：使用者於此設定想要查詢的關鍵字，因本隻API允許複數關鍵字的搜尋，所以回傳為字詞組成的陣列。<p>允許數值：符合下列形式之物件陣列： <code>{`[{boolean:BOOLEAN1, keyword:KEYWORD1, columnName:ColumnName1, operator:Operator1},{boolean:BOOLEAN2, keyword:KEYWORD2, columnName:ColumnName2, operator:Operator2},...]`}</code>，並且須將此物件陣列經由 <code> URI 加密為字串</code>始傳入API。</p><p>物件屬性：</p><p><code>boolean</code>: 為此關鍵字與其他關鍵字之關係是 <code>AND</code> (交集) 或 <code>OR</code> (聯集)。</p><p><code>keyword</code>: 為使用者想搜尋的關鍵字，一個關鍵字的中文字數勿超過50字。</p><p><code>columnName</code>: 為使用者想搜尋的指定欄位，輸入該欄位的名稱：<code>Movie_SysID</code> (系統識別號)、<code>Movie_SubCategoryOne</code>(電影種類-長短片)、<code>Movie_SubCategoryTwo</code> (電影種類)、<code>Movie_TitleMain</code> (電影主要名稱)、<code>Movie_TitleTranslation</code> (電影翻譯名稱)、<code>Movie_TitleOther</code> (電影其他名稱)、<code>Movie_ProductionDate</code> (電影出品日期)、<code>Movie_ProductionLocation</code> (電影製作國家)、<code>Movie_ProductionCompany</code> (電影製作公司)、<code>Movie_Producer</code> (電影製作者)、<code>Movie_DramaContent</code> (電影劇情大綱)、<code>Movie_Rating</code> (電影分級)、<code>Movie_Language</code> (電影語言)。</p><p><code>operator</code>: 搜尋字於該欄位的搜尋邏輯，可輸入<code>Like</code>(包含)、<code>Equal</code>(等於)、<code>Greater</code>(大於)、<code>Smaller</code>(小於) 等。</p></div>\"\n                            }\n                        ],\n                        outputTableText:\"本隻API呼叫成功後，搜尋結果將會以陣列回傳，每筆資料為此陣列中的一個物件，資料的欄位以物件屬性呈現，以下說明各物件屬性 (也就是資料欄位)\",\n                        outputTable:[\n                            {\n                                iTitle:\"Movie_SysID\",\n                                iType:\"String\",\n                                iText:\"<div>電影系統識別號：該筆電影的系統唯一ID，藉由此ID可再進一步查詢該電影的細節內容、演職員表、相關藏品等。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_SubCategoryOne\",\n                                iType:\"String\",\n                                iText:\"<div>電影種類 (長短片)：該電影是長片或短片。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_SubCategoryTwo\",\n                                iType:\"String\",\n                                iText:\"<div>電影種類：該電影的種類，如劇情片、紀錄片等。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_TitleMain\",\n                                iType:\"String\",\n                                iText:\"<div>電影主要片名：該電影的主要片名。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_TitleTranslation\",\n                                iType:\"String\",\n                                iText:\"<div>電影翻譯片名：該電影的英譯或其他語言的譯名。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_TitleOther\",\n                                iType:\"String\",\n                                iText:\"<div>電影其他片名：該電影其他片名。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_ProductionDate\",\n                                iType:\"String\",\n                                iText:\"<div>電影出品日期：該電影的出品日期。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_ProductionLocation\",\n                                iType:\"String\",\n                                iText:\"<div>電影出品國家：該電影的出品國家。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_ProductionCompany\",\n                                iType:\"String\",\n                                iText:\"<div>電影製作公司：該電影的製作公司。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_Producer\",\n                                iType:\"String\",\n                                iText:\"<div>電影製作人：該電影的製作人。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_DramaContent\",\n                                iType:\"String\",\n                                iText:\"<div>電影劇情大綱：該電影的劇情介紹。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_Rating\",\n                                iType:\"String\",\n                                iText:\"<div>電影分級：該電影的分級。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_Language\",\n                                iType:\"String\",\n                                iText:\"<div>電影語言：該電影的語言。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_TotalCount\",\n                                iType:\"String\",\n                                iText:\"<div>搜尋結果總筆數：本次搜尋所搜尋到的電影總筆數。</div>\"\n                            },\n                        ]\n\n                    },\n                    {\n                        number:\"1.3\",\n                        spTitle:\"電影權威資料 詳細資料 API\",\n                        spText:\"使用者輸入電影的系統識別號後，API即回傳此部的電影詳細資料 (不包括演員表、職員表、相關藏品)\",\n                        spUrl:\"/api/movie/fetch/MovieMainInfo/:Movie_SysID\",\n                        inputTableText:null,\n                        inputTable:[\n                            {\n                                iTitle:\"Movie_SysID\",\n                                iType:\"String\",\n                                iText:\"<div>電影系統識別號：每部電影權威資料的識別ID。</div>\"\n                            }\n                        ],\n                        outputTableText:\"本隻API呼叫成功後，搜尋結果將會以陣列回傳，電影詳細資料位於陣列第一個物件 (array[0])，資料的欄位以物件屬性呈現，以下說明各物件屬性 (也就是資料欄位)\",\n                        outputTable:[\n                            {\n                                iTitle:\"Movie_SysID\",\n                                iType:\"String\",\n                                iText:\"<div>電影系統識別號：該筆電影的系統唯一ID，藉由此ID可再進一步查詢該電影的細節內容、演職員表、相關藏品等。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_SubCategoryOne\",\n                                iType:\"String\",\n                                iText:\"<div>電影種類 (長短片)：該電影是長片或短片。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_SubCategoryTwo\",\n                                iType:\"String\",\n                                iText:\"<div>電影種類：該電影的種類，如劇情片、紀錄片等。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_TitleMain\",\n                                iType:\"String\",\n                                iText:\"<div>電影主要片名：該電影的主要片名。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_TitleTranslation\",\n                                iType:\"String\",\n                                iText:\"<div>電影翻譯片名：該電影的英譯或其他語言的譯名。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_TitleOther\",\n                                iType:\"String\",\n                                iText:\"<div>電影其他片名：該電影其他片名。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_ProductionDate\",\n                                iType:\"String\",\n                                iText:\"<div>電影出品日期：該電影的出品日期。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_ProductionLocation\",\n                                iType:\"String\",\n                                iText:\"<div>電影出品國家：該電影的出品國家。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_ProductionCompany\",\n                                iType:\"String\",\n                                iText:\"<div>電影製作公司：該電影的製作公司。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_Producer\",\n                                iType:\"String\",\n                                iText:\"<div>電影製作人：該電影的製作人。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_DramaContent\",\n                                iType:\"String\",\n                                iText:\"<div>電影劇情大綱：該電影的劇情介紹。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_Rating\",\n                                iType:\"String\",\n                                iText:\"<div>電影分級：該電影的分級。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_Language\",\n                                iType:\"String\",\n                                iText:\"<div>電影語言：該電影的語言。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_TotalCount\",\n                                iType:\"String\",\n                                iText:\"<div>搜尋結果總筆數：本次搜尋所搜尋到的電影總筆數。</div>\"\n                            },\n                        ]\n                    },\n                    {\n                        number:\"1.4\",\n                        spTitle:\"電影權威資料 電影演員表 API\",\n                        spText:\"使用者輸入電影的系統識別號後，API即回傳此部的電影演員表 (不包括職員表、相關藏品、主要資訊)\",\n                        spUrl:\"/api/movie/fetch/MovieActorList/:Movie_SysID\",\n                        inputTableText:null,\n                        inputTable:[\n                            {\n                                iTitle:\"Movie_SysID\",\n                                iType:\"String\",\n                                iText:\"<div>電影系統識別號：每部電影權威資料的識別ID。</div>\"\n                            }\n                        ],\n                        outputTableText:\"本隻API呼叫成功後，搜尋結果將會以陣列回傳，此部電影的每個演員資料都是陣列中的一個物件，資料的欄位以物件屬性呈現，以下說明各物件屬性 (也就是資料欄位)\",\n                        outputTable:[\n                            {\n                                iTitle:\"Movie_Unit\",\n                                iType:\"String\",\n                                iText:\"<div>電影單元：此演員是演出本部電影的哪一個單元 (如《大輪迴》中的<第一世>)。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_ActorName\",\n                                iType:\"String\",\n                                iText:\"<div>演員姓名：演員的姓名，如：林青霞。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_RoleName\",\n                                iType:\"String\",\n                                iText:\"<div>腳色名稱：演員於本片飾演的腳色名稱，如：東方不敗。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_RoleDescript\",\n                                iType:\"String\",\n                                iText:\"<div>腳色說明：說明該腳色，如：東方不敗，本片主要反派。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_ActorNote\",\n                                iType:\"String\",\n                                iText:\"<div>備註說明：本筆演員資料的其他說明。</div>\"\n                            }\n                        ]\n\n                    },\n                    {\n                        number:\"1.5\",\n                        spTitle:\"電影權威資料 電影職員表 API\",\n                        spText:\"使用者輸入電影的系統識別號後，API即回傳此部的電影職員表 (不包括演員表、相關藏品、主要資訊)\",\n                        spUrl:\"/api/movie/fetch/MovieStaffList/:Movie_SysID\",\n                        inputTableText:null,\n                        inputTable:[\n                            {\n                                iTitle:\"Movie_SysID\",\n                                iType:\"String\",\n                                iText:\"<div>電影系統識別號：每部電影權威資料的識別ID。</div>\"\n                            }\n                        ],\n                        outputTableText:\"本隻API呼叫成功後，搜尋結果將會以陣列回傳，此部電影的每個職員資料都是陣列中的一個物件，資料的欄位以物件屬性呈現，以下說明各物件屬性 (也就是資料欄位)\",\n                        outputTable:[\n                            {\n                                iTitle:\"Movie_Unit\",\n                                iType:\"String\",\n                                iText:\"<div>電影單元：此工作人員是參與本部電影的哪一個單元 (如《大輪迴》中的<第一世>)。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_Position\",\n                                iType:\"String\",\n                                iText:\"<div>職位名稱：此工作人員於本片的職稱，如：導演</div>\"\n\n                            },\n                            {\n                                iTitle:\"Movie_StaffName\",\n                                iType:\"String\",\n                                iText:\"<div>職員姓名：職員的姓名，如：林福地。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_Company\",\n                                iType:\"String\",\n                                iText:\"<div>公司名稱：有些工作執行可能是由外包公司進行，非個人，如：臺北沖印公司。</div>\"\n                            },\n                            {\n                                iTitle:\"Movie_MusicTitle\",\n                                iType:\"String\",\n                                iText:\"<div>配樂曲名：如該工作人員為參與本部電影的配樂方面工作，則說明其參與的是那首配樂，如：<樂逍遙>。</div>\"\n                            }\n                        ]\n                    }\n                    \n                ]\n            }\n        ]\n    }\n}","module.exports = {\n    serverIP:'https://3.12.154.48:5000'\n}"],"sourceRoot":""}